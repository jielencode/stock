/**   * @(#) project: zc_xa* @(#) file: IZcPProMakeServiceDelegate.java* * Copyright 2010 UFGOV, Inc. All rights reserved.* UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.* */package com.ufgov.zc.common.zc.publish;import java.math.BigDecimal;import java.sql.SQLException;import java.util.List;import com.ufgov.zc.common.system.Publishable;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.system.dto.PrintObject;import com.ufgov.zc.common.system.model.AsFile;import com.ufgov.zc.common.zc.exception.ZcBudgetInterfaceException;import com.ufgov.zc.common.zc.model.ApArticle;import com.ufgov.zc.common.zc.model.ZcBMerchandise;import com.ufgov.zc.common.zc.model.ZcPProBaoJia;import com.ufgov.zc.common.zc.model.ZcPProMake;import com.ufgov.zc.common.zc.model.ZcPProMitem;public interface IZcPProMakeServiceDelegate extends Publishable {  public List getZcPProMake(ElementConditionDto dto, RequestMeta meta) throws SQLException;  public List getZcPProMakeXieYi(ElementConditionDto dto, RequestMeta meta) throws SQLException;  public ZcPProMake updateZcPProMakeFN(ZcPProMake zcPProMake, boolean flag, String serverAdd, RequestMeta requestMeta) throws Exception;  public ZcPProMake updateZcPProMakeCodeFN(ZcPProMake zcPProMake, RequestMeta requestMeta) throws Exception;  /*   * 追加资金模块，要做的工作是保存追加的资金状态，   */  //  public ZcPProMake updateZcPProMake(ZcPProMake zcPProMake, RequestMeta requestMeta) throws Exception;  public List getZcPProMitem(String zcMakeCode, RequestMeta requestMeta);  public List getZcPProMitemMer(ZcPProMitem mItem, RequestMeta requestMeta);  public List getZcPProMitemBi(String zcMakeCode, boolean flag, RequestMeta requestMeta);  public ZcPProMake selectByPrimaryKey(String zcMakeCode, RequestMeta requestMeta);  public void updateZcPProMitemFN(ZcPProMitem mitem, RequestMeta meta);  public ZcPProMake updateZcXYPProMakeFN(ZcPProMake zcPProMake, RequestMeta requestMeta) throws Exception;  /*   * 获取协议竞价对象   */  public ZcPProMake selectXyByKey(ElementConditionDto dto, RequestMeta requestMeta);  public void deleteByPrimaryKeyFN(String zcMakeCode, boolean flag, String serverAdd, RequestMeta requestMeta) throws Exception;  public ZcPProMake newCommitFN(ZcPProMake currentObject, boolean flag, String serverAdd, RequestMeta requestMeta) throws Exception;  public ZcPProMake untreadFN(ZcPProMake make, RequestMeta requestMeta);  public ZcPProMake unAuditFN(ZcPProMake make, RequestMeta requestMeta);  public ZcPProMake auditFN(ZcPProMake make, RequestMeta requestMeta);  public ZcPProMake callbackFN(ZcPProMake make, RequestMeta requestMeta);  public void updateBaoJia(ZcPProMake make, RequestMeta requestMeta);  public List findTransData(ElementConditionDto dto, RequestMeta meta);  public String importJingJiaTransData(ZcPProMake make, RequestMeta meta);  public List getMitemBiWithHtBi(ElementConditionDto dto, RequestMeta meta);  public ZcPProMake updateZcPProMakeWithStatus(ZcPProMake make, RequestMeta meta);  public void interruptZcPProMake(ZcPProMake make, RequestMeta meta);  public ZcPProMake CancelMakeFN(ZcPProMake make, RequestMeta meta) throws ZcBudgetInterfaceException;  public PrintObject genZcPProMakePrintObject(ZcPProMake make, RequestMeta requestMeta);  public ZcPProMake selectXyByKeyForProvider(ElementConditionDto dto, RequestMeta requestMeta);  //  public boolean outputJJGonggaoP(ZcPProMake make, RequestMeta requestMeta);  //  //  public boolean outputJJGonggaoC(ZcPProMake make, RequestMeta requestMeta);  public List findBulletinRelationTransData(ElementConditionDto dto, RequestMeta meta);  public String insertBulletinRelationTransData(ApArticle article, RequestMeta meta);  public String insertResultRelationTransData(ApArticle article, RequestMeta meta);  public List findResultRelationTransData(ElementConditionDto dto, RequestMeta meta);  public AsFile getJingJiaBidWordContent(String makeCode, RequestMeta requestMeta, String templeId, boolean isWaitFrelease);  public AsFile getJingJiaWidWordContent(String makeCode, RequestMeta requestMeta, String templeId);  public List findTransDataForXieyiGongHuo(ElementConditionDto dto, RequestMeta meta);  public void addBaojia(ZcPProBaoJia baojia, RequestMeta meta);  public ZcBMerchandise getMerchandiseInfo(String zcMerCode, RequestMeta meta);  public String chackBiMoney(ZcPProMake make, RequestMeta requestMeta);  public int getJjPinPNum(String catalogue, ElementConditionDto dto, RequestMeta requestMeta);  public BigDecimal getJjPricQuota(ElementConditionDto dto, RequestMeta requestMeta);  public List getZcPProMakeNoHt(ElementConditionDto dto, RequestMeta meta);  public List queryExportsDatas(ElementConditionDto dto, RequestMeta meta);  public String importTransDatasFN(ZcPProMake make, RequestMeta meta);  public void sendToZhuren(ZcPProMake make, RequestMeta meta);}