/**    * @(#) project: GK * @(#) file: IZcEbEvalServiceDelegate.java *  * Copyright 2010 UFGOV, Inc. All rights reserved. * UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms. *  */package com.ufgov.zc.common.zc.publish;import java.util.List;import java.util.Map;import com.ufgov.zc.common.system.Publishable;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.system.dto.PrintObject;import com.ufgov.zc.common.zc.model.ZcEbEvalBidTeamMember;import com.ufgov.zc.common.zc.model.ZcEbEvalPack;import com.ufgov.zc.common.zc.model.ZcEbEvalReport;import com.ufgov.zc.common.zc.model.ZcEbExpertChengNuo;import com.ufgov.zc.common.zc.model.ZcEbExpertOpinion;import com.ufgov.zc.common.zc.model.ZcEbPack;/** *  * @ClassName: IZcEbEvalServiceDelegate *  * @Description: 评标模块业务代理接口。 *  * @date: 2010-4-21 下午03:34:41 *  * @version: V1.0 *  * @since: 1.0 *  * @author: fanpl *  * @modify: */public interface IZcEbEvalServiceDelegate extends Publishable {	// -------------------------------------------------------获得当前评审标段------------------------------------------------	List getZcEbEvalPackList(ElementConditionDto dto, RequestMeta meta);	// -------------------------------------------------------获得评标结果列表标段------------------------------------------------	public List getZcEbEvalItemResultList(Map map, RequestMeta meta);	// 获得该标段下的评审专家	public List getZcEbEvalExpertList(ElementConditionDto dto, RequestMeta meta);	public List getZcEbEvalFormulaItemList(Map map, RequestMeta meta);	// -------------------------------------------------------更新专家评审结果------------------------------------------------	public void saveEvalItemResultList(List list, RequestMeta meta);	public void deleteEvalItemResultList(Map map, RequestMeta meta);	public void insertEvalItemResultList(List list, RequestMeta meta);	// 批量插入供应商的评审结果	public void insertProEvalItemResultList(Map map, List providerList,			RequestMeta meta);	// 获得评标的报名供应商，包含专家对供应商的评审情况	List getEvalPackProviderList(Map map, RequestMeta meta);	// 获得报名供应商的情况	List getProviderList(Map map, RequestMeta meta);	// 获得标段供应商评审最总汇总结果（分两类：符合性评审最终结果，技术打法最终评审结果）	List getZcEbEvalPackSumResult(Map map, RequestMeta meta);	/**	 * 	 * 	 * 	 * @Description: 读取专家评审结果明细。（根据dto传入的参数可以设置）	 * 	 * @return List 专家评审得出的指标明细项结果列表。	 * 	 * @since 1.0	 */	List getZcEbExpertEvalResultList(ElementConditionDto dto, RequestMeta meta);	/**	 * 	 * 	 * 	 * @Description:获取评审结果明细	 * 	 * @return List 返回类型	 * 	 * @since 1.0	 */	List getZcEbPackEvalResultList(ElementConditionDto dto, RequestMeta meta);	List getExpertEvalPackResList(Map map, RequestMeta meta);	/**	 * 	 * 	 * 	 * @Description: 根据专家评审的分包明细结果生成专家评审标段汇总结果。	 * 	 * @return String 空則表示成功，否則返回错误信息。	 * 	 * @since 1.0	 */	String genExpertEvalPackSumResult(Map map, RequestMeta meta);	/**	 * 	 * 	 * 	 * @Description: 汇总专家评审结果为最终结果。	 * 	 * @return String 汇总操作成功则空，否则返回相关提示信息。	 * 	 * @since 1.0	 */	List genPackFinalSumResult(Map map, List list, RequestMeta meta);	/**	 * 	 * 	 * 	 * @Description: 更新供应商标段评审汇总结果。	 * 	 * @return void 返回类型	 * 	 * @since 1.0	 */	void updateZcEbPackEvalFinalSumResultFN(List list, RequestMeta meta);	void deleteZcEbPackEvalFinalSumResult(Map map, RequestMeta meta);	String genProviderEvalResult(Map map, RequestMeta meta);	/*	 * 	 * ----------------------	 * 评审报告------------------------------------------------	 * ---------------------------------	 */	public List getZcEbEvalReportList(ElementConditionDto dto, RequestMeta meta);	public ZcEbEvalReport saveZcEbEvalReportFN(ZcEbEvalReport zcEbEvalReport,			RequestMeta meta);	public void deleteZcEbEvalReport(ZcEbEvalReport zcEbEvalReport,			RequestMeta meta);	public ZcEbEvalReport getZcEbEvalReport(String reportCode, RequestMeta meta);	public void deleteZcEbEvalReportFN(List list, RequestMeta meta);	ZcEbEvalReport newCommitFN(ZcEbEvalReport zcEbEvalReport, RequestMeta meta);// 送审	ZcEbEvalReport auditFN(ZcEbEvalReport zcEbEvalReport, RequestMeta meta);// 审核	ZcEbEvalReport unauditFN(ZcEbEvalReport zcEbEvalReport, RequestMeta meta);// 销审	ZcEbEvalReport untreadFN(ZcEbEvalReport zcEbEvalReport, RequestMeta meta);// 退回	ZcEbEvalReport callbackFN(ZcEbEvalReport zcEbEvalReport, RequestMeta meta);// 收回	public void newCommitFN(List zcEbEvalReportList, RequestMeta meta);	public void auditFN(List zcEbEvalReportList, RequestMeta meta);	public void unauditFN(List zcEbEvalReportList, RequestMeta meta);	public void untreadFN(List zcEbEvalReportList, RequestMeta meta);	public void callbackZcEbEvalReportFN(List zcEbEvalReportList,			RequestMeta meta);// 收回	public ZcEbEvalReport updateZcEbEvalStatus(ZcEbEvalReport zcEbEvalReport,			RequestMeta meta);	public void updateZcEbEvalStatus(List zcEbEvalReportList, RequestMeta meta);	public List getZcEbPackEvalResult(Map map, RequestMeta meta);	// 送采购单位确认	ZcEbEvalReport sendToProcurementUnitFN(ZcEbEvalReport bill,			RequestMeta requestMeta);	PrintObject genZcEbEvalReportPrintObject(ZcEbEvalReport zcEbEvalReport,			RequestMeta requestMeta);	/*	 * 	 * --------------------------------------------------评标参数--------------------	 * ------------------------------------------------------	 */	List getEvalParamResultList(Map map, RequestMeta meta);	List getEvalParamList(Map map, RequestMeta meta);	void insertEvalParamResultList(List list, RequestMeta meta);	void updateEvalParamResultList(List list, RequestMeta meta);	/*	 * 	 * --------------------------------------------------专家质疑--------------------	 * ------------------------------------------------------	 */	List getEbExpertOpinionList(Map map, RequestMeta meta);	ZcEbExpertOpinion getZcEbExpertOpinion(Map map, RequestMeta meta);	void SaveZcEbExpertOpinion(ZcEbExpertOpinion zcEbExpertOpinion,			RequestMeta meta);	/*	 * 	 * --------------------------------------------------打印评审数据------------------	 * --------------------------------------------------------	 */	List getZcEbEvalFormulaItemReportList(Map map, RequestMeta meta);	List getZcEbEvalResult(Map map, RequestMeta meta);	ZcEbEvalBidTeamMember getZcEbCurrExpertEvalProgress(ZcEbEvalPack evalPack,			RequestMeta requestMeta);	/*	 * 	 * --------------------------------------------------专家承诺--------------------	 * -------------------------------------------------------	 */	ZcEbExpertChengNuo getZcExpertChengNuo(Map map, RequestMeta meta);	void saveZcExpertChengNuo(ZcEbExpertChengNuo bill, RequestMeta meta);	void deleteZcExpertChengNuo(ZcEbExpertChengNuo bill, RequestMeta meta);  List queryExportsDatas(ElementConditionDto dto, RequestMeta meta);  String importTransDatasFN(ZcEbEvalReport bill, RequestMeta meta);  String saveOffLineEvalBidFN(List list, RequestMeta requestMeta);}