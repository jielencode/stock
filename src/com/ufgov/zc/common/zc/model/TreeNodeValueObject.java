/** * TreeNodeValueObject.java * com.ufgov.gk.common.zc.model * Administrator * 2010-5-6 */package com.ufgov.zc.common.zc.model;import java.io.Serializable;import java.util.ArrayList;import java.util.List;/** * @author Administrator * */public class TreeNodeValueObject extends ZcBaseBill implements Serializable {  /**   *    */  private static final long serialVersionUID = 4550849833570825792L;  /**   * 节点代码   */  private String code;  /**   * 节点名称   */  private String name;  /**   * 父节点代码   */  private String parentCode;  /**   * 孩子列表   */  private List childrenList = new ArrayList();  /**   * @return the code   */  public String getCode() {    return code;  }  /**   * @param code the code to set   */  public void setCode(String code) {    this.code = code;  }  /**   * @return the name   */  public String getName() {    return name;  }  /**   * @param name the name to set   */  public void setName(String name) {    this.name = name;  }  /**   * @return the parentCode   */  public String getParentCode() {    return parentCode;  }  /**   * @param parentCode the parentCode to set   */  public void setParentCode(String parentCode) {    this.parentCode = parentCode;  }  public void setChildrenList(List childrenList) {    this.childrenList = childrenList;  }  public List getChildrenList() {    return childrenList;  }  public String toString() {    if (this.code == null || "".equals(this.code.trim())) {      return this.name;    }    return "[" + this.code + "]" + this.name;  }  public int hashCode() {    final int prime = 31;    int result = 1;    result = prime * result + ((code == null) ? 0 : code.hashCode());    result = prime * result + ((name == null) ? 0 : name.hashCode());    //    result = prime * result + ((nd == null) ? 0 : nd.hashCode());    result = prime * result + ((parentCode == null) ? 0 : parentCode.hashCode());    return result;  }  public boolean equals(Object obj) {    if (this == obj)      return true;    if (obj == null)      return false;    if (getClass() != obj.getClass())      return false;    final TreeNodeValueObject other = (TreeNodeValueObject) obj;    if (code == null) {      if (other.code != null)        return false;    } else if (!code.equals(other.code))      return false;    if (name == null) {      if (other.name != null)        return false;    } else if (!name.equals(other.name))      return false;    if (nd != other.nd)      return false;    if (parentCode == null) {      if (other.parentCode != null)        return false;    } else if (!parentCode.equals(other.parentCode))      return false;    return true;  }}