package com.ufgov.zc.common.zc.model;import java.math.BigDecimal;import java.util.ArrayList;import java.util.Date;import java.util.HashMap;import java.util.Iterator;import java.util.List;import java.util.Map;public class ZcEbWenHaoToolExample {  /**   * This field was generated by Abator for iBATIS.   * This field corresponds to the database table ZC_EB_WEN_HAO_TOOL   *   * @abatorgenerated Fri Aug 26 16:42:18 CST 2011   */  protected String orderByClause;  /**   * This field was generated by Abator for iBATIS.   * This field corresponds to the database table ZC_EB_WEN_HAO_TOOL   *   * @abatorgenerated Fri Aug 26 16:42:18 CST 2011   */  protected List oredCriteria;  /**   * This method was generated by Abator for iBATIS.   * This method corresponds to the database table ZC_EB_WEN_HAO_TOOL   *   * @abatorgenerated Fri Aug 26 16:42:18 CST 2011   */  public ZcEbWenHaoToolExample() {    oredCriteria = new ArrayList();  }  /**   * This method was generated by Abator for iBATIS.   * This method corresponds to the database table ZC_EB_WEN_HAO_TOOL   *   * @abatorgenerated Fri Aug 26 16:42:18 CST 2011   */  protected ZcEbWenHaoToolExample(ZcEbWenHaoToolExample example) {    this.orderByClause = example.orderByClause;    this.oredCriteria = example.oredCriteria;  }  /**   * This method was generated by Abator for iBATIS.   * This method corresponds to the database table ZC_EB_WEN_HAO_TOOL   *   * @abatorgenerated Fri Aug 26 16:42:18 CST 2011   */  public void setOrderByClause(String orderByClause) {    this.orderByClause = orderByClause;  }  /**   * This method was generated by Abator for iBATIS.   * This method corresponds to the database table ZC_EB_WEN_HAO_TOOL   *   * @abatorgenerated Fri Aug 26 16:42:18 CST 2011   */  public String getOrderByClause() {    return orderByClause;  }  /**   * This method was generated by Abator for iBATIS.   * This method corresponds to the database table ZC_EB_WEN_HAO_TOOL   *   * @abatorgenerated Fri Aug 26 16:42:18 CST 2011   */  public List getOredCriteria() {    return oredCriteria;  }  /**   * This method was generated by Abator for iBATIS.   * This method corresponds to the database table ZC_EB_WEN_HAO_TOOL   *   * @abatorgenerated Fri Aug 26 16:42:18 CST 2011   */  public void or(Criteria criteria) {    oredCriteria.add(criteria);  }  /**   * This method was generated by Abator for iBATIS.   * This method corresponds to the database table ZC_EB_WEN_HAO_TOOL   *   * @abatorgenerated Fri Aug 26 16:42:18 CST 2011   */  public Criteria createCriteria() {    Criteria criteria = createCriteriaInternal();    if (oredCriteria.size() == 0) {      oredCriteria.add(criteria);    }    return criteria;  }  /**   * This method was generated by Abator for iBATIS.   * This method corresponds to the database table ZC_EB_WEN_HAO_TOOL   *   * @abatorgenerated Fri Aug 26 16:42:18 CST 2011   */  protected Criteria createCriteriaInternal() {    Criteria criteria = new Criteria();    return criteria;  }  /**   * This method was generated by Abator for iBATIS.   * This method corresponds to the database table ZC_EB_WEN_HAO_TOOL   *   * @abatorgenerated Fri Aug 26 16:42:18 CST 2011   */  public void clear() {    oredCriteria.clear();  }  /**   * This class was generated by Abator for iBATIS.   * This class corresponds to the database table ZC_EB_WEN_HAO_TOOL   *   * @abatorgenerated Fri Aug 26 16:42:18 CST 2011   */  public static class Criteria {    protected List criteriaWithoutValue;    protected List criteriaWithSingleValue;    protected List criteriaWithListValue;    protected List criteriaWithBetweenValue;    protected Criteria() {      super();      criteriaWithoutValue = new ArrayList();      criteriaWithSingleValue = new ArrayList();      criteriaWithListValue = new ArrayList();      criteriaWithBetweenValue = new ArrayList();    }    public boolean isValid() {      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0 || criteriaWithListValue.size() > 0      || criteriaWithBetweenValue.size() > 0;    }    public List getCriteriaWithoutValue() {      return criteriaWithoutValue;    }    public List getCriteriaWithSingleValue() {      return criteriaWithSingleValue;    }    public List getCriteriaWithListValue() {      return criteriaWithListValue;    }    public List getCriteriaWithBetweenValue() {      return criteriaWithBetweenValue;    }    protected void addCriterion(String condition) {      if (condition == null) {        throw new RuntimeException("Value for condition cannot be null");      }      criteriaWithoutValue.add(condition);    }    protected void addCriterion(String condition, Object value, String property) {      if (value == null) {        throw new RuntimeException("Value for " + property + " cannot be null");      }      Map map = new HashMap();      map.put("condition", condition);      map.put("value", value);      criteriaWithSingleValue.add(map);    }    protected void addCriterion(String condition, List values, String property) {      if (values == null || values.size() == 0) {        throw new RuntimeException("Value list for " + property + " cannot be null or empty");      }      Map map = new HashMap();      map.put("condition", condition);      map.put("values", values);      criteriaWithListValue.add(map);    }    protected void addCriterion(String condition, Object value1, Object value2, String property) {      if (value1 == null || value2 == null) {        throw new RuntimeException("Between values for " + property + " cannot be null");      }      List list = new ArrayList();      list.add(value1);      list.add(value2);      Map map = new HashMap();      map.put("condition", condition);      map.put("values", list);      criteriaWithBetweenValue.add(map);    }    protected void addCriterionForJDBCDate(String condition, Date value, String property) {      addCriterion(condition, new java.sql.Date(value.getTime()), property);    }    protected void addCriterionForJDBCDate(String condition, List values, String property) {      if (values == null || values.size() == 0) {        throw new RuntimeException("Value list for " + property + " cannot be null or empty");      }      List dateList = new ArrayList();      Iterator iter = values.iterator();      while (iter.hasNext()) {        dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));      }      addCriterion(condition, dateList, property);    }    protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {      if (value1 == null || value2 == null) {        throw new RuntimeException("Between values for " + property + " cannot be null");      }      addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);    }    public Criteria andWenHaoIdIsNull() {      addCriterion("WEN_HAO_ID is null");      return this;    }    public Criteria andWenHaoIdIsNotNull() {      addCriterion("WEN_HAO_ID is not null");      return this;    }    public Criteria andWenHaoIdEqualTo(BigDecimal value) {      addCriterion("WEN_HAO_ID =", value, "wenHaoId");      return this;    }    public Criteria andWenHaoIdNotEqualTo(BigDecimal value) {      addCriterion("WEN_HAO_ID <>", value, "wenHaoId");      return this;    }    public Criteria andWenHaoIdGreaterThan(BigDecimal value) {      addCriterion("WEN_HAO_ID >", value, "wenHaoId");      return this;    }    public Criteria andWenHaoIdGreaterThanOrEqualTo(BigDecimal value) {      addCriterion("WEN_HAO_ID >=", value, "wenHaoId");      return this;    }    public Criteria andWenHaoIdLessThan(BigDecimal value) {      addCriterion("WEN_HAO_ID <", value, "wenHaoId");      return this;    }    public Criteria andWenHaoIdLessThanOrEqualTo(BigDecimal value) {      addCriterion("WEN_HAO_ID <=", value, "wenHaoId");      return this;    }    public Criteria andWenHaoIdIn(List values) {      addCriterion("WEN_HAO_ID in", values, "wenHaoId");      return this;    }    public Criteria andWenHaoIdNotIn(List values) {      addCriterion("WEN_HAO_ID not in", values, "wenHaoId");      return this;    }    public Criteria andWenHaoIdBetween(BigDecimal value1, BigDecimal value2) {      addCriterion("WEN_HAO_ID between", value1, value2, "wenHaoId");      return this;    }    public Criteria andWenHaoIdNotBetween(BigDecimal value1, BigDecimal value2) {      addCriterion("WEN_HAO_ID not between", value1, value2, "wenHaoId");      return this;    }    public Criteria andNdIsNull() {      addCriterion("ND is null");      return this;    }    public Criteria andNdIsNotNull() {      addCriterion("ND is not null");      return this;    }    public Criteria andNdEqualTo(BigDecimal value) {      addCriterion("ND =", value, "nd");      return this;    }    public Criteria andNdNotEqualTo(BigDecimal value) {      addCriterion("ND <>", value, "nd");      return this;    }    public Criteria andNdGreaterThan(BigDecimal value) {      addCriterion("ND >", value, "nd");      return this;    }    public Criteria andNdGreaterThanOrEqualTo(BigDecimal value) {      addCriterion("ND >=", value, "nd");      return this;    }    public Criteria andNdLessThan(BigDecimal value) {      addCriterion("ND <", value, "nd");      return this;    }    public Criteria andNdLessThanOrEqualTo(BigDecimal value) {      addCriterion("ND <=", value, "nd");      return this;    }    public Criteria andNdIn(List values) {      addCriterion("ND in", values, "nd");      return this;    }    public Criteria andNdNotIn(List values) {      addCriterion("ND not in", values, "nd");      return this;    }    public Criteria andNdBetween(BigDecimal value1, BigDecimal value2) {      addCriterion("ND between", value1, value2, "nd");      return this;    }    public Criteria andNdNotBetween(BigDecimal value1, BigDecimal value2) {      addCriterion("ND not between", value1, value2, "nd");      return this;    }    public Criteria andWhNumberIsNull() {      addCriterion("WH_NUMBER is null");      return this;    }    public Criteria andWhNumberIsNotNull() {      addCriterion("WH_NUMBER is not null");      return this;    }    public Criteria andWhNumberEqualTo(BigDecimal value) {      addCriterion("WH_NUMBER =", value, "whNumber");      return this;    }    public Criteria andWhNumberNotEqualTo(BigDecimal value) {      addCriterion("WH_NUMBER <>", value, "whNumber");      return this;    }    public Criteria andWhNumberGreaterThan(BigDecimal value) {      addCriterion("WH_NUMBER >", value, "whNumber");      return this;    }    public Criteria andWhNumberGreaterThanOrEqualTo(BigDecimal value) {      addCriterion("WH_NUMBER >=", value, "whNumber");      return this;    }    public Criteria andWhNumberLessThan(BigDecimal value) {      addCriterion("WH_NUMBER <", value, "whNumber");      return this;    }    public Criteria andWhNumberLessThanOrEqualTo(BigDecimal value) {      addCriterion("WH_NUMBER <=", value, "whNumber");      return this;    }    public Criteria andWhNumberIn(List values) {      addCriterion("WH_NUMBER in", values, "whNumber");      return this;    }    public Criteria andWhNumberNotIn(List values) {      addCriterion("WH_NUMBER not in", values, "whNumber");      return this;    }    public Criteria andWhNumberBetween(BigDecimal value1, BigDecimal value2) {      addCriterion("WH_NUMBER between", value1, value2, "whNumber");      return this;    }    public Criteria andWhNumberNotBetween(BigDecimal value1, BigDecimal value2) {      addCriterion("WH_NUMBER not between", value1, value2, "whNumber");      return this;    }    public Criteria andFileTypeIsNull() {      addCriterion("FILE_TYPE is null");      return this;    }    public Criteria andFileTypeIsNotNull() {      addCriterion("FILE_TYPE is not null");      return this;    }    public Criteria andFileTypeEqualTo(String value) {      addCriterion("FILE_TYPE =", value, "fileType");      return this;    }    public Criteria andFileTypeNotEqualTo(String value) {      addCriterion("FILE_TYPE <>", value, "fileType");      return this;    }    public Criteria andFileTypeGreaterThan(String value) {      addCriterion("FILE_TYPE >", value, "fileType");      return this;    }    public Criteria andFileTypeGreaterThanOrEqualTo(String value) {      addCriterion("FILE_TYPE >=", value, "fileType");      return this;    }    public Criteria andFileTypeLessThan(String value) {      addCriterion("FILE_TYPE <", value, "fileType");      return this;    }    public Criteria andFileTypeLessThanOrEqualTo(String value) {      addCriterion("FILE_TYPE <=", value, "fileType");      return this;    }    public Criteria andFileTypeLike(String value) {      addCriterion("FILE_TYPE like", value, "fileType");      return this;    }    public Criteria andFileTypeNotLike(String value) {      addCriterion("FILE_TYPE not like", value, "fileType");      return this;    }    public Criteria andFileTypeIn(List values) {      addCriterion("FILE_TYPE in", values, "fileType");      return this;    }    public Criteria andFileTypeNotIn(List values) {      addCriterion("FILE_TYPE not in", values, "fileType");      return this;    }    public Criteria andFileTypeBetween(String value1, String value2) {      addCriterion("FILE_TYPE between", value1, value2, "fileType");      return this;    }    public Criteria andFileTypeNotBetween(String value1, String value2) {      addCriterion("FILE_TYPE not between", value1, value2, "fileType");      return this;    }    public Criteria andFileIdIsNull() {      addCriterion("FILE_ID is null");      return this;    }    public Criteria andFileIdIsNotNull() {      addCriterion("FILE_ID is not null");      return this;    }    public Criteria andFileIdEqualTo(String value) {      addCriterion("FILE_ID =", value, "fileId");      return this;    }    public Criteria andFileIdNotEqualTo(String value) {      addCriterion("FILE_ID <>", value, "fileId");      return this;    }    public Criteria andFileIdGreaterThan(String value) {      addCriterion("FILE_ID >", value, "fileId");      return this;    }    public Criteria andFileIdGreaterThanOrEqualTo(String value) {      addCriterion("FILE_ID >=", value, "fileId");      return this;    }    public Criteria andFileIdLessThan(String value) {      addCriterion("FILE_ID <", value, "fileId");      return this;    }    public Criteria andFileIdLessThanOrEqualTo(String value) {      addCriterion("FILE_ID <=", value, "fileId");      return this;    }    public Criteria andFileIdLike(String value) {      addCriterion("FILE_ID like", value, "fileId");      return this;    }    public Criteria andFileIdNotLike(String value) {      addCriterion("FILE_ID not like", value, "fileId");      return this;    }    public Criteria andFileIdIn(List values) {      addCriterion("FILE_ID in", values, "fileId");      return this;    }    public Criteria andFileIdNotIn(List values) {      addCriterion("FILE_ID not in", values, "fileId");      return this;    }    public Criteria andFileIdBetween(String value1, String value2) {      addCriterion("FILE_ID between", value1, value2, "fileId");      return this;    }    public Criteria andFileIdNotBetween(String value1, String value2) {      addCriterion("FILE_ID not between", value1, value2, "fileId");      return this;    }    public Criteria andGenDateIsNull() {      addCriterion("GEN_DATE is null");      return this;    }    public Criteria andGenDateIsNotNull() {      addCriterion("GEN_DATE is not null");      return this;    }    public Criteria andGenDateEqualTo(Date value) {      addCriterionForJDBCDate("GEN_DATE =", value, "genDate");      return this;    }    public Criteria andGenDateNotEqualTo(Date value) {      addCriterionForJDBCDate("GEN_DATE <>", value, "genDate");      return this;    }    public Criteria andGenDateGreaterThan(Date value) {      addCriterionForJDBCDate("GEN_DATE >", value, "genDate");      return this;    }    public Criteria andGenDateGreaterThanOrEqualTo(Date value) {      addCriterionForJDBCDate("GEN_DATE >=", value, "genDate");      return this;    }    public Criteria andGenDateLessThan(Date value) {      addCriterionForJDBCDate("GEN_DATE <", value, "genDate");      return this;    }    public Criteria andGenDateLessThanOrEqualTo(Date value) {      addCriterionForJDBCDate("GEN_DATE <=", value, "genDate");      return this;    }    public Criteria andGenDateIn(List values) {      addCriterionForJDBCDate("GEN_DATE in", values, "genDate");      return this;    }    public Criteria andGenDateNotIn(List values) {      addCriterionForJDBCDate("GEN_DATE not in", values, "genDate");      return this;    }    public Criteria andGenDateBetween(Date value1, Date value2) {      addCriterionForJDBCDate("GEN_DATE between", value1, value2, "genDate");      return this;    }    public Criteria andGenDateNotBetween(Date value1, Date value2) {      addCriterionForJDBCDate("GEN_DATE not between", value1, value2, "genDate");      return this;    }    public Criteria andGenUserIdIsNull() {      addCriterion("GEN_USER_ID is null");      return this;    }    public Criteria andGenUserIdIsNotNull() {      addCriterion("GEN_USER_ID is not null");      return this;    }    public Criteria andGenUserIdEqualTo(String value) {      addCriterion("GEN_USER_ID =", value, "genUserId");      return this;    }    public Criteria andGenUserIdNotEqualTo(String value) {      addCriterion("GEN_USER_ID <>", value, "genUserId");      return this;    }    public Criteria andGenUserIdGreaterThan(String value) {      addCriterion("GEN_USER_ID >", value, "genUserId");      return this;    }    public Criteria andGenUserIdGreaterThanOrEqualTo(String value) {      addCriterion("GEN_USER_ID >=", value, "genUserId");      return this;    }    public Criteria andGenUserIdLessThan(String value) {      addCriterion("GEN_USER_ID <", value, "genUserId");      return this;    }    public Criteria andGenUserIdLessThanOrEqualTo(String value) {      addCriterion("GEN_USER_ID <=", value, "genUserId");      return this;    }    public Criteria andGenUserIdLike(String value) {      addCriterion("GEN_USER_ID like", value, "genUserId");      return this;    }    public Criteria andGenUserIdNotLike(String value) {      addCriterion("GEN_USER_ID not like", value, "genUserId");      return this;    }    public Criteria andGenUserIdIn(List values) {      addCriterion("GEN_USER_ID in", values, "genUserId");      return this;    }    public Criteria andGenUserIdNotIn(List values) {      addCriterion("GEN_USER_ID not in", values, "genUserId");      return this;    }    public Criteria andGenUserIdBetween(String value1, String value2) {      addCriterion("GEN_USER_ID between", value1, value2, "genUserId");      return this;    }    public Criteria andGenUserIdNotBetween(String value1, String value2) {      addCriterion("GEN_USER_ID not between", value1, value2, "genUserId");      return this;    }    public Criteria andMemoIsNull() {      addCriterion("MEMO is null");      return this;    }    public Criteria andMemoIsNotNull() {      addCriterion("MEMO is not null");      return this;    }    public Criteria andMemoEqualTo(String value) {      addCriterion("MEMO =", value, "memo");      return this;    }    public Criteria andMemoNotEqualTo(String value) {      addCriterion("MEMO <>", value, "memo");      return this;    }    public Criteria andMemoGreaterThan(String value) {      addCriterion("MEMO >", value, "memo");      return this;    }    public Criteria andMemoGreaterThanOrEqualTo(String value) {      addCriterion("MEMO >=", value, "memo");      return this;    }    public Criteria andMemoLessThan(String value) {      addCriterion("MEMO <", value, "memo");      return this;    }    public Criteria andMemoLessThanOrEqualTo(String value) {      addCriterion("MEMO <=", value, "memo");      return this;    }    public Criteria andMemoLike(String value) {      addCriterion("MEMO like", value, "memo");      return this;    }    public Criteria andMemoNotLike(String value) {      addCriterion("MEMO not like", value, "memo");      return this;    }    public Criteria andMemoIn(List values) {      addCriterion("MEMO in", values, "memo");      return this;    }    public Criteria andMemoNotIn(List values) {      addCriterion("MEMO not in", values, "memo");      return this;    }    public Criteria andMemoBetween(String value1, String value2) {      addCriterion("MEMO between", value1, value2, "memo");      return this;    }    public Criteria andMemoNotBetween(String value1, String value2) {      addCriterion("MEMO not between", value1, value2, "memo");      return this;    }  }}