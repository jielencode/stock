package com.ufgov.zc.common.zc.checkrule;import java.math.BigDecimal;import java.util.HashMap;import java.util.Map;import com.ufgov.zc.common.zc.model.ZcPProMake;import com.ufgov.zc.common.zc.model.ZcPProMitem;/* * 西安省厅采购计划的校验提示规则实现类 * 具体校验规则: *  二、非协议、定点采购品目： *      3.工程类 *         a. 150万（不包含）以内的： *            采购方式：竞争性谈判。 *            采购类型：项目采购。 *         b. 150万（包含）以上的： *            采购方式：公开招标。 *            采购类型：项目采购。 * */public class ZcMakeXMGCCheckRuleBySX implements BaseRule {  private Map resultMap = new HashMap();  private BigDecimal limtItemSum = new BigDecimal(1500000);  public Map check(Map parameter) {    ZcPProMake resultMake = new ZcPProMake();    StringBuffer resInfo = new StringBuffer();    StringBuffer titleInfo = new StringBuffer();    ZcPProMake make = (ZcPProMake) parameter.get("data");    // 批复采购方式  (1公开招标,2邀请招标,3竞争性谈判,4单一来源采购,5询价,6其他)    String pifuMode = make.getZcPifuCgfs();    // 采购组织形式 (1集中采购,2部门集中采购,3分散采购)    String sequence = make.getZcMakeSequence();    // 采购类型 （G02定点采购,G01协议供货,Z01项目采购）    String fukuanType = make.getZcFukuanType();    // 代理机构名称    String ageyCode = make.getAgency();    ZcPProMitem item = (ZcPProMitem) parameter.get("itemInfo");    // 采购数量    int caigNum = item.getZcCaigNum().intValue();    // 采购金额    BigDecimal itemSum = item.getZcItemSum();    if (itemSum.compareTo(limtItemSum) == -1) {      titleInfo.append("{采购金额在150万（不包含）以下的}");      // 小于100万      if (!"Z01".equals(fukuanType)) {        // 采购类型 应该是 项目采购        resInfo.append("[采购类型]应采取[项目采购],");        resultMake.setZcFukuanType("Z01");      }      if (!"3".equals(pifuMode)) {        // 采购方式应该是 竞争性谈判        resInfo.append("[采购方式]应采取[竞争性谈判],");        resultMake.setZcPifuCgfs("3");      }    } else if (itemSum.compareTo(limtItemSum) == 0 || itemSum.compareTo(limtItemSum) == 1) {      titleInfo.append("{采购金额在150万（包含）以上的}");      //100万（包含）以上的      if (!"Z01".equals(fukuanType)) {        // 采购类型 应该是 项目采购        resInfo.append("[采购类型]应采取[项目采购],");        resultMake.setZcFukuanType("Z01");      }      if (!"1".equals(pifuMode)) {        // 采购方式形式 应该是  集中采购        resInfo.append("[采购方式]应采取[公开招标],");        resultMake.setZcPifuCgfs("1");      }    }    if (!ZcMakeCheckRuleBySX.limtAgeyCode.equals(make.getAgency())) {      for (int i = 0; i < make.getItemList().size(); i++) {        ZcPProMitem mitem = (ZcPProMitem) make.getItemList().get(i);        if (ZcMakeCheckRuleBySX.xmgcList.contains(mitem.getZcCatalogueCode())) {          // 代理机构应该是采购中心          resInfo.append("[代理机构]应委托[采购中心],");          resultMake.setAgency(ZcMakeCheckRuleBySX.limtAgeyCode);          break;        }      }    }    if (resInfo.length() > 0) {      titleInfo.append(resInfo.substring(0, resInfo.length() - 1));      resultMap.put("resInfo", titleInfo.toString());      resultMap.put("resMake", resultMake);    } else {      resultMap.put("resInfo", resInfo.toString());      resultMap.put("resMake", null);    }    return resultMap;  }}