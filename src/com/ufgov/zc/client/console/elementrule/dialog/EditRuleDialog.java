package com.ufgov.zc.client.console.elementrule.dialog;import java.awt.BorderLayout;import java.awt.Dimension;import java.awt.FlowLayout;import java.awt.GridLayout;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import javax.swing.JButton;import javax.swing.JComboBox;import javax.swing.JComponent;import javax.swing.JDialog;import javax.swing.JLabel;import javax.swing.JOptionPane;import javax.swing.JPanel;import javax.swing.JTextField;import javax.swing.JTree;import javax.swing.SwingConstants;import javax.swing.SwingUtilities;import javax.swing.tree.TreePath;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.client.component.GkBaseDialog;import com.ufgov.zc.client.component.MenuSettingSelectField;import com.ufgov.zc.client.console.elementrule.RuleNode;import com.ufgov.zc.common.commonbiz.model.MaElementRelationRule;import com.ufgov.zc.common.commonbiz.publish.IBaseDataServiceDelegate;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.model.AsCompo;public class EditRuleDialog extends GkBaseDialog {  private JTree tree = null;  private JTextField ruleDesc = null;  private MenuSettingSelectField compoDesc = null;  private JTextField ruleTypeDesc = null;  //  private JTextField operatorDesc = null;  private JComboBox operatorDesc = null;  private JButton okBtn = null;  private JButton cancelBtn = null;  private RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();  private IBaseDataServiceDelegate baseService = (IBaseDataServiceDelegate) ServiceFactory.create(  IBaseDataServiceDelegate.class, "baseDataServiceDelegate");  public EditRuleDialog(JDialog parent, boolean modal, JTree tree) {    super(parent, modal);    this.tree = tree;    initComponent();    this.pack();    this.setTitle("编辑规则");    this.setLocationRelativeTo(null);    this.setVisible(true);    //this.moveToScreenCenter();  }  private void initComponent() {    RuleNode ruleNode = (RuleNode) tree.getSelectionPath().getLastPathComponent();    MaElementRelationRule rule = (MaElementRelationRule) ruleNode.getUserObject();    this.getContentPane().setLayout(new BorderLayout());    JPanel topPanel = new JPanel(new GridLayout(0, 1));    ruleDesc = new JTextField(50);    compoDesc = new MenuSettingSelectField(50);    operatorDesc = new JComboBox();    operatorDesc.addItem("手动");    operatorDesc.addItem("自动");    ruleTypeDesc = new JTextField(20);    topPanel.add(createPanel("规则名称：", ruleDesc));    ruleDesc.setText(rule.getRelationRuleName());    topPanel.add(createPanel("部件ID：", compoDesc));    if ("*".equals(rule.getCompoId())) {      compoDesc.setText("*");    } else {      compoDesc.setValueByCode(rule.getCompoId());    }    topPanel.add(createPanel("操作类型：", operatorDesc));    int selectIndex = Integer.parseInt(rule.getHandleType());    operatorDesc.setSelectedIndex(selectIndex);    this.getContentPane().add(topPanel, BorderLayout.CENTER);    JPanel bottomPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT));    okBtn = new JButton("确定");    this.getRootPane().setDefaultButton(okBtn);    okBtn.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent event) {        SwingUtilities.invokeLater(new Runnable() {          public void run() {            try {              TreePath path = tree.getSelectionPath();              RuleNode selectedNode = (RuleNode) path.getLastPathComponent();              MaElementRelationRule rule = (MaElementRelationRule) selectedNode.getUserObject();              rule.setRelationRuleName(ruleDesc.getText());              AsCompo compo = compoDesc.getAsCompo();              if (compo != null) {                rule.setCompoId(compo.getCompoId());              } else {                rule.setCompoId("*");              }              rule.setHandleType(operatorDesc.getSelectedIndex() + "");              selectedNode.update(requestMeta);              tree.updateUI();              EditRuleDialog.this.dispose();            } catch (Exception ex) {              JOptionPane.showMessageDialog(EditRuleDialog.this, "错误:" + ex.getMessage());            }          }        });      }    });    bottomPanel.add(okBtn);    this.getRootPane().setDefaultButton(okBtn);    cancelBtn = new JButton("取消");    cancelBtn.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent event) {        EditRuleDialog.this.dispose();      }    });    bottomPanel.add(cancelBtn);    this.getContentPane().add(bottomPanel, BorderLayout.SOUTH);  }  private JPanel createPanel(String label, JComponent field) {    JPanel p = new JPanel();    p.setLayout(new FlowLayout(FlowLayout.LEFT));    JLabel l = new JLabel(label);    l.setPreferredSize(new Dimension(100, 12));    l.setHorizontalAlignment(SwingConstants.RIGHT);    p.add(l);    p.add(field);    return p;  }}