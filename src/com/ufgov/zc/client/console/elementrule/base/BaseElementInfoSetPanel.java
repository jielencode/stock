package com.ufgov.zc.client.console.elementrule.base;import java.awt.BorderLayout;import java.util.HashMap;import java.util.Iterator;import java.util.Map;import java.util.Map.Entry;import javax.swing.JPanel;import javax.swing.JTabbedPane;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.console.elementrule.RuleEntryModel;import com.ufgov.zc.client.console.elementrule.event.ElementRelationEvent;import com.ufgov.zc.client.console.elementrule.event.ElementRelationListener;import com.ufgov.zc.common.commonbiz.model.MaElementRelationRuleDetail;import com.ufgov.zc.common.commonbiz.model.MaElementRelationRuleEntry;public class BaseElementInfoSetPanel extends JPanel implements ElementRelationListener {  /**   *    */  static {    LangTransMeta.init("FUND_CODE");    LangTransMeta.init("CO_CODE");    LangTransMeta.init("PAYOUT_CODE");    LangTransMeta.init("ORG_CODE");    LangTransMeta.init("PAYTYPE_CODE");    LangTransMeta.init("OUTLAY_CODE");    LangTransMeta.init("B_ACC_CODE");    LangTransMeta.init("D_ATTR1");    LangTransMeta.init("D_ATTR2");    LangTransMeta.init("D_ATTR3");    LangTransMeta.init("D_ATTR4");    LangTransMeta.init("D_ATTR5");    LangTransMeta.init("MANAGE_CODE");    LangTransMeta.init("INCEPTDOC_CODE");    LangTransMeta.init("SENDDOC_CODE");    LangTransMeta.init("ORIGIN_CODE");    LangTransMeta.init("PROJECT_CODE");  }  private static final long serialVersionUID = 7652363348628854146L;  protected JTabbedPane tabbedPane = new JTabbedPane();  protected Map elementPanel = new HashMap();  protected String direction = MaElementRelationRuleDetail.DIRECTION_SRC;  public BaseElementInfoSetPanel(String direction) {    this.setLayout(new BorderLayout());    this.add(tabbedPane, BorderLayout.CENTER);    this.direction = direction;  }  public void initWithRuleEntryModel(RuleEntryModel ruleModel) {    ruleModel.addElementRelationListener(this);    Map ruleMap = null;    MaElementRelationRuleEntry rule = (MaElementRelationRuleEntry) ruleModel.getRuleEntry();    if (direction.equals(MaElementRelationRuleDetail.DIRECTION_SRC)) {      ruleMap = rule.getSrcElementMap();    } else {      ruleMap = rule.getDestElementMap();    }    Iterator iter = ruleMap.entrySet().iterator();    tabbedPane.removeAll();    while (iter.hasNext()) {      Entry entry = (Entry) iter.next();      MaElementRelationRuleDetail relation = (MaElementRelationRuleDetail) entry.getValue();      BaseElementSelectPanel panel = generateRulePanel(relation);      tabbedPane.add(LangTransMeta.translate(relation.getElement()), panel);    }  }  public BaseElementSelectPanel generateRulePanel(MaElementRelationRuleDetail relation) {    String elementCode = relation.getElement();    if (!elementPanel.containsKey(elementCode)) {      BaseElementSelectPanel panel = new BaseElementSelectPanel(LangTransMeta      .translate(relation.getElement()), relation);      elementPanel.put(relation.getElement(), panel);      return panel;    } else {      BaseElementSelectPanel panel = (BaseElementSelectPanel) elementPanel.get(elementCode);      panel.setElementRelation(relation);      return panel;    }  }  public void addedDesElementRelation(ElementRelationEvent event) {    // TODO Auto-generated method stub  }  public void addedSrcElementRelation(ElementRelationEvent event) {    // TODO Auto-generated method stub  }  public void removedDesElementRelation(ElementRelationEvent event) {    // TODO Auto-generated method stub  }  public void removedSrcElementRelation(ElementRelationEvent event) {  }  public void modefiedDesElementRelation(ElementRelationEvent event, Object oldValue) {    // TODO Auto-generated method stub  }  public void modefiedSrcElementRelation(ElementRelationEvent event, Object oldValue) {    // TODO Auto-generated method stub  }}