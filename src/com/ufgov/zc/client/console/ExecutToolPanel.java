package com.ufgov.zc.client.console;import java.awt.Dialog;import java.awt.FlowLayout;import java.awt.GridBagConstraints;import java.awt.GridBagLayout;import java.awt.Insets;import java.awt.Window;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.WindowAdapter;import java.awt.event.WindowEvent;import java.util.ArrayList;import java.util.List;import javax.swing.ImageIcon;import javax.swing.JButton;import javax.swing.JFrame;import javax.swing.JLabel;import javax.swing.JPanel;import javax.swing.UIManager;import javax.swing.UnsupportedLookAndFeelException;import com.ufgov.zc.client.common.ParentWindowAware;import com.ufgov.zc.client.component.GkBaseDialog;import com.ufgov.zc.client.console.elementrule.RulePanel;public class ExecutToolPanel extends JPanel implements ParentWindowAware {  private static final long serialVersionUID = -2060574439719760856L;  private Window parentWindow;  private JButton nameModifyBtn; //名称修改  private JButton compOrgSetBtn; //部件功能设置  private JButton pageSettingBtn;//页签设置  private JButton searchConditionSettingBtn; //搜索条件设置  private JButton retakeFigRuleBtn;//取数规则  private JButton compareOldOrNewBtn;//新旧部件对照关系  private JButton orderFieldSettingBtn; //排序字段设置  private JButton personFigueBtn;//人员数值权限  private JButton roleFigueBtn;//角色数值权限  private JButton systemOptionBtn;  private JButton ruleSetBtn;  public ExecutToolPanel() {    List<JPanel> displayPanelLst = new ArrayList<JPanel>();    JPanel nameModifyPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));    nameModifyBtn = new JButton(new ImageIcon(this.getClass().getResource("/img/nameModify.gif"))); //名称修改    nameModifyBtn.setToolTipText("名称修改");    nameModifyPanel.add(nameModifyBtn);    nameModifyPanel.add(new JLabel("名称修改"));    displayPanelLst.add(nameModifyPanel);    JPanel compOrgSetPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));    compOrgSetBtn = new JButton(new ImageIcon(this.getClass().getResource("/img/compoSetting.gif"))); //部件功能设置    compOrgSetBtn.setToolTipText("部件功能设置");    compOrgSetPanel.add(compOrgSetBtn);    compOrgSetPanel.add(new JLabel("部件功能设置"));    displayPanelLst.add(compOrgSetPanel);    JPanel pageSettingPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));    pageSettingBtn = new JButton(new ImageIcon(this.getClass().getResource("/img/pageSetting.gif")));//页签设置    pageSettingBtn.setToolTipText("页签设置");    pageSettingPanel.add(pageSettingBtn);    pageSettingPanel.add(new JLabel("页签设置"));    displayPanelLst.add(pageSettingPanel);    JPanel searchConditionSettingPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));    searchConditionSettingBtn = new JButton(new ImageIcon(this.getClass().getResource(    "/img/searchConditionSetting.gif"))); //搜索条件设置    searchConditionSettingBtn.setToolTipText("搜索条件设置");    searchConditionSettingPanel.add(searchConditionSettingBtn);    searchConditionSettingPanel.add(new JLabel("搜索条件设置"));    displayPanelLst.add(searchConditionSettingPanel);    JPanel retakeFigRulePanel = new JPanel(new FlowLayout(FlowLayout.LEFT));    retakeFigRuleBtn = new JButton(new ImageIcon(this.getClass().getResource("/img/retakeFigRule.gif")));//取数规则    retakeFigRulePanel.add(retakeFigRuleBtn);    retakeFigRulePanel.add(new JLabel("取数规则"));    displayPanelLst.add(retakeFigRulePanel);    JPanel compareOldOrNewPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));    compareOldOrNewBtn = new JButton(new ImageIcon(this.getClass().getResource("/img/compareOldOrNew.gif")));//新旧部件对照关系    compareOldOrNewPanel.add(compareOldOrNewBtn);    compareOldOrNewPanel.add(new JLabel("新旧部件对照关系"));    displayPanelLst.add(compareOldOrNewPanel);    JPanel orderFieldSettingPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));    orderFieldSettingBtn = new JButton(new ImageIcon(this.getClass().getResource("/img/compareOldOrNew.gif")));//排序字段设置    orderFieldSettingPanel.add(orderFieldSettingBtn);    orderFieldSettingPanel.add(new JLabel("排序字段设置"));    displayPanelLst.add(orderFieldSettingPanel);    JPanel personFiguePanel = new JPanel(new FlowLayout(FlowLayout.LEFT));    personFigueBtn = new JButton(new ImageIcon(this.getClass().getResource("/img/personFigue.gif")));//人员数值权限    personFiguePanel.add(personFigueBtn);    personFiguePanel.add(new JLabel("人员数值权限"));    displayPanelLst.add(personFiguePanel);    JPanel roleFiguePanel = new JPanel(new FlowLayout(FlowLayout.LEFT));    roleFigueBtn = new JButton(new ImageIcon(this.getClass().getResource("/img/roleFigue.gif")));//角色数值权限    roleFiguePanel.add(roleFigueBtn);    roleFiguePanel.add(new JLabel("角色数值权限"));    displayPanelLst.add(roleFiguePanel);    JPanel systemOptionPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));    systemOptionBtn = new JButton(new ImageIcon(this.getClass().getResource("/img/pageSetting.gif")));//角色数值权限    systemOptionPanel.add(systemOptionBtn);    systemOptionPanel.add(new JLabel("系统选项"));    displayPanelLst.add(systemOptionPanel);    JPanel ruleSetPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));    ruleSetBtn = new JButton(new ImageIcon(this.getClass().getResource("/img/ruleSet.gif")));//账户规则设置    ruleSetPanel.add(ruleSetBtn);    ruleSetPanel.add(new JLabel("账户规则设置"));    displayPanelLst.add(ruleSetPanel);    nameModifyBtn.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        LangTransModifyDialog dlg = new LangTransModifyDialog(parentWindow, "名称修改");        dlg.setVisible(true);      }    });    compOrgSetBtn.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        CompoFuncSettingDialog dlg = new CompoFuncSettingDialog(parentWindow, "功能部件设置");        dlg.setVisible(true);      }    });    pageSettingBtn.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        SearchConditionListDialog dlg = new SearchConditionListDialog(parentWindow, "页签");        dlg.setVisible(true);      }    });    searchConditionSettingBtn.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        SearchConditionSettingDialog dlg = new SearchConditionSettingDialog(parentWindow, "条件设置");        dlg.setVisible(true);      }    });    retakeFigRuleBtn.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        GetDataRuleSettingDialog dlg = new GetDataRuleSettingDialog(parentWindow, "取数规则设置");        dlg.setVisible(true);      }    });    compareOldOrNewBtn.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        CompareOldOrNewCompoDialog dlg = new CompareOldOrNewCompoDialog(parentWindow, "新旧部件对比");        dlg.setVisible(true);      }    });    orderFieldSettingBtn.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        OrderFieldSettingDialog dlg = new OrderFieldSettingDialog(parentWindow, "排序字段设置");        dlg.setVisible(true);      }    });    personFigueBtn.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        GkBaseDialog dialog = new GkBaseDialog(parentWindow, Dialog.ModalityType.APPLICATION_MODAL);        dialog.setTitle("人员数值权限设置");        NumLimSetByUserPanel panel = new NumLimSetByUserPanel();        dialog.setContentPane(panel);        dialog.setMaxSizeWindow();        dialog.setVisible(true);      }    });    roleFigueBtn.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        GkBaseDialog dialog = new GkBaseDialog(parentWindow, Dialog.ModalityType.APPLICATION_MODAL);        dialog.setTitle("角色数值权限设置");        NumLimSetByRolePanel panel = new NumLimSetByRolePanel();        dialog.setContentPane(panel);        dialog.setMaxSizeWindow();        dialog.setVisible(true);      }    });    this.systemOptionBtn.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        new SystemOptionDialog(parentWindow);      }    });    ruleSetBtn.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent event) {        GkBaseDialog dialog = new GkBaseDialog(parentWindow, Dialog.ModalityType.APPLICATION_MODAL);        dialog.setTitle("帐户规则设置");        RulePanel panel = new RulePanel();        dialog.setContentPane(panel);        dialog.setMaxSizeWindow();        dialog.setVisible(true);      }    });    this.setLayout(new FlowLayout(FlowLayout.LEFT));    JPanel panel = new JPanel(new GridBagLayout());    int col = 1;    int row = 1;    int colQty = 6; //每列要显示的按钮个数    for (JPanel pnl : displayPanelLst) {      panel.add(pnl, new GridBagConstraints(col - 1, row - 1, 1, 1, 0.0, 0.0, GridBagConstraints.NORTHWEST,      GridBagConstraints.NONE, new Insets(3, 3, 3, 3), 0, 0));      if (row % colQty == 0) {        col++;        row = 1;      } else {        row++;      }    }    this.add(panel);  }  public Window getParentWindow() {    return parentWindow;  }  public void setParentWindow(Window window) {    parentWindow = window;  }  public static void main(String[] args) throws ClassNotFoundException, InstantiationException,  IllegalAccessException, UnsupportedLookAndFeelException {    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());    ExecutToolPanel panel = new ExecutToolPanel();    JFrame f = new JFrame();    f.getContentPane().add(panel);    f.setSize(1000, 700);    f.setVisible(true);    f.setLocationRelativeTo(null);    f.addWindowListener(new WindowAdapter() {      @Override      public void windowClosing(WindowEvent e) {        System.exit(0);      }    });  }}