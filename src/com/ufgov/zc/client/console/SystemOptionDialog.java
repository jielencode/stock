package com.ufgov.zc.client.console;import java.awt.BorderLayout;import java.awt.Color;import java.awt.Dialog;import java.awt.Dimension;import java.awt.FlowLayout;import java.awt.GridBagConstraints;import java.awt.GridBagLayout;import java.awt.Insets;import java.awt.Window;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.ItemEvent;import java.awt.event.ItemListener;import javax.swing.BorderFactory;import javax.swing.JButton;import javax.swing.JCheckBox;import javax.swing.JComboBox;import javax.swing.JLabel;import javax.swing.JPanel;import javax.swing.JTextField;import com.ufgov.zc.client.common.AsOptionMeta;import com.ufgov.zc.client.common.UIConstants;import com.ufgov.zc.client.component.GkBaseDialog;import com.ufgov.zc.client.component.MoneyDocument;import com.ufgov.zc.client.component.setting.AbstractOption;import com.ufgov.zc.client.component.setting.SysColorPanelOption;import com.ufgov.zc.common.system.constants.BusinessOptionConstants;import com.ufgov.zc.common.system.constants.SystemOptionConstants;public class SystemOptionDialog extends GkBaseDialog {  private SystemOptionDialog self = this;  private JPanel contentPanel = new JPanel();  private JPanel bottomPanel = new JPanel();  private JCheckBox setDefaultPreferCkbx = new JCheckBox();  final JComboBox fontSizeCbx = new JComboBox();  final JComboBox showColSizeCbx = new JComboBox();  private JCheckBox freeTypeCkbx = new JCheckBox();  private JTextField dayMoneyField = new JTextField();  private JTextField monthMoneyField = new JTextField();  private JCheckBox isNeedWfCkbx = new JCheckBox();  private JCheckBox isTabControlCkbx = new JCheckBox();  private SysColorPanelOption colorPanel;  private String dayMoney = AsOptionMeta.getOptVal(BusinessOptionConstants.OPT_CP_VOUCHER_DAY_MONEY);  private String monthMoney = AsOptionMeta.getOptVal(BusinessOptionConstants.OPT_CP_VOUCHER_MONTH_MONEY);  public SystemOptionDialog(Window window) {    super(window, Dialog.ModalityType.APPLICATION_MODAL);    initComponents();    this.setSize(UIConstants.DIALOG_3_LEVEL_WIDTH, UIConstants.DIALOG_3_LEVEL_HEIGHT);    this.setTitle("系统选项");    this.setVisible(true);  }  private void initComponents() {    this.initContentPanel();    this.initBottomPanel();    this.setLayout(new BorderLayout());    this.add(contentPanel, BorderLayout.CENTER);    this.add(bottomPanel, BorderLayout.SOUTH);  }  private void initContentPanel() {    initData();    JPanel sysOptionPanel = new JPanel();    GridBagLayout gblBasic = new GridBagLayout();    sysOptionPanel.setLayout(gblBasic);    JLabel tempLabel;    int gridx, gridy, gridwidth, gridheight, anchor, fill, ipadx, ipady;    double weightx, weighty;    Insets inset;    gridwidth = 1;    gridheight = 1;    weightx = 1;    weighty = 1;    ipadx = 0;    ipady = 0;    fill = GridBagConstraints.NONE;    inset = new Insets(2, 2, 2, 2);    gridx = 0;    gridy = 0;    anchor = GridBagConstraints.EAST;    tempLabel = new JLabel("设置默认风格：");    gblBasic.setConstraints(tempLabel, new GridBagConstraints(gridx, gridy, gridwidth, gridheight, weightx,    weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(tempLabel);    gridx = 1;    gridy = 0;    anchor = GridBagConstraints.WEST;    fill = GridBagConstraints.HORIZONTAL;    gblBasic.setConstraints(setDefaultPreferCkbx, new GridBagConstraints(gridx, gridy, gridwidth, gridheight,    weightx, weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(setDefaultPreferCkbx);    gridx = 0;    gridy = 1;    anchor = GridBagConstraints.EAST;    fill = GridBagConstraints.NONE;    tempLabel = new JLabel("字体大小：");    gblBasic.setConstraints(tempLabel, new GridBagConstraints(gridx, gridy, gridwidth, gridheight, weightx,    weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(tempLabel);    gridx = 1;    gridy = 1;    anchor = GridBagConstraints.WEST;    fill = GridBagConstraints.HORIZONTAL;    gblBasic.setConstraints(fontSizeCbx, new GridBagConstraints(gridx, gridy, gridwidth, gridheight, weightx,    weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(fontSizeCbx);    gridx = 0;    gridy = 2;    anchor = GridBagConstraints.EAST;    fill = GridBagConstraints.NONE;    tempLabel = new JLabel("使用free风格对话框：");    gblBasic.setConstraints(tempLabel, new GridBagConstraints(gridx, gridy, gridwidth, gridheight, weightx,    weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(tempLabel);    gridx = 1;    gridy = 2;    anchor = GridBagConstraints.WEST;    fill = GridBagConstraints.HORIZONTAL;    gblBasic.setConstraints(freeTypeCkbx, new GridBagConstraints(gridx, gridy, gridwidth, gridheight,    weightx, weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(freeTypeCkbx);    gridx = 0;    gridy = 3;    anchor = GridBagConstraints.EAST;    fill = GridBagConstraints.NONE;    tempLabel = new JLabel("授权支付凭证是否走工作流：");    gblBasic.setConstraints(tempLabel, new GridBagConstraints(gridx, gridy, gridwidth, gridheight, weightx,    weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(tempLabel);    gridx = 1;    gridy = 3;    anchor = GridBagConstraints.WEST;    fill = GridBagConstraints.HORIZONTAL;    gblBasic.setConstraints(isNeedWfCkbx, new GridBagConstraints(gridx, gridy, gridwidth, gridheight,    weightx, weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(isNeedWfCkbx);    gridx = 0;    gridy = 4;    anchor = GridBagConstraints.EAST;    fill = GridBagConstraints.NONE;    tempLabel = new JLabel("授权支付凭证日用金额：");    gblBasic.setConstraints(tempLabel, new GridBagConstraints(gridx, gridy, gridwidth, gridheight, weightx,    weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(tempLabel);    gridx = 1;    gridy = 4;    anchor = GridBagConstraints.WEST;    fill = GridBagConstraints.HORIZONTAL;    gblBasic.setConstraints(dayMoneyField, new GridBagConstraints(gridx, gridy, gridwidth, gridheight,    weightx, weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(dayMoneyField);    gridx = 0;    gridy = 5;    anchor = GridBagConstraints.EAST;    fill = GridBagConstraints.NONE;    tempLabel = new JLabel("授权支付凭证月用金额：");    gblBasic.setConstraints(tempLabel, new GridBagConstraints(gridx, gridy, gridwidth, gridheight, weightx,    weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(tempLabel);    gridx = 1;    gridy = 5;    anchor = GridBagConstraints.WEST;    fill = GridBagConstraints.HORIZONTAL;    gblBasic.setConstraints(monthMoneyField, new GridBagConstraints(gridx, gridy, gridwidth, gridheight,    weightx, weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(monthMoneyField);    gridx = 0;    gridy = 6;    anchor = GridBagConstraints.EAST;    fill = GridBagConstraints.NONE;    tempLabel = new JLabel("CpDtzd页签是否用权限控制：");    gblBasic.setConstraints(tempLabel, new GridBagConstraints(gridx, gridy, gridwidth, gridheight, weightx,    weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(tempLabel);    gridx = 1;    gridy = 6;    anchor = GridBagConstraints.WEST;    fill = GridBagConstraints.HORIZONTAL;    gblBasic.setConstraints(isTabControlCkbx, new GridBagConstraints(gridx, gridy, gridwidth, gridheight,    weightx, weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(isTabControlCkbx);    colorPanel = new SysColorPanelOption();/////////////    //    //    gridx = 0;    //    gridy = 7;    //    anchor = GridBagConstraints.EAST;    //    fill = GridBagConstraints.NONE;    //    gblBasic.setConstraints(tempLabel, new GridBagConstraints(gridx, gridy, gridwidth, gridheight, weightx,    //      weighty, anchor, fill, inset, ipadx, ipady));    //    sysOptionPanel.add(s.getOptNameLabel());    //    //    gridx = 1;    //    gridy = 7;    //    anchor = GridBagConstraints.WEST;    //    fill = GridBagConstraints.HORIZONTAL;    //    gblBasic.setConstraints(isTabControlCkbx, new GridBagConstraints(gridx, gridy, gridwidth, gridheight,    //      weightx, weighty, anchor, fill, inset, ipadx, ipady));    //    sysOptionPanel.add(s.getOptionEditor());    gridx = 0;    gridy = 7;    anchor = GridBagConstraints.EAST;    fill = GridBagConstraints.NONE;    tempLabel = new JLabel("退回单据的颜色：");    gblBasic.setConstraints(tempLabel, new GridBagConstraints(gridx, gridy, gridwidth, gridheight, weightx,    weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(tempLabel);    gridx = 1;    gridy = 7;    anchor = GridBagConstraints.WEST;    fill = GridBagConstraints.HORIZONTAL;    gblBasic.setConstraints(colorPanel.getOptionEditor(), new GridBagConstraints(gridx, gridy, gridwidth,    gridheight, weightx, weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(colorPanel.getOptionEditor());    gridx = 0;    gridy = 8;    anchor = GridBagConstraints.EAST;    fill = GridBagConstraints.NONE;    tempLabel = new JLabel("查询条件区显示列数：");    gblBasic.setConstraints(tempLabel, new GridBagConstraints(gridx, gridy, gridwidth, gridheight, weightx,    weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(tempLabel);    gridx = 1;    gridy = 8;    anchor = GridBagConstraints.WEST;    fill = GridBagConstraints.HORIZONTAL;    gblBasic.setConstraints(showColSizeCbx, new GridBagConstraints(gridx, gridy, gridwidth, gridheight,    weightx, weighty, anchor, fill, inset, ipadx, ipady));    sysOptionPanel.add(showColSizeCbx);    this.contentPanel.add(sysOptionPanel);  }  private void initData() {    String setDefaultPreferVal = AsOptionMeta.getOptVal(SystemOptionConstants.OPT_PREFER_SET_DEFAULT);    setDefaultPreferCkbx.setSelected("1".equalsIgnoreCase(setDefaultPreferVal) ? true : false);    setDefaultPreferCkbx.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        updateSetDefaultPreferOption();      }    });    for (int i = 12; i <= 20; i++) {      fontSizeCbx.addItem(i + "");    }    fontSizeCbx.setSelectedItem(AsOptionMeta.getOptVal(SystemOptionConstants.OPT_PREFERRED_FONT_SIZE));    fontSizeCbx.addItemListener(new ItemListener() {      public void itemStateChanged(ItemEvent e) {        if (e.getStateChange() == e.SELECTED) {          String size = (String) fontSizeCbx.getSelectedItem();          AsOptionMeta.updateOptVal(SystemOptionConstants.OPT_PREFERRED_FONT_SIZE, size);        }      }    });    showColSizeCbx.addItem("3");    showColSizeCbx.addItem("4");    showColSizeCbx.addItem("5");    showColSizeCbx.setSelectedItem(AsOptionMeta.getOptVal(SystemOptionConstants.OPT_PREFERRED_SHOW_COL_SIZE));    showColSizeCbx.addItemListener(new ItemListener() {      public void itemStateChanged(ItemEvent e) {        if (e.getStateChange() == e.SELECTED) {          String size = (String) showColSizeCbx.getSelectedItem();          AsOptionMeta.updateOptVal(SystemOptionConstants.OPT_PREFERRED_SHOW_COL_SIZE, size);        }      }    });    String freeTypeDialog = AsOptionMeta.getOptVal(SystemOptionConstants.OPT_FREE_STYLE_DIALOG);    freeTypeCkbx.setSelected("1".equalsIgnoreCase(freeTypeDialog) ? true : false);    freeTypeCkbx.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        AsOptionMeta.updateOptVal(SystemOptionConstants.OPT_FREE_STYLE_DIALOG,        freeTypeCkbx.isSelected() ? "1" : "0");      }    });    String isNeedWf = AsOptionMeta.getOptVal(BusinessOptionConstants.OPT_CP_CP_AV_NEED_WORKFLOW);    isNeedWfCkbx.setSelected("Y".equalsIgnoreCase(isNeedWf) ? true : false);    isNeedWfCkbx.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        AsOptionMeta.updateOptVal(BusinessOptionConstants.OPT_CP_CP_AV_NEED_WORKFLOW, isNeedWfCkbx        .isSelected() ? "Y" : "N");      }    });    String isTabControl = AsOptionMeta.getOptVal(BusinessOptionConstants.OPT_CP_DTZD_VOU_TAB_CONTROL);    isTabControlCkbx.setSelected("Y".equalsIgnoreCase(isTabControl) ? true : false);    isTabControlCkbx.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        AsOptionMeta.updateOptVal(BusinessOptionConstants.OPT_CP_DTZD_VOU_TAB_CONTROL, isTabControlCkbx        .isSelected() ? "Y" : "N");      }    });    dayMoneyField.setPreferredSize(new Dimension(180, 20));    dayMoneyField.setDocument(new MoneyDocument(false));    dayMoneyField.setText(dayMoney);    monthMoneyField.setPreferredSize(new Dimension(180, 20));    monthMoneyField.setDocument(new MoneyDocument(false));    monthMoneyField.setText(monthMoney);  }  private void updateOption() {    if (colorPanel.getColorString() != null || !colorPanel.getColorString().equals("")) {      AsOptionMeta      .updateOptVal(BusinessOptionConstants.OPT_UNTREAD_COLOR_OPTION, colorPanel.getColorString());    }  }  private void doSaveDayMoney() {    if (!"".equals(monthMoneyField.getText()) && !monthMoney.equals(monthMoneyField.getText())) {      AsOptionMeta      .updateOptVal(BusinessOptionConstants.OPT_CP_VOUCHER_MONTH_MONEY, monthMoneyField.getText());    }  }  private void doSaveMonthMoney() {    if (!"".equals(dayMoneyField.getText()) && !dayMoney.equals(dayMoneyField.getText())) {      AsOptionMeta.updateOptVal(BusinessOptionConstants.OPT_CP_VOUCHER_DAY_MONEY, dayMoneyField.getText());    }  }  private void initBottomPanel() {    bottomPanel.setLayout(new FlowLayout(FlowLayout.RIGHT, 1, 1));    JButton okButton = new JButton("确定");    JButton closeButton = new JButton("关闭");    bottomPanel.add(okButton);    bottomPanel.add(closeButton);    bottomPanel.setBorder(BorderFactory.createLineBorder(Color.gray));    okButton.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        doOK();      }    });    closeButton.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        self.closeDialog();      }    });  }  private void doOK() {    doSaveDayMoney();    doSaveMonthMoney();    updateOption();    self.closeDialog();  }  private void updateSetDefaultPreferOption() {    String val = "0";    if (setDefaultPreferCkbx.isSelected()) {      val = "1";    }    AsOptionMeta.updateOptVal(SystemOptionConstants.OPT_PREFER_SET_DEFAULT, val);  }}