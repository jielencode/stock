package com.ufgov.zc.client.datacache;import java.util.Collections;import java.util.HashMap;import java.util.List;import java.util.Map;import com.ufgov.zc.client.common.AsOptionMeta;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.common.commonbiz.model.DAttr;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.constants.BusinessOptionConstants;import com.ufgov.zc.common.system.dto.ElementConditionDto;public class DAttrDataCache {  private static Map<String, Map> dataMap = new HashMap<String, Map>();  private static Map<String, List> dataListMap = new HashMap<String, List>();  private static String showType = AsOptionMeta.getOptVal(BusinessOptionConstants.OPT_CODE_NAME_SHOW_TYPE);  public static List getDAttr(String dattrType) {    List dataList = dataListMap.get(dattrType);    if (dataList == null) {      RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();      int nd = WorkEnv.getInstance().getTransNd();      ElementConditionDto dto = new ElementConditionDto();      dto.setNd(nd);      dto.setDattrType(dattrType);      dataList = Collections.unmodifiableList(Util.baseDataServiceDelegate.getDAttr(dto, requestMeta));      dataListMap.put(dattrType, dataList);      dataMap.put(dattrType, createDAttrMap(dataList));    }    return dataList;  }  private static Map<String, DAttr> createDAttrMap(List dataList) {    Map<String, DAttr> dataMap = new HashMap<String, DAttr>();    for (Object o : dataList) {      DAttr v = (DAttr) o;      dataMap.put(v.getCode(), v);    }    return dataMap;  }  public static String getName(String dattrType, String code) {    getDAttr(dattrType);    Map<String, DAttr> value = (Map<String, DAttr>) dataMap.get(dattrType);    if (value != null) {      DAttr da = value.get(code);      if (da != null) {        if ("1".equals(showType)) {          return "[" + code + "]" + da.getName();        } else if ("2".equals(showType)) {          return da.getName() + "[" + code + "]";        } else {          return da.getName();        }      }    }    return code;  }  public static String getNameByCode(String dattrType, String code) {    getDAttr(dattrType);    Map<String, DAttr> value = (Map<String, DAttr>) dataMap.get(dattrType);    if (value != null) {      DAttr da = value.get(code);      if (da != null) {        return da.getName();      }    }    return code;  }}