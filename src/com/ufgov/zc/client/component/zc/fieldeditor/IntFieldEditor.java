package com.ufgov.zc.client.component.zc.fieldeditor;import java.awt.event.KeyAdapter;import java.awt.event.KeyEvent;import java.math.BigDecimal;import javax.swing.JComponent;import javax.swing.JTextField;import com.ufgov.zc.client.component.RegexDocument;import com.ufgov.zc.client.component.ui.fieldeditor.AbstractFieldEditor;import com.ufgov.zc.common.system.util.BeanUtil;import com.ufgov.zc.common.zc.model.ZcBaseBill;public class IntFieldEditor extends AbstractFieldEditor {  /**   *    */  private static final long serialVersionUID = -9126316741144675929L;  private JTextField field;  private boolean minusAllow = false;  private int maxLen = -1;  public IntFieldEditor(String name, String fieldName) {    this.fieldName = fieldName;    init(name);  }  public IntFieldEditor(String name, String fieldName, int maxLen) {    this.fieldName = fieldName;    this.maxLen = maxLen;    init(name);  }  public IntFieldEditor(String name, boolean minusAllow, String fieldName) {    this.fieldName = fieldName;    this.minusAllow = minusAllow;    init(name);  }  public IntFieldEditor(String name, String fieldName, boolean isEditable) {    this.fieldName = fieldName;    init(name);    this.field.setEditable(isEditable);  }  public Object getValue() {    return field.getText();  }  public void setValue(Object value) { //在选择的上面的行发生改变的时候所触发的事件    if (value == null) {      field.setText(null);      field.setToolTipText(null);    } else if (value instanceof ZcBaseBill) {      Integer v = (Integer) BeanUtil.get(fieldName, value);      String vs = "";      if (v != null) {        vs = v.toString();      }      field.setText(vs);    }  }  protected JComponent createEditorComponent() { //生成下面的控件，并将改变的内容同步到对象中    field = new JTextField(45);    field.setHorizontalAlignment(JTextField.RIGHT);        RegexDocument rd = new RegexDocument();    String regex = "[0-9]*";    if (minusAllow) {      regex = "-?" + regex;    }    rd.setRegex(regex);    //增加数字位数控制    if(this.maxLen > 0){    	rd.setMaxLength(maxLen);    }    field.setDocument(rd);    field.addKeyListener(new KeyAdapter() {      public void keyReleased(KeyEvent e) {        syncEditObject();      }    });    return field;  }  protected void syncEditObject() {    if (getEditObject() != null) {      String text = field.getText();      Integer v = null;      if (!"".equals(text.trim())) {        v = new Integer(text.trim());      }      BeanUtil.set(fieldName, v, getEditObject());    }    this.fireEditSynced();  }  public void setEnabled(boolean enabled) {    field.setEditable(enabled);    field.setEnabled(enabled);  }}