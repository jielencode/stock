package com.ufgov.zc.client.component.zc.fieldeditor.region;import javax.swing.JComponent;import com.ufgov.zc.client.component.event.ValueChangeEvent;import com.ufgov.zc.client.component.event.ValueChangeListener;import com.ufgov.zc.client.component.ui.fieldeditor.AbstractFieldEditor;import com.ufgov.zc.common.system.util.BeanUtil;import com.ufgov.zc.common.zc.model.EleRegion;import com.ufgov.zc.common.zc.model.ZcBaseBill;public class ZcEleRegionTreeSelectEditor extends AbstractFieldEditor {  private static final long serialVersionUID = -7677429808342983951L;  public ZcEleRegionTreeSelectField coField = new ZcEleRegionTreeSelectField();  public ZcEleRegionTreeSelectEditor(String name, String fieldName) {    this.fieldName = fieldName;    init(name);  }  public ZcEleRegionTreeSelectEditor(String name, String fieldName, boolean selectedTailFlag) {    this.fieldName = fieldName;    coField = new ZcEleRegionTreeSelectField(selectedTailFlag);    init(name);  }  public ZcEleRegionTreeSelectEditor(String name, boolean isEnabled, String fieldName) {    this.fieldName = fieldName;    init(name);    coField.setEnabled(isEnabled);    coField.setEditable(isEnabled);  }  protected JComponent createEditorComponent() {    coField.addValueChangeListener(new ValueChangeListener() {      public void valueChanged(ValueChangeEvent e) {        syncEditObject();      }    });    return coField;  }  protected void syncEditObject() {    if (getEditObject() instanceof ZcBaseBill) {      ZcBaseBill bill = (ZcBaseBill) getEditObject();      if (bill != null) {        EleRegion bean = coField.getEleRegion();        BeanUtil.set("regCode", bean == null ? null : bean.getChrCode(), getEditObject());//        BeanUtil.set("chrName", bean == null ? null : bean.getChrName(), getEditObject());      }    }    this.fireEditSynced();  }  public Object getValue() {    return coField.getEleRegion();  }  public void setValue(Object value) {    coField.setValueByCode((String) BeanUtil.get(fieldName, value));  }}