package com.ufgov.zc.client.component.zc.fieldeditor.region;import java.awt.BorderLayout;import java.awt.GridLayout;import java.awt.event.WindowAdapter;import java.awt.event.WindowEvent;import javax.swing.JFrame;import javax.swing.JPanel;import com.ufgov.zc.client.component.JButtonTextField;import com.ufgov.zc.client.component.zc.fieldeditor.TextFieldEditor;import com.ufgov.zc.common.zc.model.EleRegion;public class ZcEleRegionTreeSelectField extends JButtonTextField {  public ZcEleRegionTreeSelectField() {    super(20);    selectDialog = new ZcEleRegionTreeSelectDialog(owner, true, this);  }  public ZcEleRegionTreeSelectField(boolean selectedTailFlag) {    super(20);    selectDialog = new ZcEleRegionTreeSelectDialog(owner, true, this, selectedTailFlag);  }  public void setValue(Object value) {    this.value = value;    if (value != null) {      EleRegion data = (EleRegion) value;      this.setText("[" + data.getChrCode() + "]" + data.getChrName());      this.setToolTipText("[" + data.getChrCode() + "]" + data.getChrName());    } else {      this.setText("");      this.setToolTipText(null);    }    this.fireValueChanged();  }  public void setEleRegion(EleRegion value) {    this.setValue(value);  }  public EleRegion getEleRegion() {    return (EleRegion) this.getValue();  }  public void handleClick(JButtonTextField jButtonTextField) {    await();    selectDialog.setVisible(true);  }  public static void main(String[] args) {    JFrame f = new JFrame();    TextFieldEditor name = new TextFieldEditor("名称", "zcCatalogueName");    ZcEleRegionTreeSelectField code = new ZcEleRegionTreeSelectField();    code.setValueByCode("000101");    code.setEditable(false);    code.setEnabled(false);    code.setEnabled(true);    name.setEnabled(true);    JPanel panel = new JPanel(new GridLayout(1, 2));    panel.add(code);    panel.add(name);    f.getContentPane().add(panel, BorderLayout.NORTH);    f.setSize(400, 300);    f.setLocationRelativeTo(null);    f.setVisible(true);    f.addWindowListener(new WindowAdapter() {      public void windowClosing(WindowEvent e) {        System.exit(0);      }    });  }}