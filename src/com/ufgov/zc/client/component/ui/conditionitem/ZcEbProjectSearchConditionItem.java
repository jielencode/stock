/** * ForeignEntitySearchConditionItem.java * com.ufgov.gk.client.component.ui.conditionitem * Administrator * 2010-6-8 */package com.ufgov.zc.client.component.ui.conditionitem;import java.util.List;import javax.swing.JComponent;import javax.swing.table.TableModel;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.client.component.event.ValueChangeEvent;import com.ufgov.zc.client.component.event.ValueChangeListener;import com.ufgov.zc.client.component.zc.fieldeditor.ForeignEntityField;import com.ufgov.zc.client.datacache.AsValDataCache;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.system.util.BeanUtil;import com.ufgov.zc.common.system.util.DateUtil;import com.ufgov.zc.common.zc.foreignentity.IForeignEntityHandler;import com.ufgov.zc.common.zc.model.ZcEbProj;/** * @author Administrator * */public class ZcEbProjectSearchConditionItem extends AbstractSearchConditionItem {  private String compoId;  private final String fieldName = "projCode";  public ZcEbProjectSearchConditionItem(String displayName) {    init(displayName);  }  public ZcEbProjectSearchConditionItem(String displayName, String compoId) {    this.compoId = compoId;    init(displayName);  }  private ForeignEntityField projectSelectField;  @Override  protected JComponent createEditorComponent() {    if (projectSelectField == null) {      creatField();      projectSelectField.addValueChangeListener(new ValueChangeListener() {        public void valueChanged(ValueChangeEvent e) {          ZcEbProj value = (ZcEbProj) projectSelectField.getValue();          String code = null;          if (value != null) {            code = value.getProjCode();          }          fireSearch();          fireValueChanged();        }      });    }    return projectSelectField;  }  private void creatField() {    String columNames[] = { "项目编号", "项目名称", "预算", "采购类型", "负责人", "立项时间" };    ZcEbProjFnHandler projHandler = new ZcEbProjFnHandler(columNames);    ElementConditionDto dto = new ElementConditionDto();    dto.setNd(WorkEnv.getInstance().getSysNd());    projectSelectField = new ForeignEntityField("ZcEbProj.getZcEbProj", dto, 20, projHandler, columNames,    "采购项目");  }  public void setProject(ZcEbProj proj) {    if (projectSelectField != null) {      projectSelectField.setValue(proj);    }  }  @Override  public void setValue(Object value) {    projectSelectField.setValue(value);  }  @Override  public Object getValue() {    return projectSelectField.getValue();  }  @Override  public void putToElementConditionDto(ElementConditionDto element) {    String v = "";    if (projectSelectField.getValue() != null) {      ZcEbProj proj = (ZcEbProj) projectSelectField.getValue();      v = proj.getProjCode();    }    BeanUtil.set(fieldName, v.equals("") ? null : v, element);  }  private class ZcEbProjFnHandler implements IForeignEntityHandler {    private final String columNames[];    public ZcEbProjFnHandler(String columNames[]) {      this.columNames = columNames;    }    public void excute(List selectedDatas) {      // TODO Auto-generated method stub      for (Object object : selectedDatas) {        ZcEbProj proj = (ZcEbProj) object;        ZcEbProjectSearchConditionItem.this.projectSelectField.setValue(proj);        ZcEbProjectSearchConditionItem.this.projectSelectField.setText(proj.getProjName());        fireSearch();        fireValueChanged();      }    }    @Override    public TableModel createTableModel(List showDatas) {      Object data[][] = new Object[showDatas.size()][columNames.length];      for (int i = 0; i < showDatas.size(); i++) {        ZcEbProj rowData = (ZcEbProj) showDatas.get(i);        int col = 0;        data[i][col++] = rowData.getProjCode();        data[i][col++] = rowData.getProjName();        data[i][col++] = rowData.getProjSum();        data[i][col++] = AsValDataCache.getName("ZC_VS_PITEM_OPIWAY", rowData.getPurType());        data[i][col++] = rowData.getManager();        data[i][col++] = DateUtil.dateToDdString(rowData.getInputDate());      }      MyTableModel model = new MyTableModel(data, columNames) {        @Override        public boolean isCellEditable(int row, int colum) {          return false;        }      };      return model;    }    @Override    public boolean isMultipleSelect() {      // TODO Auto-generated method stub      return false;    }  }}