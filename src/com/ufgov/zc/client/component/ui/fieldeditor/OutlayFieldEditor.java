package com.ufgov.zc.client.component.ui.fieldeditor;import javax.swing.JComponent;import com.ufgov.zc.client.common.AsOptionMeta;import com.ufgov.zc.client.common.BillElementMeta;import com.ufgov.zc.client.component.element.OutlayTreeSelectField;import com.ufgov.zc.client.component.event.ValueChangeEvent;import com.ufgov.zc.client.component.event.ValueChangeListener;import com.ufgov.zc.common.commonbiz.model.BaseBill;import com.ufgov.zc.common.commonbiz.model.Outlay;import com.ufgov.zc.common.system.constants.BusinessOptionConstants;import com.ufgov.zc.common.system.util.LevelControlUtil;public class OutlayFieldEditor extends AbstractFieldEditor {  /**   *    */  private static final long serialVersionUID = 1L;  private OutlayTreeSelectField outlayField;  private String optOutLayCode = AsOptionMeta.getOptVal(BusinessOptionConstants.OPT_CP_OUTLAYTYPE_LEVEL);  public OutlayFieldEditor(String name) {    super(name);  }  public OutlayFieldEditor(String name, boolean isEnabled) {    super(name);    outlayField.setEditable(isEnabled);    outlayField.setEnabled(isEnabled);  }  public OutlayFieldEditor(Object curData, BillElementMeta preBem, BillElementMeta curBem, String name,  boolean isEnabled) {    super(name, curData, preBem);    this.setOutlayPrefix();    outlayField.setBillElementMeta(curBem);    outlayField.setEditable(isEnabled);    outlayField.setEnabled(isEnabled);  }  public OutlayFieldEditor(Object curData, BillElementMeta preBem, BillElementMeta curBem, String name) {    super(name, curData, preBem);    outlayField.setBillElementMeta(curBem);  }  protected JComponent createEditorComponent() {    outlayField = new OutlayTreeSelectField();    outlayField.addValueChangeListener(new ValueChangeListener() {      public void valueChanged(ValueChangeEvent e) {        syncObject();      }    });    return outlayField;  }  /**   * 同步到对象   */  private void syncObject() {    if (getEditObject() instanceof BaseBill) {      BaseBill bill = (BaseBill) getEditObject();      if (bill != null) {        Outlay outlay = outlayField.getOutlay();        bill.setOutlayCode(outlay == null ? null : outlay.getCode());      }    }    this.fireEditSynced();  }  public void setPrefix(String prefix) {    outlayField.setPrefix(prefix);  }  public void setCtrlLevelNum(int ctrlLevelNum) {    outlayField.setCtrlLevelNum(ctrlLevelNum);  }  public void setRandomEdit(boolean randomEdit) {    outlayField.randomEdit = randomEdit;  }  /**   * 设置相关的prefix   *   */  private void setOutlayPrefix() {    if (getEditObject() instanceof BaseBill) {      BaseBill bill = (BaseBill) getEditObject();      if (bill != null) {        outlayField.setPrefix(getPreFixCode(bill.getOutlayCode()));      }    }  }  /**   * @param ctrLength   * @param curOutlayCode   * @param preOutLayCode   * @return   */  private String getPreFixCode(String curOutlayCode) {    String preOutLayCode = "";    this.optOutLayCode = AsOptionMeta.getOptVal(BusinessOptionConstants.OPT_CP_OUTLAYTYPE_LEVEL);    BillElementMeta preBem = getPreBem();    if (preBem != null) {      int levelCtrl = preBem.getElementLevelCtrl("OUTLAY_CODE");      int ctrLength = LevelControlUtil.getCtrLength(this.optOutLayCode, levelCtrl);      if (curOutlayCode != null && curOutlayCode.length() > ctrLength) {        preOutLayCode = curOutlayCode.substring(0, ctrLength);      } else if (curOutlayCode != null && curOutlayCode.length() <= ctrLength) {        preOutLayCode = curOutlayCode.substring(0, curOutlayCode.length());      }    }    return preOutLayCode;  }  public Object getValue() {    return outlayField.getOutlay();  }  public void setValue(Object value) {    if (value == null) {      this.outlayField.setValue(null);    } else if (value instanceof BaseBill) {      BaseBill bill = (BaseBill) value;      outlayField.setValueByCode(bill.getOutlayCode());    }  }  public void setFieldEditorCode() {    this.FieldEditorCode = FieldEditorCodeConstants.OUTLAY_CODE;  }}