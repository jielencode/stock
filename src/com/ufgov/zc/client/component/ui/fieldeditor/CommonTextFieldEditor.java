package com.ufgov.zc.client.component.ui.fieldeditor;import java.awt.event.KeyAdapter;import java.awt.event.KeyEvent;import java.math.BigDecimal;import javax.swing.JComponent;import javax.swing.JTextField;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.common.cp.model.CpApply;import com.ufgov.zc.common.cp.model.CpVoucher;import com.ufgov.zc.common.system.constants.CpElementConstants;public class CommonTextFieldEditor extends AbstractFieldEditor {  private JTextField field;  public CommonTextFieldEditor(String name) {    super(name);  }  public Object getValue() {    return field.getText();  }  public void setValue(Object value) { //在选择的上面的行发生改变的时候所触发的事件    if (value == null || value instanceof String) {      field.setText((String) value);      return;    } else if (value instanceof CpVoucher) {      CpVoucher cpVoucher = (CpVoucher) value;      if (LangTransMeta.translate(CpElementConstants.FIELD_TRANS_REMARK).equals(getName())) {        field.setText(cpVoucher.getRemark());      }      return;    }    field.setText(value.toString());  }  protected JComponent createEditorComponent() { //生成下面的控件，并将改变的内容同步到对象中    field = new JTextField();    field.addKeyListener(new KeyAdapter() {      public void keyReleased(KeyEvent e) {        if (getEditObject() instanceof CpVoucher) {          CpVoucher cpVoucher = (CpVoucher) getEditObject();          if (cpVoucher != null) {            String fieldValue = field.getText();            if (fieldValue != null) {              if (LangTransMeta.translate(CpElementConstants.FIELD_TRANS_REMARK).equals(getName().replaceAll("\\*", ""))) {                cpVoucher.setRemark(fieldValue);              }            }          }        }        if (getEditObject() instanceof CpApply) {          CpApply cpApply = (CpApply) getEditObject();          if (cpApply != null) {            String fieldValue = field.getText();            if (fieldValue != null) {              if (LangTransMeta.translate(CpElementConstants.FIELD_TRANS_CUR_MONEY).equals(getName().replace("\\*", ""))) {                cpApply.setOrgMoney(new BigDecimal(fieldValue));              } else if (LangTransMeta.translate(CpElementConstants.FIELD_TRANS_REMARK).equals(getName().replace("\\*", ""))) {                cpApply.setRemark(fieldValue);              }            }          }        }      }    });    return field;  }  @Override  public void setFieldEditorCode() {    // TODO Auto-generated method stub  }}