package com.ufgov.zc.client.component.ui.fieldeditor;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.KeyAdapter;import java.awt.event.KeyEvent;import javax.swing.JComponent;import com.ufgov.zc.client.component.ContractSelectField;import com.ufgov.zc.client.component.event.ValueChangeEvent;import com.ufgov.zc.client.component.event.ValueChangeListener;import com.ufgov.zc.common.commonbiz.model.BaseBill;import com.ufgov.zc.common.commonbiz.model.Contract;public class ContractCodeGridFieldEditor extends AbstractFieldEditor {  private ContractSelectField contractField;  public ContractCodeGridFieldEditor(String name) {    super(name);  }  public ContractCodeGridFieldEditor(String name, boolean isEnabled) {    super(name);    contractField.setEnabled(isEnabled);    contractField.setEditable(isEnabled);  }  protected JComponent createEditorComponent() {    contractField = new ContractSelectField();    contractField.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        asyObject();      }    });    contractField.addValueChangeListener(new ValueChangeListener() {      public void valueChanged(ValueChangeEvent e) {        asyObject();        fireEditSynced();      }    });    contractField.addKeyListener(new KeyAdapter() {      public void keyReleased(KeyEvent e) {        asyObject();        fireEditSynced();      }    });    return contractField;  }  /**   * 同步到对象   */  private void asyObject() {    if (getEditObject() instanceof BaseBill) {      BaseBill bill = (BaseBill) getEditObject();      if (bill != null) {        Contract contract = contractField.getContract();        if (contract == null && !"".equals(contractField.getText())) {          bill.setContractCode(contractField.getText());        } else if (contract != null) {          bill.setContractCode(contract.getContractCode());        } else {          bill.setContractCode(null);        }      }    }  }  public Object getValue() {    return contractField.getContract();  }  public void setValue(Object value) {    if (value instanceof BaseBill) {      BaseBill bill = (BaseBill) value;      String contractCode = bill.getContractCode();      contractField.setValueByCode(contractCode);      if (contractField.getValue() == null && contractCode != null) {        contractField.setText(contractCode);        asyObject();      }    }  }  @Override  public void setFieldEditorCode() {    this.FieldEditorCode = FieldEditorCodeConstants.CONTRACT_CODE;  }}