package com.ufgov.zc.client.component.table.codecellrenderer;import java.awt.Component;import java.util.Collections;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.swing.JTable;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.client.component.table.cellrenderer.LineWrapCellRenderer;import com.ufgov.zc.common.commonbiz.model.BAcc;import com.ufgov.zc.common.commonbiz.publish.IBaseDataServiceDelegate;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;public class NextYearBAccCellRenderer extends LineWrapCellRenderer {  private static List dataList;  private static Map dataMap;  private static final long serialVersionUID = 3184261311169929819L;  IBaseDataServiceDelegate baseDataServiceDelegate = (IBaseDataServiceDelegate) ServiceFactory  .create(IBaseDataServiceDelegate.class, "baseDataServiceDelegate");  public NextYearBAccCellRenderer() {    init();  }  private void init() {    int nd = WorkEnv.getInstance().getTransNd();    RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();    ElementConditionDto dto = new ElementConditionDto();    dto.setNd(nd + 1);    dataList = Collections.unmodifiableList(baseDataServiceDelegate.getBAcc(dto, requestMeta));    Map tempMap = new HashMap();    for (Object o : dataList) {      BAcc temp = (BAcc) o;      tempMap.put(temp.getCode(), temp);    }    dataMap = Collections.unmodifiableMap(tempMap);  }  public Component getTableCellRendererComponent(JTable table, Object value,  boolean isSelected, boolean hasFocus, int row, int column) {    String name = getName((String) value);    if (value != null) {      this.setToolTipText("[" + value + "]" + name);    } else {      this.setToolTipText(null);    }    return super.getTableCellRendererComponent(table, name, isSelected, hasFocus,    row, column);  }  public static String getName(String code) {    BAcc value = (BAcc) dataMap.get(code);    if (value != null) {      return value.getName();    }    return code;  }}