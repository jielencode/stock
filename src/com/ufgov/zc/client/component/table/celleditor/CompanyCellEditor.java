package com.ufgov.zc.client.component.table.celleditor;import java.awt.Component;import javax.swing.AbstractCellEditor;import javax.swing.JTable;import javax.swing.table.TableCellEditor;import com.ufgov.zc.client.common.AsOptionMeta;import com.ufgov.zc.client.common.BillElementMeta;import com.ufgov.zc.client.component.element.CompanyTreeSelectField;import com.ufgov.zc.client.component.event.ValueChangeEvent;import com.ufgov.zc.client.component.event.ValueChangeListener;import com.ufgov.zc.common.commonbiz.model.Company;import com.ufgov.zc.common.system.constants.BusinessOptionConstants;import com.ufgov.zc.common.system.util.LevelControlUtil;public class CompanyCellEditor extends AbstractCellEditor implements TableCellEditor {  private CompanyTreeSelectField companyField = new CompanyTreeSelectField();  private CompanyCellEditor self = this;  private BillElementMeta preBem = null;  private BillElementMeta curBem = null;  private String optCoCode = null;  public CompanyCellEditor() {    companyField.addValueChangeListener(new ValueChangeListener() {      public void valueChanged(ValueChangeEvent e) {        self.stopCellEditing();      }    });  }  public CompanyCellEditor(BillElementMeta preBem, BillElementMeta curBem) {    this.preBem = preBem;    this.curBem = curBem;    companyField.addValueChangeListener(new ValueChangeListener() {      public void valueChanged(ValueChangeEvent e) {        Company company = companyField.getCompany();        if (company != null) {          companyField.setPrefix(getPreFixCode(company.getCode()));          companyField.setCtrlLevelNum(self.curBem.getCtrlLen("CO_CODE"));          companyField.randomEdit = self.curBem.isElementRandomEdit("CO_CODE");        }        self.stopCellEditing();      }    });  }  public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row,  int column) {    if (value instanceof String) {      companyField.setPrefix(getPreFixCode(value.toString()));      companyField.setCtrlLevelNum(self.curBem.getCtrlLen("CO_CODE"));      companyField.randomEdit = self.curBem.isElementRandomEdit("CO_CODE");      companyField.setValue(null);    } else      companyField.setValue(value);    return companyField;  }  public Object getCellEditorValue() {    Object obj = companyField.getCompany();    if (obj != null) {      return companyField.getCompany();    } else {      return companyField.getText();    }  }  /**   *    * @param curCoCode   * @return   */  private String getPreFixCode(String curCoCode) {    String preCoCode = "";    this.optCoCode = AsOptionMeta.getOptVal(BusinessOptionConstants.OPT_CO_CODE);    if (preBem != null) {      int levelCtrl = preBem.getElementLevelCtrl("CO_CODE");      int ctrLength = LevelControlUtil.getCtrLength(this.optCoCode, levelCtrl);      if (curCoCode != null && curCoCode.length() > ctrLength) {        preCoCode = curCoCode.substring(0, ctrLength);      } else if (curCoCode != null && curCoCode.length() <= ctrLength) {        preCoCode = curCoCode.substring(0, curCoCode.length());      }    }    return preCoCode;  }}