package com.ufgov.zc.client.component;import java.awt.BorderLayout;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.WindowAdapter;import java.awt.event.WindowEvent;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.swing.JFrame;import javax.swing.JPanel;import com.ufgov.smartclient.component.JComboBoxEx;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.common.commonbiz.model.BankAccount;import com.ufgov.zc.common.commonbiz.model.MaCpBankBal;import com.ufgov.zc.common.commonbiz.publish.IBaseDataServiceDelegate;import com.ufgov.zc.common.system.RequestMeta;public class PayBankComboBox extends JComboBoxEx {  private static final long serialVersionUID = -8777566418156030123L;  private List dataList;  private Map<String, MaCpBankBal> dataMap = new HashMap<String, MaCpBankBal>();  public PayBankComboBox() {    this(null);  }  public PayBankComboBox(String bankCode) {    initGUI(bankCode);  }  private void initGUI(String bankCode) {    this.setPrototypeDisplayValue("AAAAAAAAAAAAAAAAA");    int nd = WorkEnv.getInstance().getTransNd();    IBaseDataServiceDelegate baseDataServiceDelegate = (IBaseDataServiceDelegate) ServiceFactory    .create(IBaseDataServiceDelegate.class, "baseDataServiceDelegate");    RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();    dataList = baseDataServiceDelegate.getPayBank(nd, "03", WorkEnv.getInstance().getCurrUserId(), requestMeta);    if (dataList.isEmpty()) {      dataList = baseDataServiceDelegate.getPayBank(nd, "03", null, requestMeta);    }    addItem(null);    for (int i = 0; i < dataList.size(); i++) {      BankAccount bankAccount = (BankAccount) dataList.get(i);      addItem(bankAccount);      addItemDisplaLable(bankAccount, "[" + bankAccount.getBankCode() + "]"      + bankAccount.getBankName());    }    addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        BankAccount selected = (BankAccount) getSelectedItem();        if (selected != null) {          setToolTipText("[" + selected.getBankCode() + "]" + selected.getBankName());        } else {          setToolTipText(null);        }      }    });  }  public BankAccount getSelectedBankAccount() {    return (BankAccount) this.getSelectedItem();  }  public static void main(String[] args) {    JFrame f = new JFrame();    PayBankComboBox textField = new PayBankComboBox();    textField.setEditable(false);    textField.setEnabled(false);    textField.setEnabled(true);    JPanel panel = new JPanel();    panel.add(textField);    f.getContentPane().add(panel, BorderLayout.NORTH);    // f.pack();    // SwingUtilities.updateComponentTreeUI(panel);    f.setSize(400, 300);    f.setLocationRelativeTo(null);    f.setVisible(true);    f.addWindowListener(new WindowAdapter() {      @Override      public void windowClosing(WindowEvent e) {        System.exit(0);      }    });  }}