/** *  */package com.ufgov.zc.server.zc.web.action.menugoods;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.commons.logging.Log;import org.apache.commons.logging.LogFactory;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import com.ufgov.zc.common.zc.pagination.WebPagination;import com.ufgov.zc.server.zc.dao.pagination.PaginationHandler;import com.ufgov.zc.server.zc.dao.pagination.PaginationHandlerJSImpl;import com.ufgov.zc.server.zc.service.IMenuGoodsService;import com.ufgov.zc.server.zc.web.action.StrutsAction;import com.ufgov.zc.server.zc.web.form.SpForm;public class SpAction extends StrutsAction {  private final static Log log = LogFactory.getLog(SpAction.class);  public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {    SpForm spForm = (SpForm) form;    String forward = "success";    try {      String catalogueId = spForm.getCatalogueId() == null ? request.getParameter("catalogueId") : spForm.getCatalogueId();      String brandId = spForm.getBrandId() == null ? (request.getParameter("brandId") != null ? request.getParameter("brandId") : "") : spForm      .getBrandId();      String order = spForm.getOrders() == null ? (request.getParameter("order") != null ? request.getParameter("order") : "") : spForm.getOrders();      String keyWords = spForm.getKeyWords() == null ? (request.getParameter("keyWords") != null ? request.getParameter("keyWords") : "") : spForm      .getKeyWords();      Map parameterObject = new HashMap();      parameterObject.put("catalogueId", catalogueId);      parameterObject.put("brandId", brandId);      parameterObject.put("keyWords", keyWords);      parameterObject.put("status", "2");      parameterObject.put("xyPrice1", spForm.getXyPrice1());      parameterObject.put("xyPrice2", spForm.getXyPrice2());      parameterObject.put("youhl1", spForm.getYouhl1());      parameterObject.put("youhl2", spForm.getYouhl2());      List orders = new ArrayList();      if (order != null && !"".equals(order.trim())) {        orders.add(order);      }      orders.add("ZC_MER_CODE");      parameterObject.put("orders", orders);      IMenuGoodsService menuGoodsService = (IMenuGoodsService) this.getWebApplicationContext().getBean("menuGoodsService");      //分页      PaginationHandler handler = new PaginationHandlerJSImpl();      WebPagination pagination = webPagination(request, mapping);      handler.setPerCount(pagination.getPageSize());      long count = new Long(menuGoodsService.getCountNum(parameterObject).intValue()).longValue();      handler.setTotalCount(count);      pagination.setTotalSize((int) count);      handler.setTotalCount(count);      handler.moveCursor((long) pagination.getCurrentPage());      //request.setAttribute("handler", pagination);      spForm.setPagination(pagination);      parameterObject.put("start", new Long(handler.getStartCursor()).toString());      parameterObject.put("end", new Long(handler.getEndCursor()).toString());      spForm.setMerchandiseList(menuGoodsService.getMerchandise(parameterObject));      spForm.setCountNum(new Integer(new Long(count).intValue()));      spForm.setCatalogueId(catalogueId);      if (brandId != null && !"".equals(brandId.trim())) {        spForm.setBrandId(brandId);      }      if (order != null && !"".equals(order.trim())) {        spForm.setOrders(order);      }      if (keyWords != null && !"".equals(keyWords.trim())) {        spForm.setKeyWords(keyWords);      }    } catch (Exception e) {      log.error(e);      throw e;    }    return mapping.findForward(forward);  }}