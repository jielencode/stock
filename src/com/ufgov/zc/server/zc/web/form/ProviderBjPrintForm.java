/**    * @(#) project: ZFCG * @(#) file: providerBjPrintForm.java *  * Copyright 2011 UFGOV, Inc. All rights reserved. * UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms. *  */package com.ufgov.zc.server.zc.web.form;import java.util.ArrayList;import java.util.Date;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.servlet.http.HttpSession;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.zc.model.EvalPackProvider;import com.ufgov.zc.common.zc.model.ZcEbEcbjItem;import com.ufgov.zc.common.zc.model.ZcEbPack;import com.ufgov.zc.common.zc.model.ZcEbPlan;import com.ufgov.zc.common.zc.model.ZcEbProj;import com.ufgov.zc.server.system.SpringContext;import com.ufgov.zc.server.system.service.IAsFileService;import com.ufgov.zc.server.zc.service.IZcEbEcbjService;import com.ufgov.zc.server.zc.service.IZcEbEvalService;import com.ufgov.zc.server.zc.service.IZcEbPlanService;import com.ufgov.zc.server.zc.service.IZcEbProjService;import com.ufgov.zc.server.zc.web.ylbTable.entity.XmlTable;import com.ufgov.zc.server.zc.web.ylbTable.service.TableService;/** *  * @ClassName: providerBjPrintForm *  * @Description: 供应商报价打印 *  * @date: 2011-4-11 下午08:17:06 *  * @version: V1.0 *  * @since: 1.0 *  * @author: fanpl *  * @modify: */public class ProviderBjPrintForm extends AbstractActionForm {  private static final long serialVersionUID = -127140804047344129L;  private List providerList;  private Map providerBjMap = new HashMap();  private Map providerYlbMap = new HashMap();  /**   *    * 采购代理机构的名称   */  private String zcAgeyName;  private Date openBidDate;  public String getZcAgeyName() {    System.out.println(zcAgeyName);    return zcAgeyName;  }  public void setZcAgeyName(String zcAgeyName) {    this.zcAgeyName = zcAgeyName;  }  private int bjNo = 1;  public ZcEbProj getZcEbProj() {    return zcEbProj;  }  public void setZcEbProj(ZcEbProj zcEbProj) {    this.zcEbProj = zcEbProj;  }  public ZcEbPack getZcEbPack() {    return zcEbPack;  }  public void setZcEbPack(ZcEbPack zcEbPack) {    this.zcEbPack = zcEbPack;  }  private ZcEbProj zcEbProj;  private ZcEbPack zcEbPack;  public Map getProviderBjMap() {    return providerBjMap;  }  public void setProviderBjMap(Map providerBjMap) {    this.providerBjMap = providerBjMap;  }  public Map getProviderYlbMap() {    return providerYlbMap;  }  public void setProviderYlbMap(Map providerYlbMap) {    this.providerYlbMap = providerYlbMap;  }  public Date getOpenBidDate() {    return openBidDate;  }  public void setOpenBidDate(Date openBidDate) {    this.openBidDate = openBidDate;  }  public String toProviderBjPrint() {    try {      String projCode = this.getRequest().getParameter("projCode");      String packCode = this.getRequest().getParameter("packCode");      String zcAgeyName = this.getRequest().getParameter("zcAgeyName");      Map param = new HashMap();      param.put("PROJ_CODE", projCode);      param.put("PACK_CODE", packCode);      // 获得供应商列表      IZcEbEvalService zcEbEvalService = (IZcEbEvalService) SpringContext.getBean("zcEbEvalService");      IZcEbEcbjService zcEbEcbjService = (IZcEbEcbjService) SpringContext.getBean("zcEbEcbjService");      IZcEbProjService zcEbProjService = (IZcEbProjService) SpringContext.getBean("zcEbProjService");      IZcEbPlanService zcEbPlanService = (IZcEbPlanService) SpringContext.getBean("zcEbPlanService");      zcEbProj = zcEbProjService.getZcEbProjMasterByProjCode(projCode);      zcEbPack = zcEbProjService.getZcEbPackByPackCode(packCode);      openBidDate = ((ZcEbPlan) zcEbPlanService.getZcEbPlanByProjCode(projCode)).getOpenBidTime();      providerList = zcEbEvalService.getProviderList(param);      ElementConditionDto dto = new ElementConditionDto();      dto.setProjCode(projCode);      setZcAgeyName(zcAgeyName);      dto.setPackCode(packCode);      setOpenBidDate(openBidDate);      dto.setStatus("success");      RequestMeta mt = new RequestMeta();      if (mt.getTransDate() == null) {        mt.setTransDate(new Date());      }      HttpSession sessions = getRequest().getSession();      String nd = (String) sessions.getAttribute("svNd");      try {        mt.getTransDate().setYear(Integer.parseInt(nd));      } catch (Exception e) {      }      mt.setSvCoCode((String) sessions.getAttribute("svCoCode"));      mt.setSvOrgCode((String) sessions.getAttribute("svOrgCode"));      mt.setSvPoCode((String) sessions.getAttribute("svPoCode"));      mt.setAccountId((String) sessions.getAttribute("svAccountId"));      mt.setSvUserID((String) sessions.getAttribute("svUserID"));//      mt.setSvRoleId((String) sessions.getAttribute("svRoleId"));      for (int i = 0; i < providerList.size(); i++) {        EvalPackProvider provider = (EvalPackProvider) providerList.get(i);        dto.setZcText1(provider.getProviderCode());        List bjList = zcEbEcbjService.getZcEbEcbjItemList(dto, mt);        if (bjList != null && bjList.size() > bjNo) {          bjNo = bjList.size();        }        providerBjMap.put(provider.getProviderName(), bjList);      }      this.getRequest().setAttribute("bjNo", "" + this.getBjNo());      this.getRequest().setAttribute("providerList", this.getProviderList());      this.getRequest().setAttribute("providerBjMap", this.getProviderBjMap());      this.getRequest().setAttribute("zcEbPack", this.getZcEbPack());      this.getRequest().setAttribute("zcEbProj", this.getZcEbProj());      this.getRequest().setAttribute("zcAgeyName", this.getZcAgeyName());      this.getRequest().setAttribute("openBidDate", this.getOpenBidDate());      return SUCCESS;    } catch (Exception e) {      e.printStackTrace();      throw new RuntimeException(e);    }  }  public List getProviderList() {    return providerList;  }  public void setProviderList(List providerList) {    this.providerList = providerList;  }  public int getBjNo() {    return bjNo;  }  public void setBjNo(int bjNo) {    this.bjNo = bjNo;  }  /**   *    *    *    * @Description: 打印供应商的报价一览表   *    * @return String 返回类型   *    * @since 1.0   */  public String toProviderYlbPrint() {    try {      String projCode = this.getRequest().getParameter("projCode");      String packCode = this.getRequest().getParameter("packCode");      String zcAgeyName = this.getRequest().getParameter("zcAgeyName");      TableService tbService = new TableService();      Map param = new HashMap();      param.put("PROJ_CODE", projCode);      param.put("PACK_CODE", packCode);      // 获得供应商列表      IZcEbEvalService zcEbEvalService = (IZcEbEvalService) SpringContext.getBean("zcEbEvalService");      IZcEbEcbjService zcEbEcbjService = (IZcEbEcbjService)SpringContext.getBean("zcEbEcbjService");      IZcEbProjService zcEbProjService = (IZcEbProjService) SpringContext.getBean("zcEbProjService");      IZcEbPlanService zcEbPlanService = (IZcEbPlanService) SpringContext.getBean("zcEbPlanService");      IAsFileService asFileService = (IAsFileService) SpringContext.getBean("asFileService");      zcEbProj = zcEbProjService.getZcEbProjMasterByProjCode(projCode);      zcEbPack = zcEbProjService.getZcEbPackByPackCode(packCode);      openBidDate = ((ZcEbPlan) zcEbPlanService.getZcEbPlanByProjCode(projCode)).getOpenBidTime();      providerList = zcEbEvalService.getProviderList(param);      ElementConditionDto dto = new ElementConditionDto();      dto.setProjCode(projCode);      setZcAgeyName(zcAgeyName);      dto.setPackCode(packCode);      setOpenBidDate(openBidDate);      dto.setStatus("success");      RequestMeta mt = new RequestMeta();      if (mt.getTransDate() == null) {        mt.setTransDate(new Date());      }      HttpSession sessions = getRequest().getSession();      String nd = (String) sessions.getAttribute("svNd");      try {        mt.getTransDate().setYear(Integer.parseInt(nd));      } catch (Exception e) {      }      mt.setSvCoCode((String) sessions.getAttribute("svCoCode"));      mt.setSvOrgCode((String) sessions.getAttribute("svOrgCode"));      mt.setSvPoCode((String) sessions.getAttribute("svPoCode"));      mt.setAccountId((String) sessions.getAttribute("svAccountId"));      mt.setSvUserID((String) sessions.getAttribute("svUserID"));//      mt.setSvRoleId((String) sessions.getAttribute("svRoleId"));      for (int i = 0; i < providerList.size(); i++) {        EvalPackProvider provider = (EvalPackProvider) providerList.get(i);        dto.setZcText1(provider.getProviderCode());        List bjList = zcEbEcbjService.getZcEbEcbjItemList(dto, mt);        List ylbTableList = new ArrayList();        for (int j = 0; j < bjList.size(); j++) {          ZcEbEcbjItem item = (ZcEbEcbjItem) bjList.get(j);          XmlTable xmlTable = tbService.convertStr2XmlTable(asFileService.getAsFileById(item.getFileId()).getFileContent());          ylbTableList.add(xmlTable);        }        if (bjList != null && bjList.size() > bjNo) {          bjNo = bjList.size();        }        providerBjMap.put(provider.getProviderName(), bjList);        providerYlbMap.put(provider.getProviderName(), ylbTableList);      }      this.getRequest().setAttribute("bjNo", "" + this.getBjNo());      this.getRequest().setAttribute("providerList", this.getProviderList());      this.getRequest().setAttribute("providerBjMap", this.getProviderBjMap());      this.getRequest().setAttribute("providerYlbMap", this.getProviderYlbMap());      this.getRequest().setAttribute("zcEbPack", this.getZcEbPack());      this.getRequest().setAttribute("zcEbProj", this.getZcEbProj());      this.getRequest().setAttribute("zcAgeyName", this.getZcAgeyName());      this.getRequest().setAttribute("openBidDate", this.getOpenBidDate());      return SUCCESS;    } catch (Exception e) {      e.printStackTrace();      throw new RuntimeException(e);    }  }}