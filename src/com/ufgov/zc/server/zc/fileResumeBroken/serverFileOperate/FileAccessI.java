package com.ufgov.zc.server.zc.fileResumeBroken.serverFileOperate;import java.io.File;import java.io.IOException;import java.io.RandomAccessFile;import java.io.Serializable;public class FileAccessI implements Serializable {  private static final long serialVersionUID = 4493667350182831302L;  RandomAccessFile oSavedFile;  long nPos;  public FileAccessI() throws IOException {    this("", 0);  }  public FileAccessI(String sName, long nPos) throws IOException {    File file = new File(sName);    if (!file.exists()) {      file.getParentFile().mkdirs();      file.createNewFile();    }    oSavedFile = new RandomAccessFile(sName, "rw");    this.nPos = nPos;    oSavedFile.seek(nPos);  }  public synchronized int write(byte[] b, int nStart, int nLen) throws Exception {    int n = -1;    try {      oSavedFile.write(b, nStart, nLen);      n = nLen;      oSavedFile.close();    } catch (Exception e) {      e.printStackTrace();      throw new Exception(e.getMessage());    } finally {      if (oSavedFile != null) {        oSavedFile.close();      }    }    return n;  }}