package com.ufgov.zc.server.zc.fileResumeBroken.communication;import java.util.HashMap;import java.util.Map;import com.ufgov.zc.server.zc.actions.DataSearchAction;import com.ufgov.zc.server.zc.actions.DoEcbjAction;import com.ufgov.zc.server.zc.actions.GetFormulaAction;import com.ufgov.zc.server.zc.actions.LoginAction;import com.ufgov.zc.server.zc.actions.TBFileDecodeAction;import com.ufgov.zc.server.zc.actions.UpdateRelationDataAction;import com.ufgov.zc.server.zc.fileResumeBroken.authentication.Authentication;import com.ufgov.zc.server.zc.fileResumeBroken.download.DownLoadConfigFile;import com.ufgov.zc.server.zc.fileResumeBroken.download.DownLoadFile;import com.ufgov.zc.server.zc.fileResumeBroken.download.FetchFile;import com.ufgov.zc.server.zc.fileResumeBroken.serverFileOperate.FileInDatabase;import com.ufgov.zc.server.zc.fileResumeBroken.serverFileOperate.ServerFileOperate;import com.ufgov.zc.server.zc.fileResumeBroken.upload.FetchUploadFile;import com.ufgov.zc.server.zc.fileResumeBroken.upload.UploadFile;public class CallServer {  private Map parameterMap = new HashMap();  private Map returnMap = new HashMap();  private String functionDo;  public Map getReturnMap() {    return returnMap;  }  public void setReturnMap(Map returnMap) {    this.returnMap = returnMap;  }  public Map getParameterMap() {    return parameterMap;  }  public void setParameterMap(Map parameterMap) {    this.parameterMap = parameterMap;  }  public String getFunctionDo() {    return functionDo;  }  public void setFunctionDo(String functionDo) {    this.functionDo = functionDo;  }  public CallServer(Map parameterMap, String functionDo) {    setParameterMap(parameterMap);    setFunctionDo(functionDo);  }  public void start() {    System.out.println("callServer:" + functionDo);    if ("authentication".equalsIgnoreCase(functionDo)) {      System.out.println("进入分支authentication：" + functionDo);      Authentication authentication = new Authentication(parameterMap, functionDo);      authentication.start();      setReturnMap(authentication.getReturnMap());    } else if ("updatedataaction".equalsIgnoreCase(functionDo)) {      System.out.println("进入分支updatedataaction：" + functionDo);      UpdateRelationDataAction urda = new UpdateRelationDataAction(parameterMap, functionDo);      urda.start();      setReturnMap(urda.getReturnMap());    } else if ("getZcEbFormula".equalsIgnoreCase(functionDo)) {      System.out.println("获取评标方法CallServer：" + functionDo);      GetFormulaAction getFormulaAction = new GetFormulaAction(parameterMap, functionDo);      getFormulaAction.start();      setReturnMap(getFormulaAction.getReturnMap());    } else if ("fetchFile".equalsIgnoreCase(functionDo)) {      FetchFile fetchFile = new FetchFile(parameterMap, functionDo);      fetchFile.start();      setReturnMap(fetchFile.getReturnMap());    } else if ("downloadFile".equalsIgnoreCase(functionDo)) {      DownLoadFile downLoadFile = new DownLoadFile(parameterMap, functionDo);      downLoadFile.start();      setReturnMap(downLoadFile.getReturnMap());    } else if ("fetchTempFile".equalsIgnoreCase(functionDo)) {      FetchUploadFile fetchFile = new FetchUploadFile(parameterMap, functionDo);      fetchFile.start();      setReturnMap(fetchFile.getReturnMap());    } else if ("uploadFile".equalsIgnoreCase(functionDo)) {      UploadFile uploadFile = new UploadFile(parameterMap, functionDo);      uploadFile.start();      setReturnMap(uploadFile.getReturnMap());    } else if ("testFileInDatabase".equalsIgnoreCase(functionDo)) {      FileInDatabase fileInDatabase = new FileInDatabase(parameterMap, functionDo);      fileInDatabase.start();      setReturnMap(fileInDatabase.getReturnMap());    } else if ("doecbjaction".equalsIgnoreCase(functionDo)) {//再次报价      DoEcbjAction ecbj = new DoEcbjAction(parameterMap, functionDo);      ecbj.start();      setReturnMap(ecbj.getReturnMap());    } else if ("loginaction".equalsIgnoreCase(functionDo)) {//登录      LoginAction login = new LoginAction(parameterMap, functionDo);      login.start();      setReturnMap(login.getReturnMap());    } else if ("tbfiledecodeaction".equalsIgnoreCase(functionDo)) {//投标书解密相关      TBFileDecodeAction decode = new TBFileDecodeAction(parameterMap, functionDo);      decode.start();      setReturnMap(decode.getReturnMap());    } else if ("datasearchaction".equalsIgnoreCase(functionDo)) {//项目信息查询      System.out.println("进入:datasearchaction——>" + functionDo);      DataSearchAction searcher = new DataSearchAction(parameterMap, functionDo);      searcher.start();      setReturnMap(searcher.getReturnMap());    } else if ("getftsconfig".equalsIgnoreCase(functionDo)) {      System.out.println("进入getftsconfig...");      DownLoadConfigFile downLoadConfigFile = new DownLoadConfigFile(parameterMap, functionDo);      downLoadConfigFile.start();      setReturnMap(downLoadConfigFile.getReturnMap());    } else if ("uploadtbfile".equalsIgnoreCase(functionDo)) {      ServerFileOperate serverFileOperate = new ServerFileOperate();      byte[] buff = (byte[]) parameterMap.get("BUFFCONTENT");      String sequenceOrder = (String) parameterMap.get("SEQUENCEORDER");      serverFileOperate.outPutStream(parameterMap, buff, sequenceOrder);      Map rv = new HashMap();      rv.put("FILEID", serverFileOperate.getFileId());      rv.put("TS_STATUS", serverFileOperate.getTransStatus());      rv.put("ERR_CONTENT", serverFileOperate.getErrContent());      rv.put("SERVERFILELEN", serverFileOperate.getServerFileLen() + "");      setReturnMap(rv);    }  }}