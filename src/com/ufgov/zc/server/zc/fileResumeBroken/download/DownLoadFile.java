package com.ufgov.zc.server.zc.fileResumeBroken.download;import java.io.File;import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.IOException;import java.util.HashMap;import java.util.Map;public class DownLoadFile {  private Map parameterMap = new HashMap();  private Map returnMap = new HashMap();  public Map getParameterMap() {    return parameterMap;  }  public void setParameterMap(Map parameterMap) {    this.parameterMap = parameterMap;  }  public Map getReturnMap() {    return returnMap;  }  public void setReturnMap(Map returnMap) {    this.returnMap = returnMap;  }  public DownLoadFile(Map parameterMap, String functionDo) {    setParameterMap(parameterMap);  }  public void start() {    String fileName = (String) parameterMap.get("FILENAME");    int clientFileLen = Integer.parseInt((String) parameterMap.get("LOCALFILELEN"));    int buffLen = Integer.parseInt((String) parameterMap.get("BUFFLEN"));    File file = new File("downloadFiles/" + fileName);    int len = -1;    byte[] buff = new byte[buffLen];    FileInputStream in;    try {      in = new FileInputStream(file);      in.skip(clientFileLen);      if ((len = in.read(buff)) != -1) {        if (len < buff.length) {          byte[] buf = new byte[len];          for (int k = 0; k < buf.length; k++) {            buf[k] = buff[k];          }          returnMap.put("buffContent", buf);        } else {          returnMap.put("buffContent", buff);        }      }      in.close();    } catch (FileNotFoundException e) {      e.printStackTrace();    } catch (IOException e) {      e.printStackTrace();    }  }}