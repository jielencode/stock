/**   * @(#) project: GK* @(#) file: ZcEbPackSumResByAllAvg.java* * Copyright 2010 UFGOV, Inc. All rights reserved.* UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.* */package com.ufgov.zc.server.zc.service.impl.calculator;import com.ufgov.zc.common.zc.model.ZcEbExpertEvalResult;import com.ufgov.zc.common.zc.model.ZcEbPackEvalResult;import java.math.BigDecimal;/*** @ClassName: ZcEbPackSumResByAllAvg* @Description: 全部加权平均 的汇总计算实现类。* @date: 2010-6-25 下午06:52:47* @version: V1.0 * @since: 1.0* @author: fanpl* @modify: */public class ZcEbPackSumResByAllAvg extends ZcEbPackBaseSumRes {  /**   *该计算类的实现方式是：每个指标进行汇总，然后对所有的评审指标的汇总结果求和。   */  public ZcEbPackEvalResult genProviderPackSumResult(CalculatorParam param) {    //评审专家的数量    int expertEvalResCount = param.getExpertEvalPackResList().size();    BigDecimal totalScore = new BigDecimal(0);    totalScore.setScale(2, 4);    for (int i = 0; i < expertEvalResCount; i++) {      ZcEbExpertEvalResult result = (ZcEbExpertEvalResult) param.getExpertEvalPackResList().get(i);      totalScore = totalScore.add(result.getScoreEvalResult());    }    ZcEbPackEvalResult finalEvalResult = new ZcEbPackEvalResult();    BigDecimal expertCount = new BigDecimal(expertEvalResCount);    expertCount.setScale(2, 5);    BigDecimal finalScore = totalScore.divide(expertCount, 4);    finalEvalResult.setEvalScore(finalScore);    finalEvalResult.setIsComplianceResult("Y");    return finalEvalResult;  }}