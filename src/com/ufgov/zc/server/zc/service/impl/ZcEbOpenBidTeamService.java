/** * ZcEbOpenBidTeamService.java * com.ufgov.gk.server.zc.service.impl * Administrator * 2010-5-26 */package com.ufgov.zc.server.zc.service.impl;import java.math.BigDecimal;import java.util.ArrayList;import java.util.List;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.system.model.AsWfDraft;import com.ufgov.zc.common.zc.model.ZcEbOpenBidTeam;import com.ufgov.zc.common.zc.model.ZcEbOpenBidTeamMember;import com.ufgov.zc.common.zc.model.ZcEbOpenBidTeamPack;import com.ufgov.zc.server.system.dao.IWorkflowDao;import com.ufgov.zc.server.system.util.NumUtil;import com.ufgov.zc.server.system.workflow.WFEngineAdapter;import com.ufgov.zc.server.zc.dao.IZcEbOpenBidTeamDao;import com.ufgov.zc.server.zc.service.IZcEbOpenBidTeamService;/** * @author Administrator * */public class ZcEbOpenBidTeamService implements IZcEbOpenBidTeamService {  private IZcEbOpenBidTeamDao zcEbOpenBidTeamDao;  private IWorkflowDao workflowDao;  private WFEngineAdapter wfEngineAdapter;  public List getZcEbOpenBidTeam(ElementConditionDto elementConditionDto, RequestMeta requestMeta) {    return this.zcEbOpenBidTeamDao.getZcEbOpenBidTeam(elementConditionDto, requestMeta);  }  /**   * @return the zcEbOpenBidTeamDao   */  public IZcEbOpenBidTeamDao getZcEbOpenBidTeamDao() {    return zcEbOpenBidTeamDao;  }  /**   * @param zcEbOpenBidTeamDao the zcEbOpenBidTeamDao to set   */  public void setZcEbOpenBidTeamDao(IZcEbOpenBidTeamDao zcEbOpenBidTeamDao) {    this.zcEbOpenBidTeamDao = zcEbOpenBidTeamDao;  }  /**   * @return the workflowDao   */  public IWorkflowDao getWorkflowDao() {    return workflowDao;  }  /**   * @param workflowDao the workflowDao to set   */  public void setWorkflowDao(IWorkflowDao workflowDao) {    this.workflowDao = workflowDao;  }  /**   * @return the wfEngineAdapter   */  public WFEngineAdapter getWfEngineAdapter() {    return wfEngineAdapter;  }  /**   * @param wfEngineAdapter the wfEngineAdapter to set   */  public void setWfEngineAdapter(WFEngineAdapter wfEngineAdapter) {    this.wfEngineAdapter = wfEngineAdapter;  }  public boolean deleteOpenBidTeam(ZcEbOpenBidTeam team, RequestMeta requestMeta) {    // TODO Auto-generated method stub    return this.zcEbOpenBidTeamDao.deleteOpenBidTeam(team);  }  public List getZcEbOpenBidTeamMembers(String teamCode, RequestMeta requestMeta) {    // TODO Auto-generated method stub    return this.zcEbOpenBidTeamDao.getZcEbOpenBidTeamMembers(teamCode);  }  public List getZcEbOpenBidTeamPack(String teamCode, RequestMeta requestMeta) {    // TODO Auto-generated method stub    return this.zcEbOpenBidTeamDao.getZcEbOpenBidTeamPack(teamCode);  }  public ZcEbOpenBidTeam save(ZcEbOpenBidTeam team, RequestMeta requestMeta) {    // TODO Auto-generated method stub    if (team.getTeamCode() == null || team.getTeamCode() == "") {      team = insertOpenBidTeam(team, requestMeta);    } else {      updateOpenBidTeam(team, requestMeta);    }    team.setDbDigest(team.digest());    return team;  }  private void updateOpenBidTeam(ZcEbOpenBidTeam team, RequestMeta requestMeta) {    // TODO Auto-generated method stub    this.zcEbOpenBidTeamDao.updateZcEbOpenBidTeam(team);  }  private ZcEbOpenBidTeam insertOpenBidTeam(ZcEbOpenBidTeam team, RequestMeta requestMeta) {    String userId = requestMeta.getSvUserID();    String compoId = requestMeta.getCompoId();    String teamCode = NumUtil.getInstance().getNo(compoId, "TEAM_CODE", team);    Long draftid = workflowDao.createDraftId();    team.setTeamCode(teamCode);    team.setProcessInstId(draftid);    List detail = team.getTeamMembers();    if (detail != null) {      ZcEbOpenBidTeamMember mb;      for (int i = 0; i < detail.size(); i++) {        mb = (ZcEbOpenBidTeamMember) detail.get(i);        mb.setTeamCode(teamCode);      }    }    List detail2 = team.getPacks();    if (detail2 != null) {      ZcEbOpenBidTeamPack pk;      for (int i = 0; i < detail2.size(); i++) {        pk = (ZcEbOpenBidTeamPack) detail2.get(i);        pk.setTeamCode(teamCode);      }    }    this.zcEbOpenBidTeamDao.insertZcEbOpenBidTeam(team);    AsWfDraft asWfDraft = new AsWfDraft();    asWfDraft.setCompoId(compoId);    asWfDraft.setWfDraftName(teamCode);    asWfDraft.setUserId(userId);    asWfDraft.setMasterTabId(compoId);    asWfDraft.setWfDraftId(BigDecimal.valueOf(draftid.longValue()));    workflowDao.insertAsWfdraft(asWfDraft);    return team;  }  private ZcEbOpenBidTeam getZcEbOpenBidTeamByID(String teamCode) {    // TODO Auto-generated method stub    ZcEbOpenBidTeam team = this.zcEbOpenBidTeamDao.getZcEbOpenBidTeamByID(teamCode);    if (team != null) {      List de = this.zcEbOpenBidTeamDao.getZcEbOpenBidTeamMembers(team.getTeamCode());      if (de == null)        de = new ArrayList();      team.setTeamMembers(de);      de = this.zcEbOpenBidTeamDao.getZcEbOpenBidTeamPack(team.getTeamCode());      if (de == null)        de = new ArrayList();      team.setPacks(de);    }    return team;  }  public List getPackWithoutBidTeam(String projCode, RequestMeta requestMeta) {    // TODO Auto-generated method stub    return this.zcEbOpenBidTeamDao.getPackWithoutBidTeam(projCode);  }}