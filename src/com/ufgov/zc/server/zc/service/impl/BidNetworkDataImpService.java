package com.ufgov.zc.server.zc.service.impl;import java.lang.reflect.InvocationTargetException;import java.util.HashMap;import java.util.Map;import org.apache.commons.beanutils.BeanUtils;import com.ufgov.zc.server.zc.util.GeneralFunc;import com.ufgov.zc.common.commonbiz.model.Position;import com.ufgov.zc.common.console.model.AsEmp;import com.ufgov.zc.common.console.model.AsUserGroup;import com.ufgov.zc.common.system.model.AsFile;import com.ufgov.zc.common.system.model.User;import com.ufgov.zc.common.zc.model.ZcEbAuditSheet;import com.ufgov.zc.common.zc.model.ZcEbEntrust;import com.ufgov.zc.common.zc.model.ZcEbEntrustDetail;import com.ufgov.zc.common.zc.model.ZcEbFormula;import com.ufgov.zc.common.zc.model.ZcEbFormulaItem;import com.ufgov.zc.common.zc.model.ZcEbFormulaParam;import com.ufgov.zc.common.zc.model.ZcEbPack;import com.ufgov.zc.common.zc.model.ZcEbPackReq;import com.ufgov.zc.common.zc.model.ZcEbPackReqDetail;import com.ufgov.zc.common.zc.model.ZcEbPlan;import com.ufgov.zc.common.zc.model.ZcEbProj;import com.ufgov.zc.common.zc.model.ZcEbProjZbFile;import com.ufgov.zc.common.zc.model.ZcEbRequirement;import com.ufgov.zc.common.zc.model.ZcEbRequirementDetail;import com.ufgov.zc.common.zc.model.ZcEbSignup;import com.ufgov.zc.common.zc.model.ZcEbSignupPackDetail;import com.ufgov.zc.common.zc.model.ZcEbSupplier;import com.ufgov.zc.common.zc.model.ZcPProMake;import com.ufgov.zc.common.zc.model.ZcPProMitem;import com.ufgov.zc.common.zc.model.ZcPProMitemBi;import com.ufgov.zc.server.console.dao.IAsEmpDao;import com.ufgov.zc.server.system.dao.IAsFileDao;import com.ufgov.zc.server.system.dao.IUserDao;import com.ufgov.zc.server.zc.dao.IBaseDao;import com.ufgov.zc.server.zc.dao.IZcEbBaseServiceDao;import com.ufgov.zc.server.zc.dao.IZcEbEntrustDao;import com.ufgov.zc.server.zc.dao.IZcEbFormulaDao;import com.ufgov.zc.server.zc.dao.IZcEbPlanDao;import com.ufgov.zc.server.zc.dao.IZcEbProjDao;import com.ufgov.zc.server.zc.dao.IZcEbRequirementDao;import com.ufgov.zc.server.zc.dao.IZcEbSignupDao;import com.ufgov.zc.server.zc.dao.IZcEbSupplierDao;import com.ufgov.zc.server.zc.dao.IZcPProMakeDao;import com.ufgov.zc.server.zc.dao.IZcPProMitemBiDao;import com.ufgov.zc.server.zc.dao.IZcPProMitemDao;import com.ufgov.zc.server.zc.service.IBidNetworkDataImpService;public class BidNetworkDataImpService implements IBidNetworkDataImpService {  private IAsEmpDao asEmpDao;  private IAsFileDao asFileDao;  private IUserDao userDao;  private IZcEbProjDao zcEbProjDao;  private IZcEbBaseServiceDao baseServiceDao;  private IZcEbEntrustDao zcEbEntrustDao;  private IZcEbFormulaDao zcEbFormulaDao;  private IZcEbPlanDao zcEbPlanDao;  private IBaseDao baseDao;  private IZcEbRequirementDao zcEbRequirementDao;  private IZcEbSignupDao zcEbSignupDao;  private IZcEbSupplierDao zcEbSupplierDao;  private IZcPProMakeDao zcPProMakeDao;  private IZcPProMitemBiDao zcPProMitemBiDao;  private IZcPProMitemDao zcPProMitemDao;  public void insert(AsEmp po) {    userDao.deleteAsEmpByUserId(po.getUserId());    asEmpDao.insert(po);  }  public void insert(AsFile po) {    asFileDao.deleteAsFileById(po.getFileId());    asFileDao.insertAsFile(po);  }  public void insert(AsUserGroup po) {    User user = userDao.getUserById(po.getUserId());    if (user == null) {      userDao.insertAsUserGroup(po);    }  }  public void insert(Position po) {    Map map = new HashMap();    map.put("EMP_CODE", po.getEmpCode());    map.put("ND", String.valueOf(po.getNd()));    userDao.deleteAsEmpPosiByEmpCode(map);    userDao.insertAsEmpPosition(po);  }  public void insert(ZcEbProj po) {    baseDao.delete("ZcEbProj.deleteZcEbProjByProjCode", po.getProjCode());    zcEbProjDao.insertZcEbProj(po);  }  public void insert(User po) {    String tp = GeneralFunc._encodePwd(po.getPassword());    po.setPassword(tp);    User user = userDao.getUserById(po.getUserId());    if (user == null) {      userDao.insertUser(po);    }  }  public void insert(ZcEbAuditSheet po) {    if (po.getExecuteDate() != null) {      po.setExecuteDate(po.getExecuteDate());    }    Map map = new HashMap();    map.put("sheetId", po.getSheetId());    baseDao.delete("ZcEbAuditSheet.delete", map);    baseDao.insert("ZcEbAuditSheet.insertZcEbAuditSheet", po);  }  public void insert(ZcEbEntrust po) {    zcEbEntrustDao.deleteByPrimaryKey(po.getSn());    zcEbEntrustDao.insertZcEbEntrust(po);  }  public void insert(ZcEbEntrustDetail po) {    baseDao.delete("ZcEbEntrust.deleteZcEbEntrustDetailById", po.getSnd());    baseDao.insert("ZcEbEntrust.insertZcEbEntrustDetail", po);  }  public void insert(ZcEbFormula po) {    zcEbFormulaDao.deleteZcEbFormulaById(po.getFormulaCode());    zcEbFormulaDao.insertZcEbFormula(po);  }  public void insert(ZcEbFormulaItem po) {    zcEbFormulaDao.deleteZcEbFormulaItemById(po.getItemCode());    zcEbFormulaDao.insertZcEbFormulaItem(po);  }  public void insert(ZcEbFormulaParam po) {    Map para = new HashMap();    para.put("formulaCode", po.getFormulaCode());    para.put("paramCode", po.getParamCode());    baseDao.delete("ZcEbFormula.deleteZcEbFormulaParamByCode", para);    baseDao.insert("ZcEbFormula.insertZcEbFormulaParamHasKey", po);  }  public void insert(ZcEbPack po) {    baseDao.delete("ZcEbProj.deleteZcEbPackByPackCode", po.getPackCode());    baseDao.insert("ZcEbProj.insertZcEbPack", po);  }  public void insert(ZcEbPackReq po) {    baseDao.delete("ZcEbProj.deleteZcEbPackReqByPackReqCode", String.valueOf(po.getPackReqCode()));    baseDao.insert("ZcEbProj.insertZcEbPackReq", po);  }  public void insert(ZcEbPlan po) {    baseDao.delete("ZcEbPlan.deleteZcEbPlanByProjCode", po.getProjCode());//此处改为不按主键删除，前提是一个项目只会有一个计划    baseDao.insert("ZcEbPlan.insertZcEbPlan", po);  }  public void insert(ZcEbProjZbFile po) {    Map para = new HashMap();    para.put("FILE_ID", po.getFileId());    para.put("PROJ_CODE", po.getProjCode());    baseDao.delete("ZcEbProjZbFile.deleteZcebZbFileByIdProjCodeAndFileId", para);    baseDao.insert("ZcEbProjZbFile.insertZcEbProjFile", po);  }  public void insert(ZcEbRequirement po) {    baseDao.delete("ZcEbRequirement.deleteZcEbRequirementByReqCode", po.getReqCode());    zcEbRequirementDao.insertZcEbRequirement(po);  }  public void insert(ZcEbRequirementDetail po) {//    baseDao.delete("ZcEbRequirement.deleteZcEbRequirementDetailByKey", String.valueOf(po.getDetailCode()));    baseDao.insert("ZcEbRequirement.insertZcEbRequirementDetailHasKey", po);  }  public void insert(ZcEbSignup po) {    baseDao.delete("ZcEbSignup.deleteZcEbSignup", po.getSignupId());    baseDao.insert("ZcEbSignup.insertZcEbSignup", po);  }  public void insert(ZcEbSignupPackDetail po) {    baseDao.delete("ZcEbSignup.deleteZcEbSignupPackDetailBySignupPackId", po.getSignupPackId());    baseDao.insert("ZcEbSignup.insertZcEbSignupPackDetail", po);  }  public void insert(ZcEbSupplier po) {    zcEbSupplierDao.deleteSupplier(po, null);    zcEbSupplierDao.insertSupplier(po, null);  }  public void insert(ZcPProMake po) {    zcPProMakeDao.deleteByPrimaryKey(po.getZcMakeCode());    zcPProMakeDao.insert(po);  }  public void insert(ZcPProMitemBi po) {    //zcPProMitemBiDao.deleteByPrimaryKey(po.getZcBiNo(), po.getZcMakeCode());    zcPProMitemBiDao.deleteByPrimaryKey(po.getZcProBiSeq());    zcPProMitemBiDao.insert(po);  }  public void insert(ZcPProMitem po) {    zcPProMitemDao.deleteByPrimaryKey(po.getZcMakeCode(), po.getZcPitemCode());    zcPProMitemDao.insert(po);  }  public IAsEmpDao getAsEmpDao() {    return asEmpDao;  }  public void setAsEmpDao(IAsEmpDao asEmpDao) {    this.asEmpDao = asEmpDao;  }  public IAsFileDao getAsFileDao() {    return asFileDao;  }  public void setAsFileDao(IAsFileDao asFileDao) {    this.asFileDao = asFileDao;  }  public IUserDao getUserDao() {    return userDao;  }  public void setUserDao(IUserDao userDao) {    this.userDao = userDao;  }  public IZcEbProjDao getZcEbProjDao() {    return zcEbProjDao;  }  public void setZcEbProjDao(IZcEbProjDao zcEbProjDao) {    this.zcEbProjDao = zcEbProjDao;  }  public IZcEbBaseServiceDao getBaseServiceDao() {    return baseServiceDao;  }  public void setBaseServiceDao(IZcEbBaseServiceDao baseServiceDao) {    this.baseServiceDao = baseServiceDao;  }  public IZcEbEntrustDao getZcEbEntrustDao() {    return zcEbEntrustDao;  }  public void setZcEbEntrustDao(IZcEbEntrustDao zcEbEntrustDao) {    this.zcEbEntrustDao = zcEbEntrustDao;  }  public IZcEbFormulaDao getZcEbFormulaDao() {    return zcEbFormulaDao;  }  public void setZcEbFormulaDao(IZcEbFormulaDao zcEbFormulaDao) {    this.zcEbFormulaDao = zcEbFormulaDao;  }  public IZcEbPlanDao getZcEbPlanDao() {    return zcEbPlanDao;  }  public void setZcEbPlanDao(IZcEbPlanDao zcEbPlanDao) {    this.zcEbPlanDao = zcEbPlanDao;  }  public IBaseDao getBaseDao() {    return baseDao;  }  public void setBaseDao(IBaseDao baseDao) {    this.baseDao = baseDao;  }  public IZcEbRequirementDao getZcEbRequirementDao() {    return zcEbRequirementDao;  }  public void setZcEbRequirementDao(IZcEbRequirementDao zcEbRequirementDao) {    this.zcEbRequirementDao = zcEbRequirementDao;  }  public IZcEbSignupDao getZcEbSignupDao() {    return zcEbSignupDao;  }  public void setZcEbSignupDao(IZcEbSignupDao zcEbSignupDao) {    this.zcEbSignupDao = zcEbSignupDao;  }  public IZcEbSupplierDao getZcEbSupplierDao() {    return zcEbSupplierDao;  }  public void setZcEbSupplierDao(IZcEbSupplierDao zcEbSupplierDao) {    this.zcEbSupplierDao = zcEbSupplierDao;  }  public IZcPProMakeDao getZcPProMakeDao() {    return zcPProMakeDao;  }  public void setZcPProMakeDao(IZcPProMakeDao zcPProMakeDao) {    this.zcPProMakeDao = zcPProMakeDao;  }  public IZcPProMitemBiDao getZcPProMitemBiDao() {    return zcPProMitemBiDao;  }  public void setZcPProMitemBiDao(IZcPProMitemBiDao zcPProMitemBiDao) {    this.zcPProMitemBiDao = zcPProMitemBiDao;  }  public IZcPProMitemDao getZcPProMitemDao() {    return zcPProMitemDao;  }  public void setZcPProMitemDao(IZcPProMitemDao zcPProMitemDao) {    this.zcPProMitemDao = zcPProMitemDao;  }  public void insert(ZcEbPackReqDetail po) {    try {      baseDao.delete("ZcEbProj.deleteZcEbReqDetailByKey", po.getDetailCode().toString());      ZcEbRequirementDetail repdetail = new ZcEbRequirementDetail();      BeanUtils.copyProperties(repdetail, po);      baseDao.insert("ZcEbProj.insertZcEbReqDetail", repdetail);    } catch (IllegalAccessException e) {      // TODO Auto-generated catch block      e.printStackTrace();    } catch (InvocationTargetException e) {      // TODO Auto-generated catch block      e.printStackTrace();    }  }}