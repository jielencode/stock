/**   * @(#) project: GK* @(#) file: ZcEbPackBaseSumRes.java* * Copyright 2010 UFGOV, Inc. All rights reserved.* UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.* */package com.ufgov.zc.server.zc.service.impl.calculator;import java.math.BigDecimal;/*** @ClassName: ZcEbPackBaseSumRes* @Description: 根据专家评分标段结果计算标段汇总结果的基础类。* @date: 2010-6-25 下午07:41:42* @version: V1.0 * @since: 1.0* @author: tianly* @modify: */public abstract class ZcEbPackBaseSumRes implements IZcEbPackExpertEvalResSumCalculator {  /**   *   * @Description: 计算符合性指标是否通过  * @return boolean 返回类型  * @since 1.0   */  protected boolean complianceIsPass(CalculatorParam param, int compliancePassCount) {    BigDecimal b = new BigDecimal(compliancePassCount);    b.setScale(2, 5);    BigDecimal c = new BigDecimal(param.getExpertEvalPackResList().size());    b.setScale(2, 5);    BigDecimal passRate = (b.divide(c, 2)).multiply(new BigDecimal(100));    passRate.setScale(2, 5);    if (passRate.compareTo(param.getCompliancePassRate()) < 0) {      return false;    }    return true;  }  /**   *   * @Description: 比较两个数得到大的一个。  * @return BigDecimal两数中较大的一个。  * @since 1.0   */  protected BigDecimal max(BigDecimal a, BigDecimal b) {    a.setScale(2, 5);    b.setScale(2, 5);    if (a.compareTo(b) > 0) {      return a;    }    return b;  }  /**   *   * @Description: 比较两个数得到小的一个。  * @return BigDecimal两数中较小的一个。  * @since 1.0   */  protected BigDecimal min(BigDecimal a, BigDecimal b) {    a.setScale(2, 5);    b.setScale(2, 5);    if (a.compareTo(b) < 0) {      return a;    }    return b;  }}