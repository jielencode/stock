package com.ufgov.zc.server.zc.service.impl;import java.math.BigDecimal;import java.util.List;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.system.model.AsWfDraft;import com.ufgov.zc.common.zc.model.ZcEbComplain;import com.ufgov.zc.server.system.dao.IWorkflowDao;import com.ufgov.zc.server.system.workflow.WFEngineAdapter;import com.ufgov.zc.server.zc.dao.IZCQuestionDao;import com.ufgov.zc.server.zc.dao.IZcEbComplainDao;import com.ufgov.zc.server.zc.service.IZcEbComplainService;public class ZcEbComplainService implements IZcEbComplainService {  private IZCQuestionDao izcQuestionDao;  private IWorkflowDao workflowDao;  private WFEngineAdapter wfEngineAdapter;  private IZcEbComplainDao complainDao;  public void addZcEbComplain(ZcEbComplain zcEbComplain) {  }  public ZcEbComplain auditPassFN(ZcEbComplain zcEbComplain,  RequestMeta requestMeta) {    return null;  }  public ZcEbComplain callbackFN(ZcEbComplain zcEbComplain,  RequestMeta requestMeta) {    wfEngineAdapter.callback(zcEbComplain.getComment(), zcEbComplain, requestMeta);    return zcEbComplain;  }  public void deleteZcEbComplain(ZcEbComplain zcEbComplain) {    complainDao.deleteZcEbComplain(zcEbComplain);  }  public List getZCQuestionPack(ZcEbComplain zcEbComplain) {    return null;  }  public List getZcEbComplainList(ElementConditionDto elementConditionDto) {    return complainDao.getZcEbComplainList(elementConditionDto);  }  public ZcEbComplain newCommitFN(ZcEbComplain zcEbComplain,  RequestMeta requestMeta) {    return null;  }  public ZcEbComplain saveZcEbComplain(ZcEbComplain zcEbComplain,  RequestMeta requestMeta) {    String userId = requestMeta.getSvUserID();    String compoId = requestMeta.getCompoId();    if (zcEbComplain.getSn() == null) {      Long draftid = workflowDao.createDraftId();      zcEbComplain.setProcessInstId(draftid);      AsWfDraft asWfDraft = new AsWfDraft();      asWfDraft.setCompoId(compoId);      asWfDraft.setWfDraftName(zcEbComplain.getId());      asWfDraft.setUserId(userId);      asWfDraft.setMasterTabId(compoId);      asWfDraft.setWfDraftId(BigDecimal.valueOf(draftid.longValue()));      workflowDao.insertAsWfdraft(asWfDraft);      complainDao.insertZcEbComplain(zcEbComplain);    } else {      complainDao.updateZcEbComplain(zcEbComplain);    }    return zcEbComplain;  }  public ZcEbComplain submitFN(ZcEbComplain zcEbComplain,  RequestMeta requestMeta) {    wfEngineAdapter.newCommit(zcEbComplain.getComment(), zcEbComplain, requestMeta);    complainDao.updateZcEbComplain(zcEbComplain);    return zcEbComplain;  }  public ZcEbComplain suggestPassFN(ZcEbComplain zcEbComplain,  RequestMeta requestMeta) {    return zcEbComplain;  }  public ZcEbComplain unAuditFN(ZcEbComplain zcEbComplain,  RequestMeta requestMeta) {    wfEngineAdapter.unAudit(zcEbComplain.getComment(), zcEbComplain, requestMeta);    return zcEbComplain;  }  public ZcEbComplain unTreadFN(ZcEbComplain zcEbComplain,  RequestMeta requestMeta) {    wfEngineAdapter.untread(zcEbComplain.getComment(), zcEbComplain, requestMeta);    return zcEbComplain;  }  public IZCQuestionDao getIzcQuestionDao() {    return izcQuestionDao;  }  public void setIzcQuestionDao(IZCQuestionDao izcQuestionDao) {    this.izcQuestionDao = izcQuestionDao;  }  public IWorkflowDao getWorkflowDao() {    return workflowDao;  }  public void setWorkflowDao(IWorkflowDao workflowDao) {    this.workflowDao = workflowDao;  }  public WFEngineAdapter getWfEngineAdapter() {    return wfEngineAdapter;  }  public void setWfEngineAdapter(WFEngineAdapter wfEngineAdapter) {    this.wfEngineAdapter = wfEngineAdapter;  }  public IZcEbComplainDao getComplainDao() {    return complainDao;  }  public void setComplainDao(IZcEbComplainDao complainDao) {    this.complainDao = complainDao;  }}