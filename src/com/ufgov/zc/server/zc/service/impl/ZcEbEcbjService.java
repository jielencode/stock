/**   * @(#) project: ZFCG* @(#) file: ZcEbEcbjService.java* * Copyright 2011 UFGOV, Inc. All rights reserved.* UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.* */package com.ufgov.zc.server.zc.service.impl;import java.math.BigDecimal;import java.util.Date;import java.util.HashMap;import java.util.List;import java.util.Map;import com.ufgov.zc.common.system.Guid;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.constants.NumLimConstants;import com.ufgov.zc.common.system.constants.ZcSettingConstants;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.zc.model.ZcEbEcbj;import com.ufgov.zc.common.zc.model.ZcEbEcbjItem;import com.ufgov.zc.common.zc.model.ZcEbEcbjPlan;import com.ufgov.zc.common.zc.model.ZcEbOpenBid;import com.ufgov.zc.common.zc.model.ZcEbProj;import com.ufgov.zc.common.zc.model.ZcEbSignupPackDetail;import com.ufgov.zc.server.system.util.NumLimUtil;import com.ufgov.zc.server.zc.dao.IBaseDao;import com.ufgov.zc.server.zc.service.IZcEbEcbjService;/*** @ClassName: ZcEbEcbjService* @Description: TODO(这里用一句话描述这个类的作用)* @date: 2011-2-14 下午04:37:04* @version: V1.0 * @since: 1.0* @author: fanpl* @modify: */public class ZcEbEcbjService implements IZcEbEcbjService {  private IBaseDao baseDao;  public IBaseDao getBaseDao() {    return baseDao;  }  public void setBaseDao(IBaseDao baseDao) {    this.baseDao = baseDao;  }  public void delete(ZcEbEcbjItem item) {  }  public ZcEbEcbjItem update(ZcEbEcbjItem item) {    baseDao.update("ZcEbEcbjItem.updateZcEbEcbjItem", item);    return item;  }  public List getZcEbEcbjItemList(ElementConditionDto elementConditionDto, RequestMeta requestMeta) {    elementConditionDto.setNumLimitStr(NumLimUtil.getInstance().getNumLimCondByCoType(elementConditionDto.getWfcompoId(), NumLimConstants.FWATCH));    return baseDao.query("ZcEbEcbjItem.getZcEbEcbjItemList", elementConditionDto);  }  public List getZcEbEcbjList(ElementConditionDto elementConditionDto, RequestMeta requestMeta) {    elementConditionDto.setNumLimitStr(NumLimUtil.getInstance().getNumLimCondByCoType(elementConditionDto.getWfcompoId(), NumLimConstants.FWATCH));    List ecbjList = baseDao.query("ZcEbEcbjItem.getZcEbEcBjList", elementConditionDto);    for (int i = 0; i < ecbjList.size(); i++) {      ElementConditionDto dto = new ElementConditionDto();      ZcEbEcbj ecbj = (ZcEbEcbj) ecbjList.get(i);      dto.setProjCode(ecbj.getProjCode());      dto.setPackCode(ecbj.getPackCode());      dto.setZcText0(ecbj.getSignupPackId());      dto.setStatus(ZcSettingConstants.FIELD_TRANS_ZC_BJ_OPEN);      ecbj.setBijiaNo(getZcEbEcbjItemCount(dto));    }    return ecbjList;  }  public void save(ZcEbEcbj bj) {    //删插操作    baseDao.delete("ZcEbEcbjItem.deleteZcEbEcbjItemList", bj.getSignupPackId());    for (int i = 0; i < bj.getBjItemList().size(); i++) {      ZcEbEcbjItem biItem = (ZcEbEcbjItem) bj.getBjItemList().get(i);      biItem.setProjCode(bj.getProjCode());      biItem.setProjName(bj.getProjName());      biItem.setPackCode(bj.getPackCode());      biItem.setPackName(bj.getPackName());      biItem.setProviderCode(bj.getProviderCode());      biItem.setProviderName(bj.getProviderName());      biItem.setBjNo(i + 1 + "");      baseDao.insert("ZcEbEcbjItem.insertZcEbEcbjItem", biItem);    }  }  public ZcEbEcbjItem save(ZcEbEcbjItem bj) {    //删插操作    ElementConditionDto dto = new ElementConditionDto();    dto.setExtField1(bj.getSignupPackId());    dto.setExtField2(ZcSettingConstants.FIELD_TRANS_ZC_BJ_NO_OPEN);    baseDao.delete("ZcEbEcbjItem.deleteZcEbEcbjItem", dto);    baseDao.insert("ZcEbEcbjItem.insertZcEbEcbjItem", bj);    //如果报价单，开标成功。更新该供应商的投标报价,更新Zc_Eb_Signup_Pack表的ECBJ_SUM字段    if (ZcSettingConstants.FIELD_TRANS_ZC_BJ_OPEN.equals(bj.getStatus())) {      baseDao.update("ZcEbEcbjItem.updateZcEbSinupPack", bj);    }    return bj;  }  /**   * 添加新报价:   * 1、先通过供应商providercode/projcode/packcode得到signuppackid   * 2、根据signuppackid插入新的报价信息   */  public String addNewPrice(ZcEbOpenBid bid) {    ElementConditionDto dto = new ElementConditionDto();    dto.setProjCode(bid.getProjCode());    dto.setExtField1(bid.getProviderCode());    dto.setExtField2(bid.getPackCode());    ZcEbSignupPackDetail detail = (ZcEbSignupPackDetail) this.baseDao.read("ZcEbSignup.getZcEbSignupByPPPcode", dto);    if (detail == null) {      return "没有找到供应商的分包报名信息，请确认是否报名...";    }    dto = new ElementConditionDto();    dto.setExtField1(detail.getSignupPackId());    dto.setExtField2(ZcSettingConstants.FIELD_TRANS_ZC_BJ_NO_OPEN);    baseDao.delete("ZcEbEcbjItem.deleteZcEbEcbjItem", dto);    ElementConditionDto dto1 = new ElementConditionDto();    dto1.setZcText0(detail.getSignupPackId());    List list = baseDao.query("ZcEbEcbjItem.getZcEbEcbjItemList", dto1);    ZcEbEcbjItem bj = new ZcEbEcbjItem();    bj.setSignupPackId(detail.getSignupPackId());    bj.setProjCode(bid.getProjCode());    bj.setProjName(bid.getProjName());    bj.setPackCode(bid.getPackCode());    bj.setPackName(bid.getPackName());    bj.setProviderCode(bid.getProviderCode());    bj.setProviderName(bid.getProviderName());    bj.setFileId(bid.getTbylbFileId());    bj.setStatus(bid.getOpenBidStatus());    bj.setFileName(bid.getTbylbFileName());    if (bid.getBidSum() != null && !"".equals(bid.getBidSum())) {      bj.setBjSum(new BigDecimal(bid.getBidSum()));    }    if (bid.getOpenBidDate() != null) {      bj.setOpenBidTime(bid.getOpenBidDate());    }    bj.setPromiseWorkDate(bid.getPromiseWorkDate());    bj.setBjTime(new Date());    bj.setBjNo((list.size() + 1) + "");    bj.setUpLoader(bid.getProviderCode());    if (bj.getAgency() == null || "".equals(bj.getAgency())) { //通过离线的工具上传二次报价文件时，要保存项目的信息。因为A6平台的数值权限对Agency和orgCode进行了引用      Map map = new HashMap();      map.put("PROJ_CODE", bid.getProjCode());      ZcEbProj proj = (ZcEbProj) this.baseDao.read("ZcEbProj.readByProjCode", map);      if (proj != null) {        bj.setNd(proj.getNd());        bj.setAgency(proj.getAgency());        bj.setOrgCode(proj.getOrgCode());//招标文件制作的科室和开标唱价的科室不一样的情况要，要另处理。        bj.setExecuteDate(new Date());      }    } else {//代理机构不为空的话，说明不是通过离线工具上传，是保存公开唱价的文件到ZC_EB_ECBJ_ITEM表      bj.setNd(bid.getNd());      bj.setAgency(bid.getAgency());      bj.setOrgCode(bid.getOrgCode());      bj.setExecutor(bid.getExecutor());      bj.setExecuteDate(bid.getExecuteDate());    }    this.baseDao.insert("ZcEbEcbjItem.insertZcEbEcbjItem", bj);    return "OK";  }  public List getZcEbEcbjPlanList(ElementConditionDto dto) {    return this.baseDao.query("ZcEbEcbjItem.getZcEbEcbjPlanList", dto);  }  public ZcEbEcbjPlan saveZcEbEcbjPlan(ZcEbEcbjPlan plan) {    plan.setPlanCode(Guid.genID());    ElementConditionDto dto = new ElementConditionDto();    dto.setProjCode(plan.getProjCode());    dto.setPackCode(plan.getPackCode());    plan.setBjCount(this.getZcEbEcbjPlanList(dto).size() + 1 + "");    this.baseDao.insert("ZcEbEcbjItem.insertZcEbEcbjPlan", plan);    return plan;  }  public ZcEbEcbjPlan updateZcEbEcbjPlan(ZcEbEcbjPlan plan) {    this.baseDao.insert("ZcEbEcbjItem.updateZcEbEcbjPlan", plan);    return plan;  }  public void deleteZcEbEcbjPlan(ZcEbEcbjPlan plan) {    this.baseDao.delete("ZcEbEcbjItem.deleteZcEbEcbjPlan", plan);  }  public Integer getZcEbEcbjItemCount(ElementConditionDto elementConditionDto) {    return (Integer) this.baseDao.read("ZcEbEcbjItem.getZcEbEcbjItemCount", elementConditionDto);  }}