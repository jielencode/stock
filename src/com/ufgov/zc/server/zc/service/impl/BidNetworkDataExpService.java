package com.ufgov.zc.server.zc.service.impl;import java.util.ArrayList;import java.util.HashMap;import java.util.Iterator;import java.util.List;import java.util.Map;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.system.model.User;import com.ufgov.zc.common.zc.model.ZcEbEvalResultExample;import com.ufgov.zc.common.zc.model.ZcEbPack;import com.ufgov.zc.common.zc.model.ZcEbPackExpertExample;import com.ufgov.zc.common.zc.model.ZcEbProj;import com.ufgov.zc.common.zc.model.ZcEbProjectLivingChange;import com.ufgov.zc.server.console.dao.IAsEmpDao;import com.ufgov.zc.server.system.dao.IAsFileDao;import com.ufgov.zc.server.system.dao.IUserDao;import com.ufgov.zc.server.zc.dao.IBaseDao;import com.ufgov.zc.server.zc.dao.IZcEbProjDao;import com.ufgov.zc.server.zc.dao.IZcEbSignupDao;import com.ufgov.zc.server.zc.service.IBidNetworkDataExpService;import com.ufgov.zc.server.zc.util.GeneralFunc;public class BidNetworkDataExpService implements IBidNetworkDataExpService {  private IAsEmpDao asEmpDao;  private IAsFileDao asFileDao;  private IUserDao userDao;  private IBaseDao baseDao;  private IZcEbProjDao zcEbProjDao;  private IZcEbSignupDao zcEbSignupDao;  public List getAsEmp(List userIds) {    ArrayList list = new ArrayList();    ElementConditionDto dto = new ElementConditionDto();    for (Iterator iterator = userIds.iterator(); iterator.hasNext();) {      String ui = (String) iterator.next();      dto.setExtField1(ui);      list.add(asEmpDao.getProviderInfoByUserId(dto));    }    return list;  }  public List getAsEmpPosition(List empCodes) {    ArrayList list = new ArrayList();    for (Iterator iterator = empCodes.iterator(); iterator.hasNext();) {      String ec = (String) iterator.next();      Map map = new HashMap();      map.put("EMP_CODE", ec);      list.addAll(userDao.getAsEmpPosiByEmpCode(map));    }    return list;  }  public List getAsFile(List fileId) {    ArrayList list = new ArrayList();    for (Iterator iterator = fileId.iterator(); iterator.hasNext();) {      String fi = (String) iterator.next();      list.add(asFileDao.getAsFileById(fi));    }    return list;  }  public List getAsNoRule(String compoId) {    return baseDao.query("AsNoRule.getAsNoRuleByCompoId", compoId);  }  public List getAsNumTool(String numToolId) {    return baseDao.query("AsNumTool.getAsNumTool", numToolId);  }  public List getAsUser(List userIds) {    ArrayList list = new ArrayList();    for (Iterator iterator = userIds.iterator(); iterator.hasNext();) {      String ui = (String) iterator.next();      User user = userDao.getUserById(ui);      String tp = GeneralFunc.recodePwd(user.getPassword());      user.setPassword(tp);      list.add(user);    }    return list;  }  public List getAsUserGroup(List userIds) {    ArrayList list = new ArrayList();    for (Iterator iterator = userIds.iterator(); iterator.hasNext();) {      String ui = (String) iterator.next();      list.addAll(userDao.getAsUserGroupByUserId(ui));    }    return list;  }  public List getZcEbEcbjItem(String projectCode) {    ElementConditionDto con = new ElementConditionDto();    con.setProjCode(projectCode);    return baseDao.query("ZcEbEcbjItem.getZcEbEcbjItemList", con);  }  public List getZcEbEcbjPlan(String projectCode) {    ElementConditionDto con = new ElementConditionDto();    con.setProjCode(projectCode);    return baseDao.query("ZcEbEcbjItem.getZcEbEcbjPlanList", con);  }  public List getZcEbEvalParam(String projectCode) {    Map para = new HashMap();    para.put("projCode", projectCode);    return baseDao.query("ZcEbEval.getZcEbEvalResultParamList", para);  }  public List getZcEbEvalReport(String projectCode) {    ElementConditionDto con = new ElementConditionDto();    con.setProjCode(projectCode);    return baseDao.query("ZcEbEval.getZcEbEvalReportList", con);  }  public List getZcEbEvalResult(String projectCode) {    ZcEbEvalResultExample e = new ZcEbEvalResultExample();    e.createCriteria().andProjCodeEqualTo(projectCode);    return baseDao.query("ZC_EB_EVAL_RESULT.abatorgenerated_selectByExample", e);  }  public List getExpertIdCard(String projectCode) {    return baseDao.query("ZcEbEval.getExpertIdCard", projectCode);  }  public List getZcEbExpertOpinion(String projectCode) {    Map para = new HashMap();    para.put("projCode", projectCode);    return baseDao.query("ZcEbEval.getEbExpertOpinionList", para);  }  public List getZcEbOpenbidTeam(String projectCode) {    ElementConditionDto con = new ElementConditionDto();    con.setProjCode(projectCode);    return baseDao.query("ZcEbOpenBidTeam.getZcEbOpenBidTeam", con);  }  public List getZcEbOpenbidTeamMember(List teamCodes) {    List list = new ArrayList();    for (Iterator iterator = teamCodes.iterator(); iterator.hasNext();) {      String tcode = (String) iterator.next();      List pos = (List) baseDao.query("ZcEbOpenBidTeam.getZcEbOpenBidTeamMember", tcode);      list.addAll(pos);    }    return list;  }  public List getZcEbOpenbidteamPack(String projectCode) {    List packCodes = new ArrayList();    List packList = zcEbProjDao.getZcEbPackListByProjCode(projectCode);    for (Iterator iterator = packList.iterator(); iterator.hasNext();) {      ZcEbPack o = (ZcEbPack) iterator.next();      packCodes.add(o.getPackCode());    }    List list = new ArrayList();    for (Iterator iterator = packCodes.iterator(); iterator.hasNext();) {      String pcode = (String) iterator.next();      List pos = (List) baseDao.query("ZcEbOpenBidTeam.getZcEbOpenbidteamPackList", pcode);      list.addAll(pos);    }    return list;  }  public List getZcEbPackEvalResult(String projectCode) {    Map para = new HashMap();    para.put("PROJ_CODE", projectCode);    return baseDao.query("ZcEbEval.getZcEbEvalPackSumResult", para);  }  public List getZcEbPackExpert(String projectCode) {    ZcEbPackExpertExample exp = new ZcEbPackExpertExample();    exp.createCriteria().andProjCodeEqualTo(projectCode);    return baseDao.query("ZC_EB_PACK_EXPERT.abatorgenerated_selectByExample", exp);  }  public List getZcEbProjChg(String projectCode) {    ElementConditionDto con = new ElementConditionDto();    con.setProjCode(projectCode);    return baseDao.query("ZcEbProjChange.getZcEbProj", con);  }  public List getZcEbProjectLivingChange(String projectCode) {    ZcEbProjectLivingChange c = new ZcEbProjectLivingChange();    c.setProjectCode(projectCode);    return baseDao.query("ZcEbProjectLivingChange.getZcEbProjectLivingChange", c);  }  public IAsEmpDao getAsEmpDao() {    return asEmpDao;  }  public void setAsEmpDao(IAsEmpDao asEmpDao) {    this.asEmpDao = asEmpDao;  }  public IAsFileDao getAsFileDao() {    return asFileDao;  }  public void setAsFileDao(IAsFileDao asFileDao) {    this.asFileDao = asFileDao;  }  public IUserDao getUserDao() {    return userDao;  }  public void setUserDao(IUserDao userDao) {    this.userDao = userDao;  }  public IBaseDao getBaseDao() {    return baseDao;  }  public void setBaseDao(IBaseDao baseDao) {    this.baseDao = baseDao;  }  public IZcEbProjDao getZcEbProjDao() {    return zcEbProjDao;  }  public void setZcEbProjDao(IZcEbProjDao zcEbProjDao) {    this.zcEbProjDao = zcEbProjDao;  }  public List getZcEbPack(String projCode) {    // TODO Auto-generated method stub    return zcEbProjDao.getZcEbPackListByProjCode(projCode);  }  public List getZcEbProj(String projectCode) {    Map map = new HashMap();    map.put("PROJ_CODE", projectCode);    ZcEbProj t = zcEbProjDao.getZcEbProjByProjCode(map);    List list = new ArrayList();    list.add(t);    return list;  }  public List getZcEbSignup(String projCode, RequestMeta meta) {    ElementConditionDto dto = new ElementConditionDto();    dto.setProjCode(projCode);    return zcEbSignupDao.getZcEbSignup(dto, meta);  }  public List getZcEbSignupPack(List signupId) {    ArrayList list = new ArrayList();    for (Iterator iterator = signupId.iterator(); iterator.hasNext();) {      String pc = (String) iterator.next();      ElementConditionDto dto=new ElementConditionDto();      dto.setZcText1(pc);      list.addAll(zcEbSignupDao.getZcEbSignupPackDetail(dto));    }    return list;  }  public IZcEbSignupDao getZcEbSignupDao() {    return zcEbSignupDao;  }  public void setZcEbSignupDao(IZcEbSignupDao zcEbSignupDao) {    this.zcEbSignupDao = zcEbSignupDao;  }}