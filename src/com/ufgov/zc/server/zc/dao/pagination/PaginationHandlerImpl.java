/* * 创建日期 2006-4-19 * * TODO 要更改此生成的文件的模板，请转至 * 窗口 － 首选项 － Java － 代码样式 － 代码模板 */package com.ufgov.zc.server.zc.dao.pagination;public class PaginationHandlerImpl implements PaginationHandler {  /**   * 总记录数目   */  protected long totalCount = 0;  /**   * 每页显示记录数目,默认值为10   */  protected long perCount = 10;  /**   * 当前页号   */  protected long curPageNumber = 1;  /**   * 获取数据的起始位置   */  protected long startCursor = 0;  /**   * 获取数据的结束位置   */  protected long endCursor = 0;  /**   * 设置页面url   */  protected String urlAddress = null;  /**   * 参数名称,默认值为page   */  protected String paramName = "page";  /**   * @param paramName   *            要设置的 paramName。   */  public void setParamName(String paramName) {    this.paramName = paramName;  }  public String getParamName() {    return this.paramName;  }  /**   * @return 返回 curPageNumber。   */  public long getCurPageNumber() {    return curPageNumber;  }  /**   * @return 返回 endCursor。   */  public long getEndCursor() {    return endCursor;  }  /**   * @return 返回 perCount。   */  public long getPerCount() {    return perCount;  }  /**   * @return 返回 startCursor。   */  public long getStartCursor() {    return startCursor;  }  /**   * @return 返回 totalCount。   */  public long getTotalCount() {    return totalCount;  }  /**   * @return 返回 urlAddress。   */  public String getUrlAddress() {    int length = this.urlAddress.length() - 1;    char lastChar = this.urlAddress.charAt(length);    if (lastChar != '&' && lastChar != '?') {      this.urlAddress = this.urlAddress + "&";    }    return urlAddress;  }  /**   * @return 返回总页面数目。   */  public long getTotalPage() {    if (perCount <= 0) {      perCount = 10;    }    return (totalCount + perCount - 1) / perCount;  }  /**   * @param curPageNumber   *            要设置的 curPageNumber。   */  public void setCurPageNumber(long curPageNumber) {    if (curPageNumber <= 0) {      this.curPageNumber = 1;    } else if (curPageNumber >= getTotalPage()) {      this.curPageNumber = getTotalPage();    } else {      this.curPageNumber = curPageNumber;    }  }  /**   * @param endCursor   *            要设置的 endCursor。   */  public void setEndCursor(long endCursor) {    this.endCursor = endCursor;  }  /**   * @param perCount   *            要设置的 perCount。   */  public void setPerCount(long perCount) {    if (perCount <= 0) {      this.perCount = 10;    } else {      this.perCount = perCount;    }  }  /**   * @param startCursor   *            要设置的 startCursor。   */  public void setStartCursor(long startCursor) {    this.startCursor = startCursor;  }  /**   * @param totalCount   *            要设置的 totalCount。   */  public void setTotalCount(long totalCount) {    if (totalCount < 0) {      this.totalCount = 0;    } else {      this.totalCount = totalCount;    }  }  /**   * @param urlAddress   *            要设置的 urlAddress。   */  public void setUrlAddress(String urlAddress) {    if (urlAddress.indexOf("?") != (-1)) {      this.urlAddress = urlAddress + "&";    } else {      this.urlAddress = urlAddress + "?";    }  }  /**   * 是否有下一页   *    * @return true - 如果有下一页。否则为false。   */  public boolean hasNextPage() {    boolean flag = false;    if (curPageNumber < getTotalPage()) {      flag = true;    }    return flag;  }  /**   * 是否有上一页   *    * @return true - 如果有上一页。否则为false。   */  public boolean hasPreviousPage() {    boolean flag = false;    if (curPageNumber > 1) {      flag = true;    }    return flag;  }  /**   * 根据传入的页号计算出获取记录的开始处和结束处。   *    * @param visitPageNumber   *            访问的页号   */  public void moveCursor(long visitPageNumber) {    setCurPageNumber(visitPageNumber);    setEndCursor(curPageNumber * perCount);    setStartCursor(endCursor - perCount + 1);  }  /**   * 在url中添加参数名称和参数值。   * @param paramName 参数名称   * @param paramValue 参数值    */  public void appendParam(String paramName, String paramValue) {    int length = this.urlAddress.length() - 1;    char lastChar = this.urlAddress.charAt(length);    if (lastChar == '&' || lastChar == '?') {      this.urlAddress = this.urlAddress + paramName + "=" + paramValue;    } else {      this.urlAddress = this.urlAddress + "&" + paramName + "=" + paramValue;    }  }  /**   * 获取页面显示信息   * @return 页面显示信息，该信息在视图层显示   */  public String getPaginationInfo() {    String totalCount = "共[" + this.totalCount + "]条  分[" + this.getTotalPage() + "]页 ";    String curPage = "第[" + this.curPageNumber + "]页   ";    String nextpage = "<a>下一页</a>";    String previouspage = "<a>上一页</a>";    String firstpage = "<a>首页</a>";    String lastpage = "<a>末页</a>";    String writespace = " ";    if (this.hasPreviousPage()) {      firstpage = "<a href='" + this.getUrlAddress() + paramName + "=1'>首页</a>";      previouspage = "<a href='" + this.getUrlAddress() + paramName + "=" + (curPageNumber - 1) + "'>上一页</a>";    }    if (this.hasNextPage()) {      nextpage = "<a href='" + this.getUrlAddress() + paramName + "=" + (curPageNumber + 1) + "'>下一页</a>";      lastpage = "<a href='" + this.getUrlAddress() + paramName + "=" + getTotalPage() + "'>末页</a>";    }    String info = totalCount + curPage + firstpage + " | " + previouspage + " | " + nextpage + " | " + lastpage;    return info;  }  public String getJSFunction() {    return "";  }  /**   * 将字符串转换成long   * @param str 字符串   * @return 转换后的long值。如果是一个无法转换的字符串，则返回1。   */  public long stringToNumber(String str) {    long lnumber = 1;    if (str != null) {      try {        lnumber = Long.parseLong(str);      } catch (NumberFormatException e) {        lnumber = 1;      }    }    return lnumber;  }  //    public static void main(String a[]){  //        PaginationHandler handle = new PaginationHandlerImpl();  //        handle.setParamName("ipage");  //        handle.setUrlAddress("/nanhai/test.do?oper=type");  //        handle.setTotalCount(1664555554);  //        handle.setPerCount(40000);  //        handle.moveCursor(334);  ////        handle.appendParam("name","linwenxiong");  //        handle.appendParam("age","18");  //        handle.appendParam("name","wentionlin");  //        System.out.println(handle.getPaginationInfo());  ////        System.out.println(handle.getStartCursor() + " | " +handle.getEndCursor());  ////        System.out.println(handle.stringToNumber("dd"));  //    }}