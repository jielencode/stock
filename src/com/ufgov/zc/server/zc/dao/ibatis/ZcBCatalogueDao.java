package com.ufgov.zc.server.zc.dao.ibatis;import java.math.BigDecimal;import java.util.List;import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.zc.model.ZcBCatalogue;import com.ufgov.zc.common.zc.model.ZcBCatalogueExample;import com.ufgov.zc.common.zc.model.ZcBMerchandise;import com.ufgov.zc.common.zc.model.ZcXyghZbjg;import com.ufgov.zc.server.zc.dao.IZcBCatalogueDao;public class ZcBCatalogueDao extends SqlMapClientDaoSupport implements IZcBCatalogueDao {  public ZcBCatalogueDao() {    super();  }  public int countByExample(ZcBCatalogueExample example) {    Integer count = (Integer) getSqlMapClientTemplate().queryForObject("ZC_B_CATALOGUE.ibatorgenerated_countByExample", example);    return count.intValue();  }  public int deleteByExample(ZcBCatalogueExample example) {    int rows = getSqlMapClientTemplate().delete("ZC_B_CATALOGUE.ibatorgenerated_deleteByExample", example);    return rows;  }  public int deleteByPrimaryKey(String zcCatalogueCode, String zcDiyuDaima, String zcYear) {    ZcBCatalogue key = new ZcBCatalogue();    key.setZcCatalogueCode(zcCatalogueCode);    key.setZcDiyuDaima(zcDiyuDaima);    key.setZcYear(zcYear);    int rows = getSqlMapClientTemplate().delete("ZC_B_CATALOGUE.ibatorgenerated_deleteByPrimaryKey", key);    return rows;  }  public void insert(ZcBCatalogue record) {    getSqlMapClientTemplate().insert("ZC_B_CATALOGUE.ibatorgenerated_insert", record);  }  public void insertSelective(ZcBCatalogue record) {    getSqlMapClientTemplate().insert("ZC_B_CATALOGUE.ibatorgenerated_insertSelective", record);  }  //  public List selectByExample(ZcBCatalogueExample example) {  //    List list = getSqlMapClientTemplate().queryForList("ZC_B_CATALOGUE.ibatorgenerated_selectByExample",  //      example);  //    return list;  //  }  public List selectByExample(ZcBCatalogueExample example) {    List list = getSqlMapClientTemplate().queryForList("selectPage.zcBCatalogue_selectByExample", example);    return list;  }  public List selectByXYExample(ElementConditionDto dto) {    List list = getSqlMapClientTemplate().queryForList("selectPage.zcBXYCatalogue_selectByExample", dto);    return list;  }  public List selectByExampleLimit(ZcBCatalogueExample example) {    List list = getSqlMapClientTemplate().queryForList("selectPage.zcBCatalogue_selectByExampleLimit", example);    return list;  }  public ZcBCatalogue selectByPrimaryKey(String zcCatalogueCode, String zcDiyuDaima, String zcYear) {    ZcBCatalogue key = new ZcBCatalogue();    key.setZcCatalogueCode(zcCatalogueCode);    key.setZcDiyuDaima(zcDiyuDaima);    key.setZcYear(zcYear);    ZcBCatalogue record = (ZcBCatalogue) getSqlMapClientTemplate().queryForObject("ZC_B_CATALOGUE.ibatorgenerated_selectByPrimaryKey", key);    return record;  }  public int updateByExampleSelective(ZcBCatalogue record, ZcBCatalogueExample example) {    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);    int rows = getSqlMapClientTemplate().update("ZC_B_CATALOGUE.ibatorgenerated_updateByExampleSelective", parms);    return rows;  }  public int updateByExample(ZcBCatalogue record, ZcBCatalogueExample example) {    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);    int rows = getSqlMapClientTemplate().update("ZC_B_CATALOGUE.ibatorgenerated_updateByExample", parms);    return rows;  }  public int updateByPrimaryKeySelective(ZcBCatalogue record) {    int rows = getSqlMapClientTemplate().update("ZC_B_CATALOGUE.ibatorgenerated_updateByPrimaryKeySelective", record);    return rows;  }  public int updateByPrimaryKey(ZcBCatalogue record) {    int rows = getSqlMapClientTemplate().update("ZC_B_CATALOGUE.ibatorgenerated_updateByPrimaryKey", record);    return rows;  }  private static class UpdateByExampleParms extends ZcBCatalogueExample {    private Object record;    public UpdateByExampleParms(Object record, ZcBCatalogueExample example) {      super(example);      this.record = record;    }    public Object getRecord() {      return record;    }  }  public List getZcBCatalogue(ElementConditionDto dto) {    return this.getSqlMapClientTemplate().queryForList("ZcBCatalogue.getZcBCatalogue", dto);  }  public List getCatalogueForMenuGoods() {    return this.getSqlMapClientTemplate().queryForList("ZcBCatalogue.getCatalogueForMenuGoods");  }  public List getCatalogueForNW() {    return this.getSqlMapClientTemplate().queryForList("ZcBCatalogue.getCatalogueforNW");  }  public List getCatalogueForNW(String zcSuCode) {    return this.getSqlMapClientTemplate().queryForList("ZcBCatalogue.getCatalogueforNWBySuCode", zcSuCode);//查询zc_zb_pinp表，通过zc_su_code进行过滤  }  public List getZcXyghZbjgList() {    return this.getSqlMapClientTemplate().queryForList("ZcXyghZbjg.getZcXyghZbjg");  }  public List getCataloguePeopForID(String catalogueID) {    return this.getSqlMapClientTemplate().queryForList("ZcBCatalogueProp.getCataloguePeopForID", catalogueID);  }  public List getMerCataloguePeopValueForID(ZcBMerchandise zcBMerchandise) {    return this.getSqlMapClientTemplate().queryForList("ZcBCatalogueProp.getMerCataloguePropValueForID", zcBMerchandise);  }  public ZcXyghZbjg getZcXyghZbjgByID(String zcProjID) {    return (ZcXyghZbjg) this.getSqlMapClientTemplate().queryForObject("ZcXyghZbjg.getZcXyghZbjgByID", zcProjID);  }    public int getJjPinPNum(String catalogue, ElementConditionDto dto) {    // TODO Auto-generated method stub    ZcBCatalogue d = (ZcBCatalogue) this.getSqlMapClientTemplate().queryForObject("ZcBCatalogue.getJjPinPNum", dto);    if (d != null && d.getZcJjPpNum() != null) {      return d.getZcJjPpNum().intValue();    } else {      return 0;    }  }    public BigDecimal getJjPricQuota(ElementConditionDto dto) {    ZcBCatalogue d = (ZcBCatalogue) this.getSqlMapClientTemplate().queryForObject("ZcBCatalogue.getJjPinPNum", dto);    return d.getZcJjPriceQuota();  }}