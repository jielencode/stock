package com.ufgov.zc.server.zc.dao.ibatis;import java.util.List;import java.util.Map;import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.zc.model.ZcBAgency;import com.ufgov.zc.common.zc.model.ZcBAgencyExample;import com.ufgov.zc.server.zc.dao.IZcBAgencyDao;public class ZcBAgencyDao extends SqlMapClientDaoSupport implements IZcBAgencyDao {  public ZcBAgencyDao() {    super();  }  public int countByExample(ZcBAgencyExample example) {    Integer count = (Integer) getSqlMapClientTemplate().queryForObject("ZC_B_AGENCY.ibatorgenerated_countByExample", example);    return count.intValue();  }  public int deleteByExample(ZcBAgencyExample example) {    int rows = getSqlMapClientTemplate().delete("ZC_B_AGENCY.ibatorgenerated_deleteByExample", example);    return rows;  }  public int deleteByPrimaryKey(String zcAgeyCode, String zcDiyuDaima) {    ZcBAgency key = new ZcBAgency();    key.setAgency(zcAgeyCode);    key.setZcDiyuDaima(zcDiyuDaima);    int rows = getSqlMapClientTemplate().delete("ZC_B_AGENCY.ibatorgenerated_deleteByPrimaryKey", key);    return rows;  }  public void insert(ZcBAgency record) {    getSqlMapClientTemplate().insert("ZC_B_AGENCY.ibatorgenerated_insert", record);  }  public void insertSelective(ZcBAgency record) {    getSqlMapClientTemplate().insert("ZC_B_AGENCY.ibatorgenerated_insertSelective", record);  }  /*   public List selectByExample(ZcBAgencyExample example) {         List list = getSqlMapClientTemplate().queryForList("ZC_B_AGENCY.ibatorgenerated_selectByExample", example);         return list;     }*/  public List selectByExample(ZcBAgencyExample example) {    List list = getSqlMapClientTemplate().queryForList("selectPage.zcBAgency_selectByExample", example);    return list;  }  public ZcBAgency selectByPrimaryKey(String zcAgeyCode, String zcDiyuDaima) {    ZcBAgency key = new ZcBAgency();    key.setAgency(zcAgeyCode);    key.setZcDiyuDaima(zcDiyuDaima);    ZcBAgency record = (ZcBAgency) getSqlMapClientTemplate().queryForObject("ZC_B_AGENCY.ibatorgenerated_selectByPrimaryKey", key);    return record;  }  public int updateByExampleSelective(ZcBAgency record, ZcBAgencyExample example) {    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);    int rows = getSqlMapClientTemplate().update("ZC_B_AGENCY.ibatorgenerated_updateByExampleSelective", parms);    return rows;  }  public int updateByExample(ZcBAgency record, ZcBAgencyExample example) {    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);    int rows = getSqlMapClientTemplate().update("ZC_B_AGENCY.ibatorgenerated_updateByExample", parms);    return rows;  }  public int updateByPrimaryKeySelective(ZcBAgency record) {    int rows = getSqlMapClientTemplate().update("ZC_B_AGENCY.ibatorgenerated_updateByPrimaryKeySelective", record);    return rows;  }  public int updateByPrimaryKey(ZcBAgency record) {    int rows = getSqlMapClientTemplate().update("ZC_B_AGENCY.ibatorgenerated_updateByPrimaryKey", record);    return rows;  }  private static class UpdateByExampleParms extends ZcBAgencyExample {    private Object record;    public UpdateByExampleParms(Object record, ZcBAgencyExample example) {      super(example);      this.record = record;    }    public Object getRecord() {      return record;    }  }  public List indexListAgency(ElementConditionDto dto) {    List list = getSqlMapClientTemplate().queryForList("ZC_B_AGENCY.getZcBAgencyWithFN", dto);    return list;  }  public Integer getAgencyCount(Map parameterObject) {    return (Integer) this.getSqlMapClientTemplate().queryForObject("ZC_B_AGENCY.getAgencyCount", parameterObject);  }  public ZcBAgency getAgencyById(String code) {    return (ZcBAgency) this.getSqlMapClientTemplate().queryForObject("ZC_B_AGENCY.getZcBAgencyById", code);  }  public List getAgency(Map parameterObject) {    return this.getSqlMapClientTemplate().queryForList("ZC_B_AGENCY.getAgency", parameterObject);  }}