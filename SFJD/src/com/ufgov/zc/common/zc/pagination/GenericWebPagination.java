package com.ufgov.zc.common.zc.pagination;import java.util.HashMap;import java.util.Map;import org.apache.log4j.Logger;import com.ufgov.zc.common.zc.pagination.style.DefaultStyle;/** * * <p>Title: </p> * <p>Description: </p> * <p>Copyright: Copyright (c) 2007</p> * <p>Company: MiracleSoft</p> * @version 1.0 */public class GenericWebPagination extends GenericPagination implements WebPagination {  protected Logger logger = Logger.getLogger(this.getClass());  protected String formName = DEFAULT_HTML_FORM_NAME;  protected String currentPageParamName = DEFAULT_CURRENT_PAGE_PARAM_NAME;  protected String pageSizeParamName = DEFAULT_PAGE_SIZE_PARAM_NAME;  protected String url = null;  protected PaginationStyle paginationStyle = null;  protected boolean printScript = true;  protected int[] totalPages = null;  protected Map paramMap = null;  protected Object queryResult = null;  public void setPaginationStyle(PaginationStyle paginationStyle) {    this.paginationStyle = paginationStyle;  }  public PaginationStyle getPaginationStyle() {    if (paginationStyle == null) {      paginationStyle = (PaginationStyle) new DefaultStyle();      logger.info("采用默认样式：" + paginationStyle.getClass().getName());    }    return this.paginationStyle;  }  public String getCurrentPageParamName() {    return currentPageParamName;  }  public void setCurrentPageParamName(String currentPageParamName) {    this.currentPageParamName = currentPageParamName;  }  public String getFormName() {    return formName;  }  public void setFormName(String formName) {    this.formName = formName;  }  public String getPageSizeParamName() {    return pageSizeParamName;  }  public void setPageSizeParamName(String pageSizeParamName) {    this.pageSizeParamName = pageSizeParamName;  }  public String getUrl() {    return this.url;  }  public void setUrl(String url) {    this.url = url;  }  public void appendParam(String paramName, String paramValue) {    getParameters().put(paramName, paramValue);  }  public Map getParameters() {    if (this.paramMap == null) {      this.paramMap = new HashMap();    }    return this.paramMap;  }  public Object getQueryResult() {    return this.queryResult;  }  public void setQueryResult(Object queryResult) {    this.queryResult = queryResult;  }  public boolean isPrintScript() {    return this.printScript;  }  public void setPrintScript(boolean printable) {    this.printScript = printable;  }  /**   * 取得总页面数   * @return 总页面数 ，返回值最小等于1   */  public int getTotalPage() {    int total = super.getTotalPage();    return total < 1 ? 1 : total;  }  public int[] getTotalPages() {    if (totalPages == null) {      totalPages = new int[getTotalPage()];      for (int i = 0; i < getTotalPage(); i++) {        totalPages[i] = i + 1;      }    }    return totalPages;  }  public String getScript() {    return getPaginationStyle().getScriptString(this);  }  public String getPaginationText() {    return getPaginationStyle().getPaginationString(this);  }  public int stringToInt(String str) {    int intStr = 1;    if (str != null) {      try {        intStr = Integer.parseInt(str);      } catch (NumberFormatException e) {        logger.error(e.getMessage());      }    }    return intStr;  }  //    public static void main(String a[]) throws Exception{  //	GenericWebPagination g = new GenericWebPagination();  ////	g.setTotalSize(200);  //	g.setPageSize(15);  //	g.setCurrentPage(2);  //	  //	g.setPrintScript(true);  ////	g.appendParam("name", "张三");  ////	g.appendParam("age", "28");  //	  //	/*采用Velocity分页样式*/  ////	VelocityTemplateStyle style = new VelocityTemplateStyle("velocity/test.vm");  ////	style.setPathTransform(new ClasspathPathTransform());  ////	g.setPaginationStyle(style);  //	System.out.println(g.getStartIndex()+","+g.getEndIndex());  //	System.out.println(g.getPaginationText());  //	System.out.println(g.getScript());  //	System.out.println(g.getCurrentPage());  //	System.out.println(g.getCurrentPage());System.out.println(g.getCurrentPage());  //    }}