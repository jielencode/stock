package com.ufgov.zc.common.zc.checkrule;import java.math.BigDecimal;import java.util.HashMap;import java.util.Map;import com.ufgov.zc.common.zc.model.ZcPProMake;import com.ufgov.zc.common.zc.model.ZcPProMitem;/* * 西安省厅采购计划的校验提示规则实现类 * 具体校验规则: *  一、协议、定点采购品目： *     E.其他定点品目：采购人自主选择定点供应商。（保险、加油、维修等） *            采购组织形式：集中采购。 *            采购方式：公开招标。 *            采购类型：协议采购。 *            委托机构：无。   * */public class ZcMakeDDQTCheckRuleBySX implements BaseRule {  private Map resultMap = new HashMap();  public Map check(Map parameter) {    ZcPProMake resultMake = new ZcPProMake();    StringBuffer resInfo = new StringBuffer();    ZcPProMake make = (ZcPProMake) parameter.get("data");    // 批复采购方式  (1公开招标,2邀请招标,3竞争性谈判,4单一来源采购,5询价,6其他)    String pifuMode = make.getZcPifuCgfs();    // 采购组织形式 (1集中采购,2部门集中采购,3分散采购)    String sequence = make.getZcMakeSequence();    // 采购类型 （G02定点采购,G01协议供货,Z01项目采购）    String fukuanType = make.getZcFukuanType();    // 代理机构名称    String ageyCode = make.getAgency();    ZcPProMitem item = (ZcPProMitem) parameter.get("itemInfo");    // 采购数量    int caigNum = item.getZcCaigNum().intValue();    // 采购金额    BigDecimal itemSum = item.getZcItemSum();    if (!"1".equals(sequence)) {      // 采购组织形式 应该是  集中采购      resInfo.append("[采购组织形式]应采取[集中采购],");      resultMake.setZcMakeSequence("1");    }    if (!"G01".equals(fukuanType)) {      // 采购类型 应该是 协议采购      resInfo.append("[采购类型]应采取[协议供货],");      resultMake.setZcFukuanType("G01");    }    if (resInfo.length() > 0) {      resInfo.substring(0, resInfo.length() - 1);      resultMap.put("resMake", resultMake);    } else {      resultMap.put("resMake", null);    }    resultMap.put("resInfo", resInfo.toString());    return resultMap;  }}