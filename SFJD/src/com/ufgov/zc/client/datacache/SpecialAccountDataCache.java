package com.ufgov.zc.client.datacache;import java.util.ArrayList;import java.util.Collections;import java.util.HashMap;import java.util.List;import java.util.Map;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.common.commonbiz.model.BankAccount;import com.ufgov.zc.common.system.RequestMeta;public class SpecialAccountDataCache {  private static Map<String, BankAccount> dataMap;  private static List<BankAccount> dataList;  public static BankAccount getSpecialAccount(String bankAccountId) {    BankAccount bankAccount = dataMap.get(bankAccountId);    if (bankAccount == null) {      refreshData();      return dataMap.get(bankAccountId);    }    return bankAccount;  }  public static List<BankAccount> getSpecialAccountList() {    if (dataList == null) {      refreshData();    }    return dataList;  }  public static synchronized void refreshData() {    RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();    int nd = WorkEnv.getInstance().getTransNd();    List list = new ArrayList();    list.add("02");    list.add("05");    list.add("06");    list.add("07");    list.add("08");    list.add("09");    list.add("09");    list.add("10");    list.add("11");    dataList = Util.baseDataServiceDelegate.getSpecialAccountList(nd, list, requestMeta);    Map tempMap = new HashMap();    for (Object o : dataList) {      BankAccount bankAccount = (BankAccount) o;      tempMap.put(bankAccount.getCode(), bankAccount);    }    dataMap = Collections.unmodifiableMap(tempMap);  }}