package com.ufgov.zc.client.zc.ztb.model;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.common.commonbiz.publish.IBaseDataServiceDelegate;import com.ufgov.zc.common.system.constants.BusinessOptionConstants;import com.ufgov.zc.common.system.model.AsOption;public class DBProperty {	private String host;	private String port;	private String sid;	private String user;	private String password;	private String webServiceHostPort = "";	private boolean isDisplayCoverButton = false;	private boolean isNeedToCheckPubKeyData = true;	private boolean isMustCoded = false;	private boolean isMasterMustCoded = false;	private boolean isProviderMustCoded = false;	private String customerLocalWorkspacePath = "";	private boolean isShowNextTime = false;	public DBProperty() {		// this.webServiceHostPort = "http://127.0.0.1:7001/GB/";	  //by chenjl 2013-08-28 不用下面的方法获取数据库预置的地址和端口，写成固定值，标书上传时，通过点击配置菜单，填入服务器地址和端口，并会保存到当前机器的C:\\ufgov\\ztbconfig\\resource\\impfiles\\dbconfig.xml文件里，这个默认值不起作用//  this.webServiceHostPort = getHostPort();//  this.port = _getPort();	  this.webServiceHostPort = "http://127.0.0.1:7001/GB/";    this.port = "7001";	}	private String _getPort() {		// TODO Auto-generated method stub		IBaseDataServiceDelegate baseDataServiceDelegate = (IBaseDataServiceDelegate) ServiceFactory				.create(IBaseDataServiceDelegate.class,						"baseDataServiceDelegate");		AsOption asOption = baseDataServiceDelegate.getAsOption(				BusinessOptionConstants.OPT_ZC_DBPROPERTY_SERVER_PORT, WorkEnv						.getInstance().getRequestMeta());		return asOption.getOptVal();	}	private String getHostPort() {		// TODO Auto-generated method stub		IBaseDataServiceDelegate baseDataServiceDelegate = (IBaseDataServiceDelegate) ServiceFactory				.create(IBaseDataServiceDelegate.class,						"baseDataServiceDelegate");		AsOption asOption = baseDataServiceDelegate.getAsOption(				BusinessOptionConstants.OPT_ZC_DBPROPERTY_SERVER_URL, WorkEnv						.getInstance().getRequestMeta());		return asOption.getOptVal();	}	public String getHost() {		return host;	}	public void setHost(String host) {		this.host = host;	}	public String getPort() {		return port;	}	public void setPort(String port) {		this.port = port;	}	public String getSid() {		return sid;	}	public void setSid(String sid) {		this.sid = sid;	}	public String getUser() {		return user;	}	public void setUser(String user) {		this.user = user;	}	public String getPassword() {		return password;	}	public void setPassword(String password) {		this.password = password;	}	public boolean isDisplayCoverButton() {		return isDisplayCoverButton;	}	public void setDisplayCoverButton(boolean isDisplayCoverButton) {		this.isDisplayCoverButton = isDisplayCoverButton;	}	public boolean isNeedToCheckPubKeyData() {		return isNeedToCheckPubKeyData;	}	public void setNeedToCheckPubKeyData(boolean isNeedToCheckPubKeyData) {		this.isNeedToCheckPubKeyData = isNeedToCheckPubKeyData;	}	public String getWebServiceHostPort() {		return webServiceHostPort;	}	public void setWebServiceHostPort(String webServiceHostPort) {		this.webServiceHostPort = webServiceHostPort;	}	public boolean isMustCoded() {		return isMustCoded;	}	public void setMustCoded(boolean isMustCoded) {		this.isMustCoded = isMustCoded;	}	public boolean isMasterMustCoded() {		return isMasterMustCoded;	}	public void setMasterMustCoded(boolean isMasterMustCoded) {		this.isMasterMustCoded = isMasterMustCoded;	}	public boolean isProviderMustCoded() {		return isProviderMustCoded;	}	public void setProviderMustCoded(boolean isProviderMustCoded) {		this.isProviderMustCoded = isProviderMustCoded;	}	public String getCustomerLocalWorkspacePath() {		return customerLocalWorkspacePath;	}	public void setCustomerLocalWorkspacePath(String customerLocalWorkspacePath) {		this.customerLocalWorkspacePath = customerLocalWorkspacePath;	}	public boolean isShowNextTime() {		return isShowNextTime;	}	public void setShowNextTime(boolean isShowNextTime) {		this.isShowNextTime = isShowNextTime;	}}