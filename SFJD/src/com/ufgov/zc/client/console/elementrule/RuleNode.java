package com.ufgov.zc.client.console.elementrule;import javax.swing.tree.DefaultMutableTreeNode;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.common.commonbiz.model.MaElementRelationRule;import com.ufgov.zc.common.commonbiz.model.MaElementRelationRuleEntry;import com.ufgov.zc.common.commonbiz.publish.IBaseDataServiceDelegate;import com.ufgov.zc.common.system.RequestMeta;public class RuleNode extends DefaultMutableTreeNode implements NodeOperator {  /**   *    */  private static final long serialVersionUID = -83908731382473977L;  protected boolean templateNode = true;  protected boolean GroupNode = true;  protected Class viewClass;  protected RuleView view;  protected boolean ruleNode = true;  protected boolean entityNode = true;  protected boolean newNode = false;  protected IBaseDataServiceDelegate service = (IBaseDataServiceDelegate) ServiceFactory.create(  IBaseDataServiceDelegate.class, "baseDataServiceDelegate");  /**   * @return the newNode   */  public boolean isNewNode() {    return newNode;  }  /**   * @param newNode the newNode to set   */  public void setNewNode(boolean newNode) {    this.newNode = newNode;  }  /**   * @return the entityNode   */  public boolean isEntityNode() {    return entityNode;  }  /**   * @param entityNode the entityNode to set   */  public void setEntityNode(boolean entityNode) {    this.entityNode = entityNode;  }  /**   * @return the ruleNode   */  public boolean isRuleNode() {    return ruleNode;  }  /**   * @param ruleNode the ruleNode to set   */  public void setRuleNode(boolean ruleNode) {    this.ruleNode = ruleNode;  }  /**   * @return the viewClass   */  public Class getViewClass() {    return viewClass;  }  /**   * @param viewClass the viewClass to set   */  public void setViewClass(Class viewClass) {    this.viewClass = viewClass;  }  /**   * @return the groupNode   */  public boolean isGroupNode() {    return GroupNode;  }  /**   * @param groupNode the groupNode to set   */  public void setGroupNode(boolean groupNode) {    GroupNode = groupNode;  }  /**   * @return the templateNode   */  public boolean isTemplateNode() {    return templateNode;  }  /**   * @param templateNode the templateNode to set   */  public void setTemplateNode(boolean templateNode) {    this.templateNode = templateNode;  }  public RuleNode() {    super();  }  /**   * 对于RuleNode, userObject 应为MaElementRelationRule   * @param userObject   */  public RuleNode(Object userObject) {    super(userObject);  }  public RuleView getRuleView() throws InstantiationException, IllegalAccessException {    if (view == null) {      view = new DefaultRuleView();    }    return view;  }  public RuleNode createNode(Object ruleObject, RequestMeta requestMeta) {    // TODO Auto-generated method stub    RuleNode newNode = null;    if (this.isGroupNode() && this.isTemplateNode()) {      MaElementRelationRule myRule = (MaElementRelationRule) this.userObject;      MaElementRelationRule rule = (MaElementRelationRule) ruleObject;      rule.setRuleType(myRule.getRuleType());      newNode = new RuleNode(ruleObject);      newNode.setGroupNode(false);      newNode.setRuleNode(true);      newNode.setEntityNode(false);      newNode.setViewClass(getViewClass());      newNode.insert(WorkEnv.getInstance().getRequestMeta());      this.add(newNode);    } else {      if (this.isTemplateNode()) {        MaElementRelationRule rule = (MaElementRelationRule) this.userObject;        String ruleId = rule.getRelationRuleId();        MaElementRelationRuleEntry entry = (MaElementRelationRuleEntry) ruleObject;        entry.setRelationRuleId(ruleId);        newNode = new RuleEntryNode(entry);        newNode.setViewClass(viewClass);        this.add(newNode);      }    }    newNode.setNewNode(true);    return newNode;  }  public void delete(RequestMeta requestMeta) {    // TODO Auto-generated method stub    MaElementRelationRule rule = (MaElementRelationRule) this.userObject;    String ruleId = rule.getRelationRuleId();    service.deleteElementRelationRuleById(ruleId, WorkEnv.getInstance().getRequestMeta());    this.removeFromParent();  }  public void insert(RequestMeta requestMeta) {    // TODO Auto-generated method stub    MaElementRelationRule rule = (MaElementRelationRule) this.userObject;    service.insertElementRelationRule(rule, WorkEnv.getInstance().getRequestMeta());    this.setNewNode(false);  }  public void restored() {    // TODO Auto-generated method stub  }  public void update(RequestMeta requestMeta) {    // TODO Auto-generated method stub    MaElementRelationRule rule = (MaElementRelationRule) this.userObject;    service.updateElementRelationRule(rule, WorkEnv.getInstance().getRequestMeta());  }}