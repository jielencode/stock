package com.ufgov.zc.client.report;import java.math.BigDecimal;import java.util.ArrayList;import java.util.HashMap;import java.util.Iterator;import java.util.List;import java.util.Map;import org.josql.Query;import org.josql.QueryExecutionException;import org.josql.QueryParseException;import org.josql.QueryResults;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.common.commonbiz.fieldmap.BaseReportFM;import com.ufgov.zc.common.commonbiz.model.BaseReportBill;import com.ufgov.zc.common.commonbiz.model.MaTzdSumElement;import com.ufgov.zc.common.commonbiz.publish.IBaseDataServiceDelegate;import com.ufgov.zc.common.system.exception.JoSqlDataHandleException;import com.ufgov.zc.common.system.josql.JoSqlFunctions;import com.ufgov.zc.common.system.util.LevelControlUtil;public class ReportJoSqlDataHandler {  private static Map<String, String> sumLevelControlMap = new HashMap<String, String>();  private static IBaseDataServiceDelegate baseDataServiceDelegate = (IBaseDataServiceDelegate) ServiceFactory  .create(IBaseDataServiceDelegate.class, "baseDataServiceDelegate");  static {    sumLevelControlMap = baseDataServiceDelegate.getFieldLevelOptions(WorkEnv.getInstance().getRequestMeta());  }  public static String getGroupStr(Map<String, MaTzdSumElement> sumElementFieldMap, List<String> groupList) {    String result = "";    for (Map.Entry<String, MaTzdSumElement> element : sumElementFieldMap.entrySet()) {      String key = element.getKey();      String value = element.getValue().getSumLevel();      if (value != null && !"0".equals(value.trim())) {        int level = Integer.parseInt((String) value.trim());        String optValue = (String) sumLevelControlMap.get(key.toUpperCase().trim());        int length = LevelControlUtil.getCtrLength(optValue, level);        result += " subStr(" + BaseReportFM.fieldMap.get(key) + ",0," + length + ") " + ",";      } else {        result += " " + BaseReportFM.fieldMap.get(key) + ",";      }      groupList.add((String) BaseReportFM.fieldMap.get(key));    }    if (result.length() > 0) {      result = result.substring(0, result.length() - 1);      result = " group by " + result + " EXECUTE ON GROUP_BY_RESULTS "      + " sumBigDecimal(money1) money1, sumBigDecimal(money2) money2, sumBigDecimal(money3) money3,"      + " sumBigDecimal(money4) money4, sumBigDecimal(money5) money5, sumBigDecimal(money6) money6,"      + " sumBigDecimal(money7) money7, sumBigDecimal(money8) money8, sumBigDecimal(money9) money9,"      + " sumBigDecimal(money10) money10,sumBigDecimal(money11) money11,sumBigDecimal(money12) money12";    }    return result;  }  public static List<BaseReportBill> groupBaseReportList(List baseReportList,  Map<String, MaTzdSumElement> sumFieldMap) {    List<String> groupList = new ArrayList<String>();    List<BaseReportBill> mainReportList = new ArrayList<BaseReportBill>();    try {      String joSql = "select * from " + BaseReportBill.class.getName() + getGroupStr(sumFieldMap, groupList);      Query query = new Query();      query.addFunctionHandler(new JoSqlFunctions());      query.parse(joSql);      QueryResults rs = query.execute(baseReportList);      Map map = rs.getGroupByResults();      Iterator it = map.keySet().iterator();      while (it.hasNext()) {        List key = (List) it.next();        Map sumMap = rs.getGroupBySaveValues(key);        BaseReportBill reportBill = new BaseReportBill();        int i = 0;        for (String propertyField : groupList) {          reportBill.set(propertyField, key.get(i++));        }        reportBill.setMoney1((BigDecimal) sumMap.get("money1"));        reportBill.setMoney2((BigDecimal) sumMap.get("money2"));        reportBill.setMoney3((BigDecimal) sumMap.get("money3"));        reportBill.setMoney4((BigDecimal) sumMap.get("money4"));        reportBill.setMoney5((BigDecimal) sumMap.get("money5"));        reportBill.setMoney6((BigDecimal) sumMap.get("money6"));        reportBill.setMoney7((BigDecimal) sumMap.get("money7"));        reportBill.setMoney8((BigDecimal) sumMap.get("money8"));        reportBill.setMoney9((BigDecimal) sumMap.get("money9"));        reportBill.setMoney10((BigDecimal) sumMap.get("money10"));        reportBill.setMoney11((BigDecimal) sumMap.get("money11"));        reportBill.setMoney12((BigDecimal) sumMap.get("money12"));        mainReportList.add(reportBill);      }    } catch (QueryParseException e) {      throw new JoSqlDataHandleException("", e);    } catch (QueryExecutionException e) {      e.printStackTrace();    }    return mainReportList;  }}