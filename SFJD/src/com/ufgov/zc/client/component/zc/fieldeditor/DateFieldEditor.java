package com.ufgov.zc.client.component.zc.fieldeditor;import java.awt.event.KeyAdapter;import java.awt.event.KeyEvent;import java.util.Date;import javax.swing.JComponent;import com.ufgov.zc.client.component.DateField;import com.ufgov.zc.client.component.event.ValueChangeEvent;import com.ufgov.zc.client.component.event.ValueChangeListener;import com.ufgov.zc.client.component.ui.fieldeditor.AbstractFieldEditor;import com.ufgov.zc.common.system.util.BeanUtil;import com.ufgov.zc.common.zc.model.ZcBaseBill;public class DateFieldEditor extends AbstractFieldEditor {  private static final long serialVersionUID = -8002760379481660801L;  private DateField field;  private boolean isDateTime = false;  private String timeType = "";  private boolean isZeroSecond = true;  private Integer[] allowMinutes = null;  public static final String TimeTypeH24 = DateField.TimeTypeH24;  public static final String TimeTypeH12 = DateField.TimeTypeH12;    private String defaultValue = null;    private boolean enabledHour = false;    private boolean enabledMinute = false;  private boolean enabledSecond = false;  public DateFieldEditor(String name, String fieldName) {    this.fieldName = fieldName;    init(name);  }  public DateFieldEditor(String name, String fieldName, String timeType) {    this.fieldName = fieldName;    if (timeType != null && (timeType.equals(DateField.TimeTypeH12) || timeType.equals(DateField.TimeTypeH24))) {      this.isDateTime = true;      this.timeType = timeType;    }    init(name);  }  public DateFieldEditor(String name, String fieldName, String timeType, Integer[] allowMinutes, boolean isZeroSecond) {    this.fieldName = fieldName;    if (timeType != null && (timeType.equals(DateField.TimeTypeH12) || timeType.equals(DateField.TimeTypeH24))) {      this.isDateTime = true;      this.timeType = timeType;      this.isZeroSecond = isZeroSecond;      this.allowMinutes = allowMinutes;    }    init(name);  }    public DateFieldEditor(String name, String fieldName, String timeType, String defaultValue, 		  		  boolean enabledHour, boolean enabledMinute, boolean enabledSecond) {	  	  this.fieldName = fieldName;	  	  if (timeType != null && (timeType.equals(DateField.TimeTypeH12) || timeType.equals(DateField.TimeTypeH24))) {		  		  this.isDateTime = true;		  		  this.timeType = timeType;		  		  this.defaultValue = defaultValue;		  		  this.enabledHour = enabledHour;		  this.enabledMinute = enabledMinute;		  this.enabledSecond = enabledSecond;		  	  }	  	  init(name);	    }  public void setEnabled(boolean enabled) {    field.setEnabled(enabled);  }  public void setEditable(boolean enabled) {    field.setEditable(enabled);  }  public Object getValue() {    return field.getDate();  }  public void setValue(Object value) { //在选择的上面的行发生改变的时候所触发的事件    if (value == null) {      field.setDate(null);    } else if (value instanceof ZcBaseBill) {      Date v = (Date) BeanUtil.get(fieldName, value);      field.setDate(v);    }  }  protected JComponent createEditorComponent() { //生成下面的控件，并将改变的内容同步到对象中    if (this.isDateTime) {      if (allowMinutes != null) {        field = new DateField(this.timeType, this.allowMinutes, this.isZeroSecond);      } else if(defaultValue == null){    	      	  field = new DateField(this.timeType);    	        } else {    	  field = new DateField(defaultValue, timeType, enabledHour, enabledMinute, enabledSecond);    	        }    } else {      field = new DateField();    }    field.addValueChangeListener(new ValueChangeListener() {      public void valueChanged(ValueChangeEvent e) {        syncEditObject();      }    });    field.addKeyListener(new KeyAdapter() {      public void keyReleased(KeyEvent e) {        syncEditObject();      }    });    return field;  }  protected void syncEditObject() {    if (getEditObject() instanceof ZcBaseBill) {      ZcBaseBill bill = (ZcBaseBill) getEditObject();      if (bill != null) {        BeanUtil.set(fieldName, field.getDate(), getEditObject());      }    }    this.fireEditSynced();  }  public DateField getField() {    return field;  }}