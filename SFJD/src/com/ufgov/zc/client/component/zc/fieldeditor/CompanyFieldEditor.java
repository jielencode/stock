package com.ufgov.zc.client.component.zc.fieldeditor;import javax.crypto.Mac;import javax.swing.JComponent;import com.ufgov.zc.client.component.element.CompanyTreeSelectField;import com.ufgov.zc.client.component.event.ValueChangeEvent;import com.ufgov.zc.client.component.event.ValueChangeListener;import com.ufgov.zc.client.component.ui.fieldeditor.AbstractFieldEditor;import com.ufgov.zc.common.commonbiz.model.Company;import com.ufgov.zc.common.system.util.BeanUtil;import com.ufgov.zc.common.zc.foreignentity.IForeignEntityTreeHandler;import com.ufgov.zc.common.zc.model.ZcBaseBill;public class CompanyFieldEditor extends AbstractFieldEditor {  private static final long serialVersionUID = -7677429808342983951L;  public CompanyTreeSelectField coField;  private IForeignEntityTreeHandler handler;  private String compoId;  private String elementCode;  public CompanyFieldEditor(String name, String fieldName) {    this.fieldName = fieldName;    init(name);  }  public CompanyFieldEditor(String name, String fieldName, IForeignEntityTreeHandler handler) {    this.fieldName = fieldName;    this.handler = handler;    init(name);  }  public CompanyFieldEditor(String name, String fieldName, IForeignEntityTreeHandler handler, String compoId, String elementCode) {    this.fieldName = fieldName;    this.handler = handler;    this.compoId = compoId;    this.elementCode = elementCode;    init(name);  }  public void addValueChangeListener(ValueChangeListener valueChangeListener) {    this.coField.addValueChangeListener(valueChangeListener);  }  public CompanyFieldEditor(String name, boolean isEnabled, String fieldName) {    this.fieldName = fieldName;    init(name);    coField.setEnabled(isEnabled);    coField.setEditable(isEnabled);  }  protected JComponent createEditorComponent() {    coField = new CompanyTreeSelectField(this.handler, this.compoId, this.elementCode);    coField.addValueChangeListener(new ValueChangeListener() {      public void valueChanged(ValueChangeEvent e) {        syncEditObject();      }    });    return coField;  }  /**   * 同步到对象   */  protected void syncEditObject() {    if (getEditObject() instanceof ZcBaseBill) {      ZcBaseBill bill = (ZcBaseBill) getEditObject();      if (bill != null) {        Company company = coField.getCompany();        BeanUtil.set(fieldName, company == null ? null : company.getCode(), getEditObject());      }    }    this.fireEditSynced();  }  public String getCompanyName() {    Company company = coField.getCompany();    return company == null ? "" : company.getName();  }  public Object getValue() {    return coField.getCompany();  }  public void setValue(Object value) {    if (value == null) {      coField.setValue(null);    } else if (value instanceof Company) {      coField.setValue(value);    }else if (value instanceof ZcBaseBill) {      coField.setValueByCode((String) BeanUtil.get(fieldName, value));    }  }  @Override  public void setEnabled(boolean enabled) {    coField.setEditable(false);    coField.chooseButton.setEnabled(enabled);    coField.chooseButton.setVisible(enabled);  }}