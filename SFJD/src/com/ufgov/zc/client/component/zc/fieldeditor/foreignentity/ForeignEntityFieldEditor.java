/** * ForeignEntityFieldPanel.java * com.ufgov.gk.client.component.zc.fieldeditor * Administrator * 2010-5-4 */package com.ufgov.zc.client.component.zc.fieldeditor.foreignentity;import javax.swing.JComponent;import com.ufgov.zc.client.component.event.ValueChangeEvent;import com.ufgov.zc.client.component.event.ValueChangeListener;import com.ufgov.zc.client.component.ui.fieldeditor.AbstractFieldEditor;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.system.util.BeanUtil;import com.ufgov.zc.common.zc.model.ZcBaseBill;/** * @author Administrator * */public class ForeignEntityFieldEditor extends AbstractFieldEditor {  private String[] columNames;  private ForeignEntityField field;  private Object[] editors;  public ForeignEntityFieldEditor(String sqlMapSelectedId,  ElementConditionDto elementCondtiontDto,  String[] columNames,  Object[] editors,  String name,  String fieldName) {    this.sqlMapSelectedId = sqlMapSelectedId;    this.columNames = columNames;    this.editors = editors;    this.fieldName = fieldName;    this.elementConditionDto = elementCondtiontDto;    init(name);  }  @Override  protected JComponent createEditorComponent() {    this.field = new ForeignEntityField(this.sqlMapSelectedId,    this.elementConditionDto,    this.fieldName,    this.columNames,    this.editors,    this.dialogTitle);    field.addValueChangeListener(new ValueChangeListener() {      public void valueChanged(ValueChangeEvent e) {        afterSelect();        syncEditObject();      }    });    return this.field;  }  /**  * @Description: 选择后  */  public void afterSelect() {  }  /**   * @Description: 选择前   */  public void beforeSelect() {  }  protected void syncEditObject() {    if (getEditObject() != null) {      BeanUtil.set(fieldName, field.getText(), getEditObject());      if ("".equals(field.getText())) {        for (Object o : editors) {          AbstractFieldEditor editor = (AbstractFieldEditor) o;          BeanUtil.set(editor.getFieldName(), null, getEditObject());          editor.setEditObject(getEditObject());        }      }    }    this.fireEditSynced();  }  @Override  public Object getValue() {    // TODO Auto-generated method stub    return this.field.getText();  }  @Override  public void setValue(Object value) {//在选择的上面的行发生改变的时候所触发的事件    if (value == null) {      field.setText(null);      field.setToolTipText(null);    } else if (value instanceof ZcBaseBill) {      String v = (String) BeanUtil.get(fieldName, value);      field.setText(v);      if (v == null || v.trim().equals("")) {        field.setToolTipText(null);      } else {        field.setToolTipText(v);      }    }  }  public void addValueChangeListener(ValueChangeListener valueChangeListener) {    // TODO Auto-generated method stub    this.field.addValueChangeListener(valueChangeListener);  }  public ForeignEntityField getField() {    return field;  }  public void setEditable(boolean enabled) {    field.setEditable(enabled);  }}