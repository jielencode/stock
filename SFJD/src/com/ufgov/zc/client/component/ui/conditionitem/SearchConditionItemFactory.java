package com.ufgov.zc.client.component.ui.conditionitem;import java.awt.Dimension;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Arrays;import java.util.List;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.client.util.CoCodeFilterUtil;import com.ufgov.zc.common.commonbiz.model.BAcc;import com.ufgov.zc.common.commonbiz.model.BalMode;import com.ufgov.zc.common.commonbiz.model.BillElement;import com.ufgov.zc.common.commonbiz.model.Company;import com.ufgov.zc.common.commonbiz.model.DAttr;import com.ufgov.zc.common.commonbiz.model.Fund;import com.ufgov.zc.common.commonbiz.model.InceptDoc;import com.ufgov.zc.common.commonbiz.model.Manage;import com.ufgov.zc.common.commonbiz.model.Org;import com.ufgov.zc.common.commonbiz.model.Origin;import com.ufgov.zc.common.commonbiz.model.Outlay;import com.ufgov.zc.common.commonbiz.model.Payout;import com.ufgov.zc.common.commonbiz.model.Paytype;import com.ufgov.zc.common.commonbiz.model.Project;import com.ufgov.zc.common.commonbiz.model.ProjectType;import com.ufgov.zc.common.commonbiz.model.SendDoc;import com.ufgov.zc.common.sf.model.SfEntrust;import com.ufgov.zc.common.system.constants.GkDataRuleConstants;import com.ufgov.zc.common.system.constants.ZcValSetConstants;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.system.model.AsVal;import com.ufgov.zc.common.system.util.StringTools;/** *  * <p> *  * Title: GK53 *  * </p> *  * <p> *  * Description: 搜索条件基工厂类，用来创建搜索条件项 *  * </p> *  * <p> *  * Copyright: Copyright 2009 ufgov, Inc. *  * </p> *  * <p> *  * Company: ufgov *  * </p> *  * <p> *  * 创建时间: 2009-4-23 *  * </p> *  *  *  * @author 刘永伟(manlge) *  * @version 1.0 */public class SearchConditionItemFactory {  private SearchConditionItemFactory() {    // 不准实化  }  /**   *    * 2009-5-25 by longrm 直接取表ma_search_condition的名称翻译   *    *    *    * @param id   *    *            字段代码 CONDITION_FIELD_CODE   *    * @param name   *    *            字段名称 CONDITION_FIELD_NAME   *    * @param type   *    * @param defaultValue   *    * @return   */  public static AbstractSearchConditionItem createSearchConditionItem(Object id, String name, Object type,  Object defaultValue) {    return createSearchConditionItem(id, name, type, defaultValue, null);  }  public static AbstractSearchConditionItem createSearchConditionItem(Object id, String name, Object type,  Object defaultValue, String numLimCompoId) {    if (id == null)      throw new IllegalArgumentException("id不能为空");    if (id.equals(ConditionFieldConstants.START_DATE)) {      // String dateControl =      // AsOptionMeta.getOptVal(BusinessOptionConstants.OPT_START_DATE_CONTENT);      String startDateDefaultValue = "";      // if ("N".equalsIgnoreCase(dateControl)) {      startDateDefaultValue = StringTools.getMonthBeginStr(WorkEnv.getInstance().getTransDate());      // } else {      // startDateDefaultValue =      // StringTools.getDateFormat(WorkEnv.getInstance().getTransDate());      // }      DateSearchConditionItem d = new DateSearchConditionItem(name,      defaultValue == null ? startDateDefaultValue : defaultValue.toString()) {        public void putToElementConditionDto(ElementConditionDto element) {          element.setStartDate(getDate());        }      };      return d;    } else if (id.equals(ConditionFieldConstants.END_DATE)) {      String endDateDefaultValue = StringTools.getDateFormat(WorkEnv.getInstance().getTransDate());      return new DateSearchConditionItem(name, defaultValue == null ? endDateDefaultValue : defaultValue      .toString()) {        public void putToElementConditionDto(ElementConditionDto element) {          element.setEndDate(getDate());        }      };    } else if (id.equals(ConditionFieldConstants.SEASON)) {      return new SeasonComboboxConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          int season = (Integer) getValue();          element.setSeason(season);        }      };    } else if (id.equals(ConditionFieldConstants.PRINT_TIME)) {      return new YesNoAllComboBoxConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          int times = (Integer) getValue();          element.setPrintTimes(times);        }      };    } else if (id.equals(ConditionFieldConstants.START_MONTH)) {      MonthComboboxConditionItem item = new MonthComboboxConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setStartMonth(asVal == null ? 0 : Integer.parseInt(asVal.getValId()));        }      };      if (defaultValue != null) {        item.setValueByCode(defaultValue.toString());      }      return item;    } else if (id.equals(ConditionFieldConstants.END_MONTH)) {      MonthComboboxConditionItem item = new MonthComboboxConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setEndMonth(asVal == null ? 0 : Integer.parseInt(asVal.getValId()));        }      };      if (defaultValue != null) {        item.setValueByCode(defaultValue.toString());      }      return item;    }    if (id.equals(ConditionFieldConstants.MONTH)) {      return new MonthComboboxConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setMonth(asVal == null ? 0 : Integer.parseInt(asVal.getValId()));        }      };    } else if (id.equals(ConditionFieldConstants.PM_ADJUST_CODE)) {      return new PmAdjustComboboxConditionItem(name, defaultValue) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setPmAdjustCode(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.DP_EDIT_PM_ADJUST_CODE)) {      List planTypeList = new ArrayList();      planTypeList.add("101");      return new PmAdjustComboboxConditionItem(name, planTypeList) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setPmAdjustCode(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.CP_DV_ADJUST_CODE)) {      List adjustTypeList = new ArrayList();      adjustTypeList.add("101");      adjustTypeList.add("102");      return new CpAdjustComboboxConditionItem(name, adjustTypeList) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setCpAdjustCode(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.CP_APPLY_ADJUST_CODE)) {      List adjustTypeList = new ArrayList();      adjustTypeList.add("101");      adjustTypeList.add("102");      adjustTypeList.add("201");      adjustTypeList.add("202");      return new CpAdjustComboboxConditionItem(name, adjustTypeList) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setCpAdjustCode(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.CP_DVT_ADJUST_CODE)) {      return new CpAdjustComboboxConditionItem(name, "CP_DVT_ADJUST_CODE") {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setCpAdjustCode(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.DP_ADJUST_PM_ADJUST_CODE)) {      List planTypeList = new ArrayList();      planTypeList.add("202");      planTypeList.add("301");      planTypeList.add("302");      planTypeList.add("201");      return new PmAdjustComboboxConditionItem(name, planTypeList) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setPmAdjustCode(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.FUND_CODE)) {      if (type == null || BillElement.COMBOBOX_RENDER.equals(type)) {        FundComboboxConditionItem fundComboBoxConditionItem = new FundComboboxConditionItem(name,        numLimCompoId) {          public void putToElementConditionDto(ElementConditionDto element) {            Fund fund = (com.ufgov.zc.common.commonbiz.model.Fund) getValue();            element.setFundCode(fund == null ? null : fund.getCode());          }        };        return fundComboBoxConditionItem;      } else if (BillElement.TREE_RENDER.equals(type)) {        FundTreeSelectFieldConditionItem item = new FundTreeSelectFieldConditionItem(name, numLimCompoId) {          public void putToElementConditionDto(ElementConditionDto element) {            Fund fund = (com.ufgov.zc.common.commonbiz.model.Fund) getValue();            element.setFundCode(fund == null ? null : fund.getCode());          }        };        return item;      } else {        return new FundTableSelectFieldConditionItem(name, numLimCompoId) {          public void putToElementConditionDto(ElementConditionDto element) {            Fund fund = (com.ufgov.zc.common.commonbiz.model.Fund) getValue();            element.setFundCode(fund == null ? null : fund.getCode());          }        };      }    } else if (id.equals(ConditionFieldConstants.B_ACC_CODE)) {      BAccTreeConditionItem item = new BAccTreeConditionItem(name, defaultValue);      return item;    } else if (id.equals(ConditionFieldConstants.CO_CODE)) {      CompanyTreeFieldConditionItem companyTreeFieldConditionItem = new CompanyTreeFieldConditionItem(name,      numLimCompoId) {        public void putToElementConditionDto(ElementConditionDto element) {          Company company = (Company) getValue();          element.setCoCodeFilter(CoCodeFilterUtil.genFilter(company));          element.setCoCode(company == null ? null : company.getCode());        }      };      companyTreeFieldConditionItem.setValueByCode((String) defaultValue);      return companyTreeFieldConditionItem;    } else if (id.equals(ConditionFieldConstants.PROJECT_CODE)) {      if (type == null || type.equals(BillElement.TREE_RENDER)) {        ProjectTreeFieldConditionItem projectTreeFieldConditionItem = new ProjectTreeFieldConditionItem(name,        numLimCompoId) {          public void putToElementConditionDto(ElementConditionDto element) {            Project project = (Project) getValue();            element.setProjectCode(project == null ? null : project.getCode());          }        };        return projectTreeFieldConditionItem;      } else {        return new ProjectTableSelectFieldConditionItem(name, numLimCompoId) {          public void putToElementConditionDto(ElementConditionDto element) {            Project project = (Project) getValue();            element.setProjectCode(project == null ? null : project.getCode());          }        };      }    } else if (id.equals(ConditionFieldConstants.PROJECT_BALANCE_CODE)) {      return new ProjectBalanceTableSelectFieldConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          Project project = (Project) getValue();          element.setProjectCode(project == null ? null : project.getCode());        }      };    } else if (id.equals(ConditionFieldConstants.ORIGIN_CODE)) {      if (type == null || BillElement.COMBOBOX_RENDER.equals(type)) {        OriginComboboxConditionItem item = new OriginComboboxConditionItem(name) {          public void putToElementConditionDto(ElementConditionDto element) {            Origin origin = (Origin) getValue();            element.setOriginCode(origin == null ? null : origin.getCode());          }        };        return item;      } else if (BillElement.TREE_RENDER.equals(type)) {        OriginTreeSelectFieldConditionItem item = new OriginTreeSelectFieldConditionItem(name) {          public void putToElementConditionDto(ElementConditionDto element) {            Origin origin = (Origin) getValue();            element.setOriginCode(origin == null ? null : origin.getCode());          }        };        return item;      } else {        return new OriginTableSelectFieldConditionItem(name) {          public void putToElementConditionDto(ElementConditionDto element) {            Origin origin = (Origin) getValue();            element.setOriginCode(origin == null ? null : origin.getCode());          }        };      }    } else if (id.equals(ConditionFieldConstants.DP_ORIGIN_CODE)) {      if (BillElement.COMBOBOX_RENDER.equals(type)) {        OriginComboboxConditionItem item = new OriginComboboxConditionItem(name,        GkDataRuleConstants.DP_ORIGIN) {          public void putToElementConditionDto(ElementConditionDto element) {            Origin origin = (Origin) getValue();            element.setOriginCode(origin == null ? null : origin.getCode());          }        };        return item;      } else if (BillElement.TREE_RENDER.equals(type)) {        OriginTreeSelectFieldConditionItem item = new OriginTreeSelectFieldConditionItem(name,        GkDataRuleConstants.DP_ORIGIN) {          public void putToElementConditionDto(ElementConditionDto element) {            Origin origin = (Origin) getValue();            element.setOriginCode(origin == null ? null : origin.getCode());          }        };        return item;      } else {        return new OriginTableSelectFieldConditionItem(name, GkDataRuleConstants.DP_ORIGIN) {          public void putToElementConditionDto(ElementConditionDto element) {            Origin origin = (Origin) getValue();            element.setOriginCode(origin == null ? null : origin.getCode());          }        };      }    } else if (id.equals(ConditionFieldConstants.MANAGE_CODE)) {      if (type == null || type.equals(BillElement.COMBOBOX_RENDER)) {        ManageComboboxConditionItem manageComboboxConditionItem = new ManageComboboxConditionItem(name) {          public void putToElementConditionDto(ElementConditionDto element) {            Manage manage = (Manage) getValue();            element.setManageCode(manage == null ? null : manage.getCode());          }        };        return manageComboboxConditionItem;      } else {        return new ManageTableSelectFieldConditionItem(name) {          public void putToElementConditionDto(ElementConditionDto element) {            Manage manage = (Manage) getValue();            element.setManageCode(manage == null ? null : manage.getCode());          }        };      }    } else if (id.equals(ConditionFieldConstants.DP_MANAGE_CODE)) {      if (type == null || type.equals(BillElement.COMBOBOX_RENDER)) {        ManageComboboxConditionItem manageComboboxConditionItem = new ManageComboboxConditionItem(name,        GkDataRuleConstants.DP_MANAGE) {          public void putToElementConditionDto(ElementConditionDto element) {            Manage manage = (Manage) getValue();            element.setManageCode(manage == null ? null : manage.getCode());          }        };        return manageComboboxConditionItem;      } else {        return new ManageTableSelectFieldConditionItem(name, GkDataRuleConstants.DP_MANAGE) {          public void putToElementConditionDto(ElementConditionDto element) {            Manage manage = (Manage) getValue();            element.setManageCode(manage == null ? null : manage.getCode());          }        };      }    }    else if (id.equals(ConditionFieldConstants.PAYTYPE_CODE)) {      PayTypeComboboxConditionItem payTypeComboboxConditionItem = new PayTypeComboboxConditionItem(name,      defaultValue) {        public void putToElementConditionDto(ElementConditionDto element) {          Paytype payType = (Paytype) getValue();          element.setPaytypeCode(payType == null ? null : payType.getCode());        }      };      return payTypeComboboxConditionItem;    } else if (id.equals(ConditionFieldConstants.DP_PAYTYPE_CODE)) {      PayTypeComboboxConditionItem payTypeComboboxConditionItem = new PayTypeComboboxConditionItem(name,      GkDataRuleConstants.DP_PAYTYPE) {        public void putToElementConditionDto(ElementConditionDto element) {          Paytype payType = (Paytype) getValue();          element.setPaytypeCode(payType == null ? null : payType.getCode());        }      };      return payTypeComboboxConditionItem;    } else if (id.equals(ConditionFieldConstants.IS_CREATE_VOU)) {      YesNoAllComboBoxConditionItem item = new YesNoAllComboBoxConditionItem(name, defaultValue);      return item;    } else if (id.equals(ConditionFieldConstants.CREATE_TYPE)) {      CreateTypeComboBoxConditionItem item = new CreateTypeComboBoxConditionItem(name);      return item;    } else if (id.equals(ConditionFieldConstants.ORG_CODE)) {      OrgComboBoxConditionItem orgComboBoxConditionItem = new OrgComboBoxConditionItem(name, numLimCompoId) {        public void putToElementConditionDto(ElementConditionDto element) {          Org org = (Org) getValue();          element.setOrgCode(org == null ? null : org.getCode());        }      };      return orgComboBoxConditionItem;    } else if (id.equals(ConditionFieldConstants.INCEPTDOC_CODE)) {      return new InceptDocTableSelectFieldConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          InceptDoc inceptDoc = (InceptDoc) getValue();          element.setInceptDocCode(inceptDoc == null ? null : inceptDoc.getCode());        }      };    } else if (id.equals(ConditionFieldConstants.SENDDOC_CODE)) {      return new SendDocTableSelectFieldConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          SendDoc sendDoc = (SendDoc) getValue();          element.setSendDocCode(sendDoc == null ? null : sendDoc.getCode());        }      };    } else if (id.equals(ConditionFieldConstants.B_ACC_CODE)) {      return new BAccTreeSelectFieldConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          BAcc bAcc = (BAcc) getValue();          element.setBaccCode(bAcc == null ? null : bAcc.getCode());        }      };    } else if (id.equals(ConditionFieldConstants.OUTLAY_CODE)) {      return new OutlayTreeSelectFieldConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          Outlay outlay = (Outlay) getValue();          element.setOutlayCode(outlay == null ? null : outlay.getCode());        }      };    } else if (id.equals(ConditionFieldConstants.PAYOUT_CODE)) {      if (type == null || type.equals(BillElement.COMBOBOX_RENDER)) {        PayoutComboBoxConditionItem payoutComboBoxConditionItem = new PayoutComboBoxConditionItem(name) {          public void putToElementConditionDto(ElementConditionDto element) {            Payout payout = (Payout) getValue();            element.setPayoutCode(payout == null ? null : payout.getCode());          }        };        return payoutComboBoxConditionItem;      } else {        return new PayoutTableSelectFieldConditionItem(name) {          public void putToElementConditionDto(ElementConditionDto element) {            Payout payout = (Payout) getValue();            element.setPayoutCode(payout == null ? null : payout.getCode());          }        };      }    } else if (id.equals(ConditionFieldConstants.PROJECT_TYPE_CODE)) {      if (type == null || type.equals(BillElement.COMBOBOX_RENDER)) {        ProjectTypeComboBoxConditionItem projectTypeComboBoxConditionItem = new ProjectTypeComboBoxConditionItem(        name) {          public void putToElementConditionDto(ElementConditionDto element) {            ProjectType projectType = (ProjectType) getValue();            element.setProjectTypeCode(projectType == null ? null : projectType.getCode());          }        };        return projectTypeComboBoxConditionItem;      } else {        return new ProjectTypeTableSelectFieldConditionItem(name) {          public void putToElementConditionDto(ElementConditionDto element) {            ProjectType projectType = (ProjectType) getValue();            element.setProjectTypeCode(projectType == null ? null : projectType.getCode());          }        };      }    } else if (id.equals(ConditionFieldConstants.PROC_DATE)) {      String startDateDefaultValue = StringTools.getDateFormat(WorkEnv.getInstance().getTransDate());      return new DateSearchConditionItem(name, defaultValue == null ? startDateDefaultValue : defaultValue      .toString()) {        public void putToElementConditionDto(ElementConditionDto element) {          SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");          if (getDate() != null) {            element.setTransDate(format.format(getDate()));          } else {            element.setTransDate(null);          }        }      };    } else if (id.equals(ConditionFieldConstants.AGENT_BANK)) {      return new BbAgentBankConditionItem(name, null) {        public void putToElementConditionDto(ElementConditionDto element) {          element.setBankCode((String) getValue());        }      };    } else if (id.equals(ConditionFieldConstants.OPERATION_TYPE_CODE)) {      return new OperationTypeConditionItem(name, null) {        public void putToElementConditionDto(ElementConditionDto element) {          element.setOperationTypeCode((String) getValue());        }      };    } else if (id.equals(ConditionFieldConstants.AM_OPERATION_TYPE_CODE)) {      return new OperationTypeConditionItem(name, "AM") {        public void putToElementConditionDto(ElementConditionDto element) {          element.setOperationTypeCode((String) getValue());        }      };    } else if (id.equals(ConditionFieldConstants.CP_OPERATION_TYPE_CODE)) {      return new OperationTypeConditionItem(name, "CP") {        public void putToElementConditionDto(ElementConditionDto element) {          element.setOperationTypeCode((String) getValue());        }      };    } else if (id.equals(ConditionFieldConstants.CP_ADJUST_CODE)) {      return new BbAdjustCodeConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          String code = (String) getValue();          if ("100".equals(code)) {            code = "'101', '102'";          }          if ("200".equals(code)) {            code = "'201', '202'";          }          element.setAdjustCode(code);        }      };    } else if (id.equals(ConditionFieldConstants.A_STATUS_CODE)) {      return new BbAstatusCodeConditionItem(name, defaultValue) {        public void putToElementConditionDto(ElementConditionDto element) {          String code = (String) getValue();          element.setAstatusCode(code);        }      };    } else if (id.equals(ConditionFieldConstants.BILL_TYPE)) {      return new TzdBillTypeComboboxConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setBillType(asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.DEAL_STATE)) {      return new CpDealStateComboboxConditionItem(name, defaultValue) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setDealState(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.SUM_DEAL_STATE)) {      return new AmSumDealStateComboboxConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setDealState(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.SUM_STATE)) {      return new CpDvDpComboboxConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          if (asVal == null) {            element.setSumCpVoucherId(null);          } else if (asVal.getValId().equals("0")) {            element.setSumCpVoucherId("0");          } else if (asVal.getValId().equals("1")) {            element.setSumCpVoucherId("1");          }        }      };    } else if (id.equals(ConditionFieldConstants.BAL_MODE_CODE)) {      return new BalModeComboboxConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          BalMode balMode = (BalMode) getValue();          element.setBalModeCode(balMode == null ? null : balMode.getBalModeCode());        }      };    } else if (id.equals(ConditionFieldConstants.BANKNODE_CODE)) {      return new BankNodeSearchConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          String code = (String) getValue();          element.setBanknodeCode(code);        }      };    } else if (id.equals(ConditionFieldConstants.CLEAR_BANK_CODE)) {      return new ClearBankSearchConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          String code = (String) getValue();          element.setClearBankCode(code);        }      };    } else if (id.equals(ConditionFieldConstants.PAY_BANK_CODE)) {      return new PayBankSearchConditionItem(name);    } else if (id.equals(ConditionFieldConstants.PLAN_A_STATUS_CODE)) {      return new PlanStatusSearchConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          String code = (String) getValue();          element.setStatus(code);        }      };    } else if (id.equals(ConditionFieldConstants.FUND_ATTRIBUTE)) {      if (type == null || !type.equals(BillElement.COMBOBOX_RENDER)) {        FundForBiXJTableSelectFieldConditionItem fundComboBoxConditionItem = new FundForBiXJTableSelectFieldConditionItem(        name) {          public void putToElementConditionDto(ElementConditionDto element) {            Fund fund = (com.ufgov.zc.common.commonbiz.model.Fund) getValue();            element.setFundAttribute(fund == null ? null : fund.getCode());          }        };        return fundComboBoxConditionItem;      }    } else if (id.equals(ConditionFieldConstants.KIND)) {      if (type == null || !type.equals(BillElement.COMBOBOX_RENDER)) {        ManageForBiXJTableSelectFieldConditionItem manageComboboxConditionItem = new ManageForBiXJTableSelectFieldConditionItem(        name) {          public void putToElementConditionDto(ElementConditionDto element) {            Manage manage = (Manage) getValue();            element.setKind(manage == null ? null : manage.getCode());          }        };        return manageComboboxConditionItem;      }    } else if (id.equals(ConditionFieldConstants.D_ATTR1)) {      if ((BillElement.GRID_RENDER).equals(type)) {        return new DAttrComboboxConditionItem(name, DAttr.D_ATTR1_TYPE, numLimCompoId);      } else if ((BillElement.TREE_RENDER).equals(type)) {        return new DAttrTreeSelectFieldConditionItem(name, DAttr.D_ATTR1_TYPE, numLimCompoId);      } else {        return new DAttrTableSelectFieldConditionItem(name, DAttr.D_ATTR1_TYPE, numLimCompoId);      }    } else if (id.equals(ConditionFieldConstants.D_ATTR2)) {      if ((BillElement.GRID_RENDER).equals(type)) {        return new DAttrComboboxConditionItem(name, DAttr.D_ATTR2_TYPE, numLimCompoId);      } else if ((BillElement.TREE_RENDER).equals(type)) {        return new DAttrTreeSelectFieldConditionItem(name, DAttr.D_ATTR2_TYPE, numLimCompoId);      } else {        return new DAttrTableSelectFieldConditionItem(name, DAttr.D_ATTR2_TYPE, numLimCompoId);      }    } else if (id.equals(ConditionFieldConstants.D_ATTR3)) {      if ((BillElement.GRID_RENDER).equals(type)) {        return new DAttrComboboxConditionItem(name, DAttr.D_ATTR3_TYPE, numLimCompoId);      } else if ((BillElement.TREE_RENDER).equals(type)) {        return new DAttrTreeSelectFieldConditionItem(name, DAttr.D_ATTR3_TYPE, numLimCompoId);      } else {        return new DAttrTableSelectFieldConditionItem(name, DAttr.D_ATTR3_TYPE, numLimCompoId);      }    } else if (id.equals(ConditionFieldConstants.D_ATTR4)) {      if ((BillElement.GRID_RENDER).equals(type)) {        return new DAttrComboboxConditionItem(name, DAttr.D_ATTR4_TYPE, numLimCompoId);      } else if ((BillElement.TREE_RENDER).equals(type)) {        return new DAttrTreeSelectFieldConditionItem(name, DAttr.D_ATTR4_TYPE, numLimCompoId);      } else {        return new DAttrTableSelectFieldConditionItem(name, DAttr.D_ATTR4_TYPE, numLimCompoId);      }    } else if (id.equals(ConditionFieldConstants.D_ATTR5)) {      if ((BillElement.GRID_RENDER).equals(type)) {        return new DAttrComboboxConditionItem(name, DAttr.D_ATTR5_TYPE, numLimCompoId);      } else if ((BillElement.TREE_RENDER).equals(type)) {        return new DAttrTreeSelectFieldConditionItem(name, DAttr.D_ATTR5_TYPE, numLimCompoId);      } else {        return new DAttrTableSelectFieldConditionItem(name, DAttr.D_ATTR5_TYPE, numLimCompoId);      }    } else if (id.equals(ConditionFieldConstants.PRINT_ESTATE)) {      return new YesOrNoPrintComboBoxConditionItem(name, defaultValue);    } else if (id.equals(ConditionFieldConstants.BANK_TYPE)) {      // 暂时桐乡用      BankTypeConditionItem item = new BankTypeConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          String bankType = (String) this.getValue();          element.setBankType(bankType);        }      };      return item;    } else if (id.equals(ConditionFieldConstants.OPERATE_TYPE)) {      BiOperateTypeComboboxConditionItem item = new BiOperateTypeComboboxConditionItem(name);      return item;    } else if (id.equals(ConditionFieldConstants.AM_EXPORT_TIMES)) {      SimpleComboBoxConditionItem exportTimes = new SimpleComboBoxConditionItem("导出状态", Arrays      .asList(new String[] { "全部", "未导出", "已导出" }), null) {        public void putToElementConditionDto(ElementConditionDto element) {          int selectedIndex = this.getSelectIndex();          switch (selectedIndex) {          case (0):            element.setExportTimes(null);            break;          default:            element.setExportTimes(new Integer(selectedIndex));          }        }      };      return exportTimes;    } else if (id.equals(ConditionFieldConstants.AM_EXPORT_TIPS_TIMES)) {      SimpleComboBoxConditionItem exportTimes = new SimpleComboBoxConditionItem("TIPS导出状态", Arrays      .asList(new String[] { "全部", "未导出", "已导出" }), null) {        public void putToElementConditionDto(ElementConditionDto element) {          int selectedIndex = this.getSelectIndex();          switch (selectedIndex) {          case (0):            element.setExportTipsTimes(null);            break;          default:            element.setExportTipsTimes(new Integer(selectedIndex));          }        }      };      return exportTimes;    } else if (id.equals(ConditionFieldConstants.IS_GEN_BALANCE)) {      YesNoAllComboBoxConditionItem item = new YesNoAllComboBoxConditionItem(name, defaultValue) {        public void putToElementConditionDto(ElementConditionDto element) {          String isGenBalance = getValue().toString();          if (isGenBalance.equals("0")) {            element.setIsGenBalance("ALL");          } else if (isGenBalance.equals("1")) {            element.setIsGenBalance("Y");          } else if (isGenBalance.equals("2")) {            element.setIsGenBalance("N");          }        }      };      return item;    } else if (id.equals(ConditionFieldConstants.ORG_MONEY)) {      MoneyConditionItem item = new MoneyConditionItem(name);      return item;    } else if (id.equals(ConditionFieldConstants.BALANCE_STATUS)) {      BalanceStatusConditionItem item = new BalanceStatusConditionItem(name, defaultValue);      return item;    } else if (id.equals(ConditionFieldConstants.DATE)) {      String payDateDefaultValue = StringTools.getDateFormat(WorkEnv.getInstance().getTransDate());      return new DateConditionItem(name, defaultValue == null ? payDateDefaultValue : defaultValue.toString());    } else if (id.equals(ConditionFieldConstants.BANK_DATE)) {      String payDateDefaultValue = null;// StringTools.getDateFormat(WorkEnv.getInstance().getTransDate());      return new DateSearchConditionItem(name, defaultValue == null ? payDateDefaultValue : defaultValue      .toString()) {        public void putToElementConditionDto(ElementConditionDto element) {          element.setBankDate(getDate());        }      };    } else if (id.equals(ConditionFieldConstants.GWK_STATUS)) {      return new CpAdjustComboboxConditionItem(name, "GWK_STATUS_CODE") {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setStatus(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.GWK_BANK)) {      return new BbAgentBankConditionItem(name, null, "0") {        public void putToElementConditionDto(ElementConditionDto element) {          element.setReceBankCode((String) getValue());        }      };    } else if (id.equals(ConditionFieldConstants.GWK_TRADE_DATE)) {      String payDateDefaultValue = null;      return new DateSearchConditionItem(name, defaultValue == null ? payDateDefaultValue : defaultValue      .toString()) {        public void putToElementConditionDto(ElementConditionDto element) {          element.setTradeDate(getDate());        }      };    } else if (id.equals(ConditionFieldConstants.GWK_TRADE_MONEY)) {      MoneyConditionItem item = new MoneyConditionItem(name);      return item;    } else if (id.equals(ConditionFieldConstants.BANK_CODE)) {      return new BbAgentBankConditionItem(name, null, "0") {        public void putToElementConditionDto(ElementConditionDto element) {          element.setBankCode((String) getValue());        }      };    } else if (id.equals(ConditionFieldConstants.CONTENT)) {      return new CpAdjustComboboxConditionItem(name, "VS_GWK_CONTENT") {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setContent(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.BANK_STARTDATE)) {      String startDateDefaultValue = null;      return new DateSearchConditionItem(name, defaultValue == null ? startDateDefaultValue : defaultValue      .toString()) {        public void putToElementConditionDto(ElementConditionDto element) {          element.setBankStartDate(getDate());        }      };    } else if (id.equals(ConditionFieldConstants.BANK_ENDDATE)) {      String endDateDefaultValue = null;// StringTools.getDateFormat(WorkEnv.getInstance().getTransDate());      return new DateSearchConditionItem(name, defaultValue == null ? endDateDefaultValue : defaultValue      .toString()) {        public void putToElementConditionDto(ElementConditionDto element) {          element.setBankEndDate(getDate());        }      };    } else if (id.equals(ConditionFieldConstants.PAY_STARTDATE)) {      String startDateDefaultValue = null;      return new DateSearchConditionItem(name, defaultValue == null ? startDateDefaultValue : defaultValue      .toString()) {        public void putToElementConditionDto(ElementConditionDto element) {          element.setPayStartDate(getDate());        }      };    } else if (id.equals(ConditionFieldConstants.PAY_ENDDATE)) {      String endDateDefaultValue = null;// StringTools.getDateFormat(WorkEnv.getInstance().getTransDate());      return new DateSearchConditionItem(name, defaultValue == null ? endDateDefaultValue : defaultValue      .toString()) {        public void putToElementConditionDto(ElementConditionDto element) {          element.setPayEndDate(getDate());        }      };    } else if (id.equals(ConditionFieldConstants.GWK_CONSUME_MONEY)) {      MoneyConditionItem item = new MoneyConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          element.setCurMoney(selectField.getMoney());          element.setOrgMoneyOperator((String) operatorBox.getSelectedItem());        }      };      return item;    } else if (id.equals(ConditionFieldConstants.GWK_CO_TRADE_MONEY)) {      MoneyConditionItem item = new MoneyConditionItem(name) {        public void putToElementConditionDto(ElementConditionDto element) {          element.setOrgMoney(selectField.getMoney());          element.setOrgTradeMoneyOperator((String) operatorBox.getSelectedItem());        }      };      return item;    } else if (id.equals(ConditionFieldConstants.BANK_STATUS)) {      return new CpAdjustComboboxConditionItem(name, "VS_GWK_BANK_STATUS") {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setBankStatus(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.YES_NO_ALL)) {      YesNoAllComboBoxConditionItem item = new YesNoAllComboBoxConditionItem(name, defaultValue) {        public void putToElementConditionDto(ElementConditionDto element) {          String yesNoAll = getValue().toString();          if (yesNoAll.equals("0")) {            element.setYesNoAll("ALL");          } else if (yesNoAll.equals("1")) {            element.setYesNoAll("Y");          } else if (yesNoAll.equals("2")) {            element.setYesNoAll("N");          }        }      };      return item;    } else if (id.equals(ConditionFieldConstants.CLEAR_DATE)) {      String payDateDefaultValue = null;// StringTools.getDateFormat(WorkEnv.getInstance().getTransDate());      return new DateSearchConditionItem(name, defaultValue == null ? payDateDefaultValue : defaultValue      .toString()) {        public void putToElementConditionDto(ElementConditionDto element) {          element.setClearDate(getDate());        }      };    } else if (id.equals(ConditionFieldConstants.EMP_CO_CODE)) {      return new CompanyComboboxConditionItem(name, GkDataRuleConstants.DW_ACCOUNT_CHECKING_QUERY_RULEID) {        public void putToElementConditionDto(ElementConditionDto element) {          Company company = (Company) getValue();          element.setEmpCoCode(company == null ? null : company.getCode());        }      };    } else if (id.equals(ConditionFieldConstants.DP_AN_STATUS)) {      return new CpAdjustComboboxConditionItem(name, "VS_DP_WF_STATUS") {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setAnStatus(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.DATA_TYPE)) {      return new AsValComboboxConditionItem(name, "DATA_TYPE_CODE") {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setAnStatus(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.ZC_VS_PROTOCOL_STATUS)) {      return new AsValComboboxConditionItem2(name, ConditionFieldConstants.ZC_VS_PROTOCOL_STATUS) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setBillStatus(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.ZC_VS_REQUIREMENT_STATUS)) {      return new AsValComboboxConditionItem2(name, ConditionFieldConstants.ZC_VS_REQUIREMENT_STATUS) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setBillStatus(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.ZC_VS_PROJ_STATUS)) {      return new AsValComboboxConditionItem2(name, ConditionFieldConstants.ZC_VS_PROJ_STATUS) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setBillStatus(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.ZC_VS_MAKE_STATUS)) {      return new AsValComboboxConditionItem2(name, ConditionFieldConstants.ZC_VS_MAKE_STATUS) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setBillStatus(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.ZC_VS_ENTRUST_STATUS)) {      return new AsValComboboxConditionItem2(name, ConditionFieldConstants.ZC_VS_ENTRUST_STATUS) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setBillStatus(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.ZC_VS_HT_STATUS)) {      return new AsValComboboxConditionItem2(name, ConditionFieldConstants.ZC_VS_HT_STATUS) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setBillStatus(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.ZC_VS_OPEN_BID_STATUS)) {      return new AsValComboboxConditionItem2(name, ConditionFieldConstants.ZC_VS_OPEN_BID_STATUS) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setBillStatus(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.ZC_VS_YN)) {      return new AsValComboboxConditionItem2(name, ConditionFieldConstants.ZC_VS_YN) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setBillStatus(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.ZC_VS_GUARANTEE_STATUS)) {      return new AsValComboboxConditionItem2(name, ConditionFieldConstants.ZC_VS_GUARANTEE_STATUS) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setBillStatus(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.ZC_VS_SIGNUP_MANNER)) {      return new AsValComboboxConditionItem2(name, ConditionFieldConstants.ZC_VS_SIGNUP_MANNER) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setBillStatus(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.ZC_VS_BULLETIN_MOLD_TYPE)) {      return new AsValComboboxConditionItem2(name, ConditionFieldConstants.ZC_VS_BULLETIN_MOLD_TYPE) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setBulletinMoldType(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.ZC_VS_BW_PROJECT_TYPE)) {      return new AsValComboboxConditionItem2(name, ConditionFieldConstants.ZC_VS_BW_PROJECT_TYPE) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setProjectType(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.ZC_VS_WORKPLAN_TYPE)) {      return new AsValComboboxConditionItem2(name, ConditionFieldConstants.ZC_VS_WORKPLAN_TYPE) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setType(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.ZC_VS_WORKPLAN_STATUS)) {      return new AsValComboboxConditionItem2(name, ConditionFieldConstants.ZC_VS_WORKPLAN_STATUS) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setStatus(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.ZC_VS_WORK_DYNAMIC_STATUS)) {      return new AsValComboboxConditionItem2(name, ConditionFieldConstants.ZC_VS_WORK_DYNAMIC_STATUS) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setStatus(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.ZC_SN)) {      return new ZcEbEntrustSearchConditonItem(name);    } else if (id.equals(ConditionFieldConstants.ZC_EB_PROJECT)) {      return new ZcEbProjectSearchConditionItem(name);    } else if (id.equals(ConditionFieldConstants.PACK_CODE)) {      return new ZcEbPackSearchConditionItem(name);    }    else if (id.equals(ConditionFieldConstants.ZC_P_PRO_MAKE)) {      return new ZcEbProMakeSearchConditionItem(name);    } else if (id.equals(ConditionFieldConstants.ZC_B_BRAND)) {      return new ZcBrandSearchConditionItem(name);    } else if (id.equals(ConditionFieldConstants.TEXT_0)) {      return new TextConditionItem(name, "zcText0");    } else if (id.equals(ConditionFieldConstants.TEXT_1)) {      return new TextConditionItem(name, "zcText1");    } else if (id.equals(ConditionFieldConstants.TEXT_2)) {      return new TextConditionItem(name, "zcText2");    } else if (id.equals(ConditionFieldConstants.TEXT_3)) {      return new TextConditionItem(name, "zcText3");    } else if (id.equals(ConditionFieldConstants.TEXT_4)) {      return new TextConditionItem(name, "zcText4");    }else if (id.equals(ConditionFieldConstants.ENTRUST_CODE)) {      SfEntrustSearchConditionItem item=new SfEntrustSearchConditionItem(name);      if(defaultValue!=null){        item.setEntrust((SfEntrust) defaultValue);      }      return item;    } else if (id.equals(ConditionFieldConstants.ND)) {      YearComboboxConditionItem item = new YearComboboxConditionItem(name,true,true) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setNd(asVal == null ? 0 : Integer.parseInt(asVal.getValId()));        }      };      if (defaultValue != null) {        item.setValueByCode(defaultValue.toString());      }      return item;    } else if (id.equals(ConditionFieldConstants.DATA_EXCHANGE)) {      return new AsValComboboxConditionItem2(name, ConditionFieldConstants.DATA_EXCHANGE) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setCompoId(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals("BIDDING_ROOM")) {      AsValComboboxConditionItem2 item = new AsValComboboxConditionItem2(name, "VS_ZC_OPEN_ADDRESS") {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setBiddingRoom(asVal.getVal());        }      };      Dimension d = new Dimension(400, 20);      item.setPreferredSize(d);      item.setMinimumSize(d);      return item;    } else if (id.equals(ConditionFieldConstants.ZC_PIFU_CGFS)) {      return new ZcCommonComboBoxConditionItem(name, ZcValSetConstants.VS_ZC_EB_PUR_TYPE, null) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setZcPifuCgfs(asVal == null ? null : asVal.getValId());        }      };    } else if (id.equals(ConditionFieldConstants.SUPERINTENDENT_ORG)) {      return new ZcCommonComboBoxConditionItem(name, "AsVal.getSuperintendentOrg", null, true) {        public void putToElementConditionDto(ElementConditionDto element) {          AsVal asVal = (AsVal) getValue();          element.setOrgCode(asVal == null ? null : asVal.getValId());        }      };    }    throw new IllegalArgumentException("无效的id :" + id);  }}