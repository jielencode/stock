package com.ufgov.zc.client.component.ui.fieldeditor;import java.awt.event.KeyAdapter;import java.awt.event.KeyEvent;import java.math.BigDecimal;import javax.swing.JComponent;import javax.swing.JTextField;import com.ufgov.zc.client.component.MoneyDocument;import com.ufgov.zc.common.bi.model.BiApply;import com.ufgov.zc.common.commonbiz.model.BaseBill;public class BiCurMoneyTextFieldEditor extends AbstractFieldEditor {  private JTextField field;  private boolean allowMinus = true;  public BiCurMoneyTextFieldEditor(String name) {    super(name);  }  /**   * @param allowMinus 金额是否可为负数   * @param name   */  public BiCurMoneyTextFieldEditor(boolean allowMinus, String name) {    super(name);    this.allowMinus = allowMinus;  }  /**   * 构造函数   * @param name   * @param isEditable 是否只读   */  public BiCurMoneyTextFieldEditor(String name, boolean isEditable) {    super(name);    this.field.setEditable(isEditable);  }  /**   * 构造函数   * @param name   * @param isEditable 是否只读   */  public BiCurMoneyTextFieldEditor(String name, boolean isEditable, boolean allowMinus) {    super(name);    this.field.setEditable(isEditable);    this.allowMinus = allowMinus;  }  public Object getValue() {    return field.getText();  }  public void setValue(Object value) { //在选择的上面的行发生改变的时候所触发的事件    if (value == null) {      field.setText(null);    } else if (value instanceof BiApply) {      BiApply bill = (BiApply) value;      if (bill.getBiCurMoney() != null) {        field.setText(bill.getBiCurMoney().toPlainString());      } else {        field.setText(null);      }    }  }  protected JComponent createEditorComponent() { //生成下面的控件，并将改变的内容同步到对象中    field = new JTextField();    field.setDocument(new MoneyDocument(allowMinus));    field.addKeyListener(new KeyAdapter() {      public void keyReleased(KeyEvent e) {        syncEditObject();      }    });    return field;  }  protected void syncEditObject() {    if (getEditObject() instanceof BiApply) {      BiApply bill = (BiApply) getEditObject();      if (bill != null) {        String fieldValue = field.getText();        if (fieldValue != null && !"".equals(fieldValue)) {          bill.setBiCurMoney(BigDecimal.valueOf(Double.valueOf(fieldValue)));        } else {          bill.setBiCurMoney(null);        }      }    }    this.fireEditSynced();  }  @Override  public void setFieldEditorCode() {    this.FieldEditorCode = FieldEditorCodeConstants.CUR_MONEY;  }}