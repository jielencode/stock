package com.ufgov.zc.client.component.ui.fieldeditor;import javax.swing.JComponent;import com.ufgov.zc.client.component.element.DAttrTableSelectField;import com.ufgov.zc.client.component.event.ValueChangeEvent;import com.ufgov.zc.client.component.event.ValueChangeListener;import com.ufgov.zc.common.commonbiz.model.BaseBill;import com.ufgov.zc.common.commonbiz.model.DAttr;public class DAttrTableSelectFieldEditor extends AbstractFieldEditor {  private static final long serialVersionUID = -7677429808342983951L;  private DAttrTableSelectField editField;  private String dattrType;  private String compoId;  public DAttrTableSelectFieldEditor(String name) {    super(name);  }  public DAttrTableSelectFieldEditor(String name, String dattrType) {    this.dattrType = dattrType;    init(name);  }  public DAttrTableSelectFieldEditor(String name, String dattrType, String compoId) {    this.dattrType = dattrType;    this.compoId = compoId;    init(name);  }  public DAttrTableSelectFieldEditor(String name, boolean isEnabled) {    init(name);    editField.setEnabled(isEnabled);    editField.setEditable(isEnabled);  }  public String getDattrType() {    return dattrType;  };  protected JComponent createEditorComponent() {    dattrType = getDattrType();    editField = new DAttrTableSelectField(20, dattrType, compoId);    editField.addValueChangeListener(new ValueChangeListener() {      public void valueChanged(ValueChangeEvent e) {        syncEditObject();      }    });    return editField;  }  public void setPrefix(String prefix) {    editField.setPrefix(prefix);  }  public void setCtrlLevelNum(int ctrlLevelNum) {    editField.setCtrlLevelNum(ctrlLevelNum);  }  public void setRandomEdit(boolean randomEdit) {    editField.randomEdit = randomEdit;  }  /**   * 同步到对象   */  protected void syncEditObject() {    if (getEditObject() instanceof BaseBill) {      BaseBill bill = (BaseBill) getEditObject();      if (bill != null) {        DAttr dAttr = editField.getDAttr();        String dAttrCode = dAttr == null ? null : dAttr.getCode();        if ("01".equals(dattrType)) {          bill.setDattr1(dAttrCode);        } else if ("02".equals(dattrType)) {          bill.setDattr2(dAttrCode);        } else if ("03".equals(dattrType)) {          bill.setDattr3(dAttrCode);        } else if ("04".equals(dattrType)) {          bill.setDattr4(dAttrCode);        } else if ("05".equals(dattrType)) {          bill.setDattr5(dAttrCode);        }      }    }    this.fireEditSynced();  }  public Object getValue() {    return editField.getDAttr();  }  public void setValue(Object value) {    if (value == null) {      editField.setValue(null);    } else if (value instanceof BaseBill) {      BaseBill bill = (BaseBill) value;      String code = null;      if ("01".equals(dattrType)) {        code = bill.getDattr1();      } else if ("02".equals(dattrType)) {        code = bill.getDattr2();      } else if ("03".equals(dattrType)) {        code = bill.getDattr3();      } else if ("04".equals(dattrType)) {        code = bill.getDattr4();      } else if ("05".equals(dattrType)) {        code = bill.getDattr5();      }      editField.setValueByCode(code);    }  }  @Override  public void setFieldEditorCode() {    if ("01".equals(dattrType)) {      this.FieldEditorCode = FieldEditorCodeConstants.D_ATTR1;    } else if ("02".equals(dattrType)) {      this.FieldEditorCode = FieldEditorCodeConstants.D_ATTR2;    } else if ("03".equals(dattrType)) {      this.FieldEditorCode = FieldEditorCodeConstants.D_ATTR3;    } else if ("04".equals(dattrType)) {      this.FieldEditorCode = FieldEditorCodeConstants.D_ATTR4;    } else if ("05".equals(dattrType)) {      this.FieldEditorCode = FieldEditorCodeConstants.D_ATTR5;    }  }}