/**   * @(#) project: zc_xa* @(#) file: ZcBCatalogueCellEditor.java* * Copyright 2010 UFGOV, Inc. All rights reserved.* UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.* */package com.ufgov.zc.client.component.table.celleditor.zc;import java.awt.Component;import javax.swing.AbstractCellEditor;import javax.swing.JTable;import javax.swing.table.TableCellEditor;import com.ufgov.zc.client.component.event.ValueChangeEvent;import com.ufgov.zc.client.component.event.ValueChangeListener;import com.ufgov.zc.client.component.zc.fieldeditor.zcbcatalogue.ZcBCatalogueTreeSelectField;import com.ufgov.zc.common.zc.model.TreeNodeValueObject;import com.ufgov.zc.common.zc.model.ZcBCatalogueExample;/*** @ClassName: ZcBCatalogueCellEditor* @Description: TODO(这里用一句话描述这个类的作用)* @date: 2010-5-19 下午01:22:41* @version: V1.0 * @since: 1.0* @author: Administrator* @modify: */public class ZcBCatalogueCellEditor extends AbstractCellEditor implements TableCellEditor {  private static final long serialVersionUID = -8949811585869247548L;  private ZcBCatalogueTreeSelectField selectField;  private ZcBCatalogueCellEditor self = this;  public ZcBCatalogueCellEditor() {    selectField = new ZcBCatalogueTreeSelectField();    selectField.addValueChangeListener(new ValueChangeListener() {      public void valueChanged(ValueChangeEvent e) {        self.stopCellEditing();      }    });  }  public ZcBCatalogueCellEditor(boolean selectedTailFlag) {    selectField = new ZcBCatalogueTreeSelectField(selectedTailFlag);    selectField.addValueChangeListener(new ValueChangeListener() {      public void valueChanged(ValueChangeEvent e) {        self.stopCellEditing();      }    });  }  public ZcBCatalogueCellEditor(boolean selectedTailFlag, boolean isXYCatalogue) {    selectField = new ZcBCatalogueTreeSelectField(selectedTailFlag, isXYCatalogue);    selectField.addValueChangeListener(new ValueChangeListener() {      public void valueChanged(ValueChangeEvent e) {        self.stopCellEditing();      }    });  }  public ZcBCatalogueCellEditor(ZcBCatalogueExample example) {    selectField = new ZcBCatalogueTreeSelectField(true, example);    selectField.addValueChangeListener(new ValueChangeListener() {      public void valueChanged(ValueChangeEvent e) {        self.stopCellEditing();      }    });  }  public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {    selectField.setValueByCode((String) value);    return selectField;  }  public Object getCellEditorValue() {    Object obj = selectField.getZcBCatalogue();    if (obj != null) {      return selectField.getZcBCatalogue();    } else {      return new TreeNodeValueObject();    }  }  public ZcBCatalogueTreeSelectField getEditor() {    return this.selectField;  }}