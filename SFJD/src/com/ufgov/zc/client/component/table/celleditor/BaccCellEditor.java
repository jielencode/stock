package com.ufgov.zc.client.component.table.celleditor;import java.awt.Component;import javax.swing.AbstractCellEditor;import javax.swing.JTable;import javax.swing.table.TableCellEditor;import com.ufgov.zc.client.common.AsOptionMeta;import com.ufgov.zc.client.common.BillElementMeta;import com.ufgov.zc.client.component.element.BAccTreeSelectField;import com.ufgov.zc.client.component.event.ValueChangeEvent;import com.ufgov.zc.client.component.event.ValueChangeListener;import com.ufgov.zc.common.commonbiz.model.BAcc;import com.ufgov.zc.common.system.constants.BusinessOptionConstants;import com.ufgov.zc.common.system.util.LevelControlUtil;public class BaccCellEditor extends AbstractCellEditor implements TableCellEditor {  private BAccTreeSelectField baccField = new BAccTreeSelectField();  private BaccCellEditor self = this;  private BillElementMeta preBem = null;  private BillElementMeta curBem = null;  private String optBaccCode = null;  public BaccCellEditor() {    baccField.addValueChangeListener(new ValueChangeListener() {      public void valueChanged(ValueChangeEvent e) {        self.stopCellEditing();      }    });  }  public BaccCellEditor(BillElementMeta preBem, BillElementMeta curBem) {    this.preBem = preBem;    this.curBem = curBem;    BAcc abacc = baccField.getBAcc();    baccField.addValueChangeListener(new ValueChangeListener() {      public void valueChanged(ValueChangeEvent e) {        BAcc bacc = baccField.getBAcc();        if (bacc != null) {          baccField.setPrefix(getPreFixCode(bacc.getCode()));          baccField.setCtrlLevelNum(self.curBem.getCtrlLen("B_ACC_CODE"));          baccField.randomEdit = self.curBem.isElementRandomEdit("B_ACC_CODE");        }        self.stopCellEditing();      }    });  }  public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row,  int column) {    if (value instanceof String) {      baccField.setPrefix(getPreFixCode(value.toString()));      baccField.setCtrlLevelNum(self.curBem.getCtrlLen("B_ACC_CODE"));      baccField.randomEdit = self.curBem.isElementRandomEdit("B_ACC_CODE");      baccField.setValue(null);    } else      baccField.setValue(value);    return baccField;  }  public Object getCellEditorValue() {    Object obj = baccField.getBAcc();    if (obj != null) {      return baccField.getBAcc();    } else {      return baccField.getText();    }  }  /**   *    * @param curBaccCode   * @return   */  private String getPreFixCode(String curBaccCode) {    String preBaccCode = "";    this.optBaccCode = AsOptionMeta.getOptVal(BusinessOptionConstants.OPT_BACC_LEVEL);    if (preBem != null) {      int levelCtrl = preBem.getElementLevelCtrl("B_ACC_CODE");      int ctrLength = LevelControlUtil.getCtrLength(this.optBaccCode, levelCtrl);      if (curBaccCode != null && curBaccCode.length() > ctrLength) {        preBaccCode = curBaccCode.substring(0, ctrLength);      } else if (curBaccCode != null && curBaccCode.length() <= ctrLength) {        preBaccCode = curBaccCode.substring(0, curBaccCode.length());      }    }    return preBaccCode;  }}