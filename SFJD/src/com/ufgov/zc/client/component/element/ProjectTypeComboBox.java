package com.ufgov.zc.client.component.element;import java.awt.BorderLayout;import java.awt.event.ItemEvent;import java.awt.event.ItemListener;import java.awt.event.WindowAdapter;import java.awt.event.WindowEvent;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.swing.JFrame;import javax.swing.JPanel;import com.ufgov.smartclient.component.JComboBoxEx;import com.ufgov.zc.client.datacache.ProjectTypeDataCache;import com.ufgov.zc.common.commonbiz.model.ProjectType;public class ProjectTypeComboBox extends JComboBoxEx {  private List dataList = new ArrayList();  private Map<String, ProjectType> dataMap = new HashMap<String, ProjectType>();  public ProjectTypeComboBox() {    super();    init();  }  private void init() {    dataList = ProjectTypeDataCache.getProjectType();    this.addItem(null);    for (int i = 0; i < dataList.size(); i++) {      ProjectType data = (ProjectType) dataList.get(i);      this.addItem(data);      this.addItemDisplaLable(data, data.getName());      this.dataMap.put(data.getCode(), data);    }    this.addItemListener(new ItemListener() {      public void itemStateChanged(ItemEvent e) {        if (((ProjectType) getSelectedItem()) != null) {          setToolTipText(((ProjectType) e.getItem()).getName());        } else {          setToolTipText(null);        }      }    });  }  public ProjectType getSelectedProjectType() {    return (ProjectType) this.getSelectedItem();  }  public void setSelectedProjectType(ProjectType projectType) {    this.setSelectedItem(projectType);  }  public void setSelectedProjectTypeByCode(String projectTypeCode) {    ProjectType projectType = dataMap.get(projectTypeCode);    this.setSelectedItem(projectType);  }  public static void main(String[] args) {    JFrame f = new JFrame();    ProjectTypeComboBox textField = new ProjectTypeComboBox();    textField.setEditable(false);    textField.setEnabled(false);    textField.setEnabled(true);    JPanel panel = new JPanel();    panel.add(textField);    f.getContentPane().add(panel, BorderLayout.NORTH);    // f.pack();    // SwingUtilities.updateComponentTreeUI(panel);    f.setSize(400, 300);    f.setLocationRelativeTo(null);    f.setVisible(true);    f.addWindowListener(new WindowAdapter() {      public void windowClosing(WindowEvent e) {        System.exit(0);      }    });  }}