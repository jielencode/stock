package com.ufgov.zc.client.component.element;import java.awt.BorderLayout;import java.awt.event.ItemEvent;import java.awt.event.ItemListener;import java.awt.event.WindowAdapter;import java.awt.event.WindowEvent;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.swing.JFrame;import javax.swing.JPanel;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.client.datacache.FundDataCache;import com.ufgov.zc.client.util.NumLimUtil;import com.ufgov.zc.common.commonbiz.model.Fund;import com.ufgov.zc.common.commonbiz.publish.IBaseDataServiceDelegate;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.constants.NumLimConstants;import com.ufgov.zc.common.system.dto.ElementConditionDto;public class FundForBiXJComboBox extends EditCtrlComboBox {  private static final long serialVersionUID = -6925234268525089755L;  private Map<String, Fund> dataMap = new HashMap<String, Fund>();  private boolean firstAddNull = true;  public FundForBiXJComboBox() {    super();    init(null);    initDataBufferList();  }  public FundForBiXJComboBox(String compoId) {    super();    init(compoId);    initDataBufferList();  }  public FundForBiXJComboBox(boolean firstAddNull) {    super();    this.firstAddNull = firstAddNull;    init(null);    initDataBufferList();  }  public FundForBiXJComboBox(boolean firstAddNull, String compoId) {    super();    this.firstAddNull = firstAddNull;    init(compoId);    initDataBufferList();  }  private void init(String compoId) {    this.compoId = compoId;    this.elementCode = "FUND_ATTRIBUTE";    this.addItemListener(new ItemListener() {      public void itemStateChanged(ItemEvent e) {        if (((Fund) getSelectedItem()) != null) {          setToolTipText(((Fund) e.getItem())          .getName());        } else {          setToolTipText(null);        }      }    });  }  private void initDataBufferList() {    int nd = WorkEnv.getInstance().getTransNd();    IBaseDataServiceDelegate baseDataServiceDelegate = (IBaseDataServiceDelegate) ServiceFactory    .create(IBaseDataServiceDelegate.class, "baseDataServiceDelegate");    RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();    ElementConditionDto dto = new ElementConditionDto();    dto.setNd(nd);    //     dataBufferList=FundDataCache.getFund();    //	    dto.setNumLimitStr(    //	       NumLimUtil.getInstance().getNumLimCondByCoType(compoId,NumLimConstants.FWATCH, elementCode));    //	    if(dto.getNumLimitStr()==null){    //	      numLimDataList=dataBufferList;    //	    }else{    numLimDataList = baseDataServiceDelegate.getBiXJFund(dto, requestMeta);    //	    }    for (int i = 0; i < numLimDataList.size(); i++) {      Fund data = (Fund) numLimDataList.get(i);      this.dataMap.put(data.getCode(), data);    }  }  public void initComboBox() {    //	 List dataList =BaseElementDataFilter.doFilter(dataBufferList, randomEdit, prefix, levelCtrl, ctrlLevelNum);    //        dataList = BaseElementDataFilter.doNumLimFilter(dataList, numLimDataList);    List dataList = numLimDataList;    this.removeAllItems();    if (firstAddNull) {      this.addItem(null);    }    for (int i = 0; i < dataList.size(); i++) {      Fund data = (Fund) dataList.get(i);      this.addItem(data);      this.addItemDisplaLable(data, data.getName());    }  }  public Fund getSelectedFund() {    return (Fund) this.getSelectedItem();  }  public void setSelectedFund(Fund fund) {    this.setSelectedItem(fund);  }  public void setSelectedFundByCode(String fundCode) {    Fund fund = dataMap.get(fundCode);    this.setSelectedItem(fund);  }  public static void main(String[] args) {    JFrame f = new JFrame();    FundForBiXJComboBox textField = new FundForBiXJComboBox();    textField.setEditable(false);    textField.setEnabled(false);    textField.setEnabled(true);    textField.setCtrlLevelNum(3);    //		textField.setRandomEdit(false);    textField.setPrefix("01");    textField.initComboBox();    JPanel panel = new JPanel();    panel.add(textField);    f.getContentPane().add(panel, BorderLayout.NORTH);    // f.pack();    // SwingUtilities.updateComponentTreeUI(panel);    f.setSize(400, 300);    f.setLocationRelativeTo(null);    f.setVisible(true);    f.addWindowListener(new WindowAdapter() {      public void windowClosing(WindowEvent e) {        System.exit(0);      }    });  }}