package com.ufgov.zc.client.component.element;import java.awt.Dialog;import java.awt.event.MouseAdapter;import java.awt.event.MouseEvent;import java.util.List;import javax.swing.JTable;import javax.swing.table.DefaultTableModel;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.client.component.JButtonTextField;import com.ufgov.zc.client.component.JTableSelectDialog;import com.ufgov.zc.client.datacache.Util;import com.ufgov.zc.client.util.GkPreferencesStore;import com.ufgov.zc.common.commonbiz.model.Project;import com.ufgov.zc.common.system.RequestMeta;public class ProjectBalanceTableSelectDialog extends JTableSelectDialog {  public ProjectBalanceTableSelectDialog(Dialog dialog, boolean modal, JButtonTextField triggerField) {    super(dialog, modal, triggerField);  }  private static final long serialVersionUID = -4407933154954926841L;  public void initTitle() {    LangTransMeta.init("GK%");    this.setTitle(LangTransMeta.translate("GK_TITLE_PROJECT"));  }  protected void initDataBufferList() {    RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();    dataBufferList = Util.baseDataServiceDelegate.getProjectBalance(requestMeta);    for (int i = 0; i < dataBufferList.size(); i++) {      Project rowData = (Project) dataBufferList.get(i);      this.triggerField.dataMap.put(rowData.getCode(), rowData);    }    this.triggerField.filteredDataList = dataBufferList;  }  private List genTableData() {    List list = ProjectDataFilter.filter(dataBufferList, this.triggerField.isRandomEdit(), this.triggerField    .getPrefix(), this.triggerField.isLevelCtrl(), this.triggerField.getCtrlLevelNum());    list = ProjectDataFilter.getProject(((ProjectBalanceTableSelectField) triggerField).getCompany(), list);    return list;  }  public void initSelectTable() {    String[] names = { LangTransMeta.translate("GK_FIELD_ND"), "项目版本号", "项目金额", "项目已用金额", "项目余额",    LangTransMeta.translate("GK_FIELD_PROJECT_CODE"), LangTransMeta.translate("GK_FIELD_PROJECT_NAME") };    Object[][] data = null;    tableDataList = this.genTableData();    data = new Object[tableDataList.size()][names.length];    for (int i = 0; i < tableDataList.size(); i++) {      Project rowData = (Project) tableDataList.get(i);      int col = 0;      data[i][col++] = rowData.getNd();      data[i][col++] = rowData.getPdVersionId();      data[i][col++] = rowData.getPdMoney();      data[i][col++] = rowData.getPdUseMoney();      data[i][col++] = rowData.getPdBalance();      data[i][col++] = rowData.getCode();      data[i][col++] = rowData.getName();    }    DefaultTableModel model = new DefaultTableModel(data, names) {      public boolean isCellEditable(int row, int colum) {        return false;      }    };    selectTable.setPreferencesKey(this.getClass().getName() + "_selectTable");    selectTable.setPreferenceStore(GkPreferencesStore.preferenceStore());    selectTable.setModel(model);    selectTable.addMouseListener(new MouseAdapter() {      public void mouseClicked(MouseEvent e) {        if (e.getClickCount() == 2) {          doOK();        }      }    });    selectTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);  }}