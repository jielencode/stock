package com.ufgov.zc.client.component.element;import java.awt.BorderLayout;import java.awt.event.ItemEvent;import java.awt.event.ItemListener;import java.awt.event.WindowAdapter;import java.awt.event.WindowEvent;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.swing.JFrame;import javax.swing.JPanel;import com.ufgov.smartclient.component.JComboBoxEx;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.common.commonbiz.publish.IBaseDataServiceDelegate;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.model.AsVal;public class BiTargetComboBox extends JComboBoxEx {  private List dataList = new ArrayList();  private Map<String, AsVal> dataMap = new HashMap<String, AsVal>();  public BiTargetComboBox() {    super();    init();  }  private void init() {    int nd = WorkEnv.getInstance().getTransNd();    String baseDataServiceDelegateName = "baseDataServiceDelegate";    IBaseDataServiceDelegate baseDataServiceDelegate = (IBaseDataServiceDelegate) ServiceFactory    .create(IBaseDataServiceDelegate.class, baseDataServiceDelegateName);    RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();    dataList = baseDataServiceDelegate.getAsVal("VS_BI_TARGET_CODE", requestMeta);    this.addItem(null);    for (int i = 0; i < dataList.size(); i++) {      AsVal data = (AsVal) dataList.get(i);      this.addItem(data);      this.addItemDisplaLable(data, data.getVal());      this.dataMap.put(data.getValId(), data);    }    this.addItemListener(new ItemListener() {      public void itemStateChanged(ItemEvent e) {        if (((AsVal) getSelectedItem()) != null) {          setToolTipText(((AsVal) e.getItem()).getVal());        } else {          setToolTipText(null);        }      }    });  }  public AsVal getSelectedAsVal() {    return (AsVal) this.getSelectedItem();  }  public void setSelectedAsVal(AsVal asVal) {    this.setSelectedItem(asVal);  }  public void setSelectedAsValByCode(String asValCode) {    AsVal asVal = dataMap.get(asValCode);    this.setSelectedItem(asVal);  }  public static void main(String[] args) {    JFrame f = new JFrame();    BiTargetComboBox textField = new BiTargetComboBox();    textField.setEditable(false);    textField.setEnabled(false);    textField.setEnabled(true);    JPanel panel = new JPanel();    panel.add(textField);    f.getContentPane().add(panel, BorderLayout.NORTH);    // f.pack();    // SwingUtilities.updateComponentTreeUI(panel);    f.setSize(400, 300);    f.setLocationRelativeTo(null);    f.setVisible(true);    f.addWindowListener(new WindowAdapter() {      public void windowClosing(WindowEvent e) {        System.exit(0);      }    });  }}