package com.ufgov.zc.client.component;import java.awt.BorderLayout;import java.awt.event.ItemEvent;import java.awt.event.ItemListener;import java.awt.event.WindowAdapter;import java.awt.event.WindowEvent;import java.util.ArrayList;import java.util.HashMap;import java.util.HashSet;import java.util.Iterator;import java.util.List;import java.util.Map;import java.util.Set;import javax.swing.JFrame;import javax.swing.JPanel;import com.ufgov.smartclient.component.JComboBoxEx;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.common.commonbiz.model.MaCpBankBal;import com.ufgov.zc.common.commonbiz.publish.IBaseDataServiceDelegate;import com.ufgov.zc.common.system.RequestMeta;public class ClearBankComboBox extends JComboBoxEx {  private static final long serialVersionUID = -8777566418156030123L;  private List dataList;  private Map<String, MaCpBankBal> dataMap = new HashMap<String, MaCpBankBal>();  public ClearBankComboBox() {    this(null);  }  public ClearBankComboBox(String bankCode) {    initGUI(bankCode);  }  private ArrayList removeDuplicate(ArrayList arlList) {    Set set = new HashSet();    List newList = new ArrayList();    for (Iterator iter = arlList.iterator(); iter.hasNext();) {      MaCpBankBal element = (MaCpBankBal) iter.next();      if (set.add(element.getPayBankCode()))        newList.add(element);    }    arlList.clear();    arlList.addAll(newList);    return arlList;  }  private void initGUI(String bankCode) {    int nd = WorkEnv.getInstance().getTransNd();    IBaseDataServiceDelegate cpBankBalServiceDelegate = (IBaseDataServiceDelegate) ServiceFactory    .create(IBaseDataServiceDelegate.class, "baseDataServiceDelegate");    RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();    dataList = cpBankBalServiceDelegate.getMaCpBankBalList(nd, requestMeta);    dataList = removeDuplicate((ArrayList) dataList);    if (dataList.size() > 0) {      this.addItem(null);    }    for (int i = 0; i < dataList.size(); i++) {      MaCpBankBal data = (MaCpBankBal) dataList.get(i);      this.addItem(data);      this.addItemDisplaLable(data, data.getPayBankName());      this.dataMap.put(data.getBankBalId(), data);    }    this.addItemListener(new ItemListener() {      public void itemStateChanged(ItemEvent e) {        if (((MaCpBankBal) getSelectedItem()) != null) {          setToolTipText(((MaCpBankBal) e.getItem()).getPayBankName());        } else {          setToolTipText(null);        }      }    });  }  public void refreshData(String bankCode) {    this.removeAllItems();    this.initGUI(bankCode);  }  public MaCpBankBal getMaCpBankBal() {    return (MaCpBankBal) this.getSelectedItem();  }  public void setMaCpBankBal(MaCpBankBal maCpBankBal) {    this.setSelectedItem(maCpBankBal);  }  public static void main(String[] args) {    JFrame f = new JFrame();    ClearBankComboBox textField = new ClearBankComboBox();    textField.setEditable(false);    textField.setEnabled(false);    textField.setEnabled(true);    JPanel panel = new JPanel();    panel.add(textField);    f.getContentPane().add(panel, BorderLayout.NORTH);    // f.pack();    // SwingUtilities.updateComponentTreeUI(panel);    f.setSize(400, 300);    f.setLocationRelativeTo(null);    f.setVisible(true);    f.addWindowListener(new WindowAdapter() {      @Override      public void windowClosing(WindowEvent e) {        System.exit(0);      }    });  }}