package com.ufgov.zc.server.bi.dao.ibatis;import java.sql.SQLException;import java.util.List;import org.springframework.orm.ibatis.SqlMapClientCallback;import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;import com.ibatis.sqlmap.client.SqlMapExecutor;import com.ufgov.zc.common.bi.model.BiCdTrack;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.server.bi.dao.IBiCdTrackDao;import com.ufgov.zc.server.system.util.OrderColumnsUtil;import com.ufgov.zc.server.system.util.RequestMetaUtil;public class BiCdTrackDao extends SqlMapClientDaoSupport implements IBiCdTrackDao {  public void insertBiCdTrack(BiCdTrack biCdTrack) {    this.getSqlMapClientTemplate().insert("BiCdTrack.insertBiCdTrack", biCdTrack);  }  public void insertBiCdTrack(List biCdTrackList) {    final List list = biCdTrackList;    this.getSqlMapClientTemplate().execute(new SqlMapClientCallback() {      public Object doInSqlMapClient(SqlMapExecutor executor) throws SQLException {        executor.startBatch();        for (int i = 0; i < list.size(); i++) {          executor.insert("BiCdTrack.insertBiCdTrack", list.get(i));        }        executor.executeBatch();        return null;      }    });  }  public void updateBiCdTrack(List biCdTrackList) {    final List list = biCdTrackList;    this.getSqlMapClientTemplate().execute(new SqlMapClientCallback() {      public Object doInSqlMapClient(SqlMapExecutor executor) throws SQLException {        executor.startBatch();        for (int i = 0; i < list.size(); i++) {          executor.update("BiCdTrack.update", list.get(i));        }        executor.executeBatch();        return null;      }    });  }  public List getBiCdTrack(ElementConditionDto dto) {    dto.setOrderColumns(OrderColumnsUtil.getInstance().getOrderColumns(RequestMetaUtil.getCompoId()));    List list = this.getSqlMapClientTemplate().queryForList("BiCdTrack.getBiCdTrack", dto);    return list;  }  public void updateBiCdTrackIsValid(BiCdTrack biCdTrack) {    this.getSqlMapClientTemplate().insert("BiCdTrack.updateIsValid", biCdTrack);  }}