package com.ufgov.zc.server.bank.socket.tongxiang.ccb;import java.util.HashMap;import java.util.Map;import com.ufgov.zc.common.am.model.AmVoucher;import com.ufgov.zc.common.commonbiz.model.BaseBill;import com.ufgov.zc.common.cp.model.CpVoucher;import com.ufgov.zc.common.system.constants.SocketConstants;import com.ufgov.zc.common.system.model.ResultInfo;public class CcbQuerySocketProxy extends AbstractCcbSocketProxy {  public CcbQuerySocketProxy() {    super();  }  public CcbQuerySocketProxy(Map prop) {    super(prop);  }  public void afterDealBusinessObject(Object businessObject, ResultInfo resultInfo) throws Exception {    //对业务数据进行处理    System.out.println("it is after ccb query");    BaseBill voucher = (BaseBill) businessObject;    Map params = new HashMap();    if (SocketConstants.SUCCESS.equals(resultInfo.getResultCode())) {      if ("1".equals(resultInfo.getTradeFlag())) {        params.put("dealState", "3");        this.updateVoucherGroupState(params, voucher);      } else if ("2".equals(resultInfo.getTradeFlag())) {        params.put("dealState", "0");        this.updateVoucherGroupState(params, voucher);      } else {        resultInfo.setResultMessage(resultInfo.getDesc());      }    }  }  public String parseToXml(Object businessObject) throws Exception {    BaseBill voucher = (BaseBill) businessObject;    StringBuffer buffer = new StringBuffer();    buffer.append("<?xml version=\"1.0\" encoding=\"GB2312\" standalone=\"yes\"?>");//     buffer.append("<TX>");//      buffer.append("<REQUEST_SN>" + this.getRequestSn() + "</REQUEST_SN>");//只使用数字,必须唯一，不允许相同的请求序列码  varChar(16)    buffer.append("<CUST_ID>" + this.getAutheInfo().getUserId() + "</CUST_ID>");//发起支付交易的单位的建行网银签约客户号 varChar(21)    buffer.append("<USER_ID>" + this.getAutheInfo().getOperId() + "</USER_ID>");//发起支付交易的操作员的建行网银操作员号  varChar(6)    buffer.append("<PASSWORD>111111</PASSWORD>");//固定     buffer.append("<TX_CODE>6W5002</TX_CODE>");//固定     buffer.append("<LANGUAGE>CN</LANGUAGE>");//固定     buffer.append("<TX_INFO>");//     buffer.append("<SUBTX>FS9101</SUBTX>");//固定     buffer.append("<USERCLASS>3</USERCLASS>");//固定      buffer.append("<USERNAME>" + voucher.getInputorId() + "</USERNAME>");//财政系统中操作员代码  varChar(40)    buffer.append("<FUNCID>33063CZ01</FUNCID>");//固定      buffer.append("<DEPTCODE>111111</DEPTCODE>");//固定     buffer.append("<TRADEROAD>1</TRADEROAD>");//固定      buffer.append("<TRADEATTR>2</TRADEATTR>");//固定      buffer.append("<TRADEFLAG>1</TRADEFLAG>");//固定      buffer.append("<PROGRESSFLAG>0</PROGRESSFLAG>");//固定      buffer.append("<ACCNO1>" + voucher.getPayBankAccCode() + "</ACCNO1>");//支付指令中的付款帐号  varChar(32)    buffer.append("<ACCNO2>222</ACCNO2>");//固定      buffer.append("<BUDGETDEPTCD>1</BUDGETDEPTCD>");//固定      buffer.append("<IDTYPE>01</IDTYPE>");//固定     buffer.append("<IDNO>1</IDNO>");//固定      buffer.append("<CREDITNO>1</CREDITNO>");//固定      String vouNo = "";    if (voucher instanceof CpVoucher) {      vouNo = ((CpVoucher) voucher).getCpVouNo();    } else if (voucher instanceof AmVoucher) {      vouNo = ((AmVoucher) voucher).getVouNo();    }    buffer.append("<PAYCOMMANDCD>" + vouNo + "</PAYCOMMANDCD>");//支付指令号为财政系统中指令号  varChar(30)    //buffer.append("<PAYCOMMANDCD>" + "11111111" + "</PAYCOMMANDCD>");//支付指令号为财政系统中指令号  varChar(30)    buffer.append("<AMOUNT1>0.00</AMOUNT1>");//固定     buffer.append("<AMOUNT2>0.00</AMOUNT2>");//固定     buffer.append("<CASHTYPE>0</CASHTYPE>");//固定      buffer.append("<DIGEST1>txt</DIGEST1>");//固定      buffer.append("<DIGEST2>txt</DIGEST2>");//固定      buffer.append("<DATE1>20000101</DATE1>");//固定     buffer.append("<DATE2>20000101</DATE2>");//固定     buffer.append("<REM1>备注1</REM1>");//固定      buffer.append("<REM2>备注2</REM2>");//固定      buffer.append("</TX_INFO>");//      buffer.append("</TX>");//     return buffer.toString();  }}