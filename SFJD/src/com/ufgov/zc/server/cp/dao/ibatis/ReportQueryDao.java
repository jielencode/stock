package com.ufgov.zc.server.cp.dao.ibatis;import java.util.HashMap;import java.util.List;import java.util.Map;import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;import com.ufgov.zc.common.commonbiz.dto.ReportQueryDto;import com.ufgov.zc.common.system.constants.NumLimConstants;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.server.cp.dao.IReportQueryDao;import com.ufgov.zc.server.system.util.NumLimUtil;public class ReportQueryDao extends SqlMapClientDaoSupport implements IReportQueryDao {  public List getBiPayQuery(ReportQueryDto queryDto) {    Map map = new HashMap();    map.put("nd", queryDto.getNd());    if (queryDto.getCoCode() != null)      map.put("co_code", queryDto.getCoCode());    if (queryDto.getOriginCode() != null)      map.put("origin_code", queryDto.getOriginCode());    if (queryDto.getFundCode() != null)      map.put("fund_code", queryDto.getFundCode());    if (queryDto.getKmlb() != null)      map.put("kmlb", queryDto.getKmlb());    if (queryDto.getBaccCode() != null)      map.put("b_acc_code", queryDto.getBaccCode());    if (queryDto.getProjectCode() != null)      map.put("project_code", queryDto.getProjectCode());    if (queryDto.getProjectDetailCode() != null) {      map.put("project_detail_code", queryDto.getProjectDetailCode());    }    if (queryDto.getOutlayCode() != null)      map.put("outlay_code", queryDto.getOutlayCode());    if (queryDto.getOrgCode() != null)      map.put("org_code", queryDto.getOrgCode());    if (queryDto.getPayoutCode() != null)      map.put("payout_code", queryDto.getPayoutCode());    if (queryDto.getSendDocCode() != null)      map.put("senddoc_code", queryDto.getSendDocCode());    if (queryDto.getDattr1() != null)      map.put("d_attr1", queryDto.getDattr1());    if (queryDto.getDattr2() != null)      map.put("d_attr2", queryDto.getDattr2());    if (queryDto.getDattr3() != null)      map.put("d_attr3", queryDto.getDattr3());    if (queryDto.getDattr4() != null)      map.put("d_attr4", queryDto.getDattr4());    if (queryDto.getDattr5() != null)      map.put("d_attr5", queryDto.getDattr5());    map.put("sel_str", queryDto.getSelectStr());    map.put("sel_str_out", queryDto.getSelectStrOut());    this.getSqlMapClientTemplate().queryForObject("ReportQuery.getBiPayQuery", map);    List resultList = (List) map.get("resultSets");    return resultList;  }  public List getBiPayQueryAmApply(ReportQueryDto queryDto) {    return this.getSqlMapClientTemplate().queryForList("ReportQuery.getBiPayQueryAmApply", queryDto);  }  public List getBiPayQueryBiTrack(ReportQueryDto queryDto) {    return this.getSqlMapClientTemplate().queryForList("ReportQuery.getBiPayQueryBiTrack", queryDto);  }  public List getBiPayQueryCpApply(ReportQueryDto queryDto) {    return this.getSqlMapClientTemplate().queryForList("ReportQuery.getBiPayQueryCpApply", queryDto);  }  public List getBiPayQueryCpVoucher0201(ReportQueryDto queryDto) {    return this.getSqlMapClientTemplate().queryForList("ReportQuery.getBiPayQueryCpVoucher0201", queryDto);  }  public List getBiPayQueryCpVoucher0202(ReportQueryDto queryDto) {    return this.getSqlMapClientTemplate().queryForList("ReportQuery.getBiPayQueryCpVoucher0202", queryDto);  }  public List getBiPayQueryDpDetail(ReportQueryDto queryDto) {    return this.getSqlMapClientTemplate().queryForList("ReportQuery.getBiPayQueryDpDetail", queryDto);  }  public List getBiPayQueryVoucher(ReportQueryDto queryDto) {    return this.getSqlMapClientTemplate().queryForList("ReportQuery.getBiPayQueryVoucher", queryDto);  }  public List getBudgetExeQuery(ElementConditionDto conditionDto) {    return this.getSqlMapClientTemplate().queryForList("ReportQuery.getBudgetExeQuery", conditionDto);  }  public List getAllCpCcaccountInfo(ElementConditionDto conditionDto) {//    conditionDto.setNumLimitStr(NumLimUtil.getInstance().getNumLimCondByCoType(////    conditionDto.getNumLimCompoId(), NumLimConstants.FWATCH));    return this.getSqlMapClientTemplate().queryForList("ReportQuery.getCpCcaccountInfo", conditionDto);  }  public List getBaseReportQuery(ElementConditionDto conditionDto) {    Map map = new HashMap();    map.put("PROCEDURE_NAME", conditionDto.getProcedureName());    map.put("ND", new Integer(conditionDto.getNd()));    map.put("CO_CODE", conditionDto.getCoCodeFilter());    map.put("ORIGIN_CODE", conditionDto.getOriginCode());    map.put("FUND_CODE", conditionDto.getFundCode());    map.put("B_ACC_CODE", conditionDto.getBaccCode());    map.put("PROJECT_CODE", conditionDto.getProjectCode());    map.put("OUTLAY_CODE", conditionDto.getOutlayCode());    map.put("ORG_CODE", conditionDto.getOrgCode());    map.put("PAYOUT_CODE", conditionDto.getPayoutCode());    map.put("SENDDOC_CODE", conditionDto.getSendDocCode());    map.put("MANAGE_CODE", conditionDto.getManageCode());    map.put("OPERATION_TYPE_CODE", conditionDto.getOperationTypeCode());    map.put("PAYTYPE_CODE", conditionDto.getPaytypeCode());    map.put("BAL_MODE_CODE", conditionDto.getBalModeCode());    map.put("INCEPTDOC_CODE", conditionDto.getInceptDocCode());    map.put("NUM_LIM_STR", conditionDto.getNumLimitStr());    map.put("D_ATTR1", conditionDto.getDattr1());    map.put("D_ATTR2", conditionDto.getDattr2());    map.put("D_ATTR3", conditionDto.getDattr3());    map.put("D_ATTR4", conditionDto.getDattr4());    map.put("D_ATTR5", conditionDto.getDattr5());    map.put("PARAM1", conditionDto.getExtField1());    map.put("PARAM2", conditionDto.getExtField2());    map.put("PARAM3", conditionDto.getExtField3());    map.put("PARAM4", conditionDto.getExtField4());    map.put("PARAM5", conditionDto.getExtField5());    map.put("PARAM6", conditionDto.getExtField6());    map.put("PARAM7", conditionDto.getExtField7());    map.put("PARAM8", conditionDto.getExtField8());    map.put("PARAM9", conditionDto.getExtField9());    map.put("PARAM10", conditionDto.getExtField10());    this.getSqlMapClientTemplate().queryForObject("ReportQuery.getBaseReportQuery", map);    List resultList = (List) map.get("resultSets");    return resultList;  }  public List getCpGwkCcTradeInfo(ElementConditionDto conditionDto) {//    conditionDto.setNumLimitStr(NumLimUtil.getInstance().getNumLimCondByCoType(////    conditionDto.getNumLimCompoId(), NumLimConstants.FWATCH));    return this.getSqlMapClientTemplate().queryForList("CpCctradeInfo.selectDataByWhere", conditionDto);  }  public List getCpCcBankAccInfo(ElementConditionDto conditionDto) {//    conditionDto.setNumLimitStr(NumLimUtil.getInstance().getNumLimCondByCoType(////    conditionDto.getNumLimCompoId(), NumLimConstants.FWATCH));    return this.getSqlMapClientTemplate().queryForList("CpCcBankAcc.getCpCcBankAccInfo", conditionDto);  }}