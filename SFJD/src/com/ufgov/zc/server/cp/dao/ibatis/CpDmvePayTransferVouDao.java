package com.ufgov.zc.server.cp.dao.ibatis;import java.util.HashMap;import java.util.List;import java.util.Map;import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;import com.ufgov.zc.common.cp.model.CpPayTransferList;import com.ufgov.zc.common.cp.model.CpPayTransferRelation;import com.ufgov.zc.common.cp.model.CpPayTransferVou;import com.ufgov.zc.common.system.constants.NumLimConstants;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.server.cp.dao.ICpDmvePayTransferVouDao;import com.ufgov.zc.server.system.util.NumLimUtil;import com.ufgov.zc.server.system.util.Util;public class CpDmvePayTransferVouDao extends SqlMapClientDaoSupport implements ICpDmvePayTransferVouDao {  public List getCpPayTransferVou(ElementConditionDto dto) {//    dto.setNumLimitStr(NumLimUtil.getInstance().getNumLimCondByCoType(dto.getNumLimCompoId(), NumLimConstants.FWATCH, false));    List list = this.getSqlMapClientTemplate().queryForList("CpDmvePayTransferVou.getCpPayTransferVou", dto);    List vouListList = this.getSqlMapClientTemplate().queryForList("CpDmvePayTransferVou.getCpPayTransferList", dto);    Map vouListMap = Util.createKeyListMap("payTransferVouId", vouListList);    List vouRelationList = this.getSqlMapClientTemplate().queryForList("CpDmvePayTransferVou.getCpPayTransferRelation", dto);    Map vouRelationMap = Util.createKeyListMap("payTransferVouId", vouRelationList);    for (int i = 0; i < list.size(); i++) {      CpPayTransferVou v = (CpPayTransferVou) list.get(i);      List tempList1 = (List) vouListMap.get(v.getPayTransferVouId());      List tempList2 = (List) vouRelationMap.get(v.getPayTransferVouId());      if (tempList1 != null) {        v.setCpPayTransferLists(tempList1);      }      if (tempList2 != null) {        v.setCpPayTransferRelations(tempList2);      }    }    return list;  }  public int updateCpvoucherByPayTransferVouId(CpPayTransferVou bill) {    Map params = new HashMap();    params.put("payTransferVouId", bill.getPayTransferVouId());    String vouNoListStr = bill.getPayVouNoList();    String[] buffer = vouNoListStr.split(",");    String temp = "";    for (int i = 0; i < buffer.length; i++) {      temp += "," + "'" + buffer[i] + "'";    }    temp = temp.substring(1);    params.put("payVouNoList", temp);    return this.getSqlMapClientTemplate().update("CpDmvePayTransferVou.updateCpvoucherByPayTransferVouId", params);  }  public int updateCpvoucherByPayTransferVouIdForDelete(CpPayTransferVou bill) {    Map params = new HashMap();    params.put("payTransferVouId", bill.getPayTransferVouId());    return this.getSqlMapClientTemplate().update("CpDmvePayTransferVou.updateCpvoucherByPayTransferVouIdForDelete", params);  }  public void insertCpPayTransferVou(CpPayTransferVou bill) {    this.getSqlMapClientTemplate().insert("CpDmvePayTransferVou.insertCpPayTransferVou", bill);  }  public void insertCpPayTransferList(CpPayTransferList balList) {    this.getSqlMapClientTemplate().insert("CpDmvePayTransferVou.insertCpPayTransferList", balList);  }  public void insertCpPayTransferRelation(CpPayTransferRelation balRelation) {    this.getSqlMapClientTemplate().insert("CpDmvePayTransferVou.insertCpPayTransferRelation", balRelation);  }  public void deleteCpPayTransferVou(CpPayTransferVou bill) {    this.getSqlMapClientTemplate().delete("CpDmvePayTransferVou.deleteCpPayTransferVou", bill);  }  public void deleteCpPayTransferListByVouNo(CpPayTransferVou bill) {    this.getSqlMapClientTemplate().delete("CpDmvePayTransferVou.deleteCpPayTransferListByVouNo", bill);  }  public void deleteCpPayRelationByVouNo(CpPayTransferVou bill) {    this.getSqlMapClientTemplate().delete("CpDmvePayTransferVou.deleteCpPayRelationByVouNo", bill);  }  public void updateCpPayTransferVouStatus(Map params) {    this.getSqlMapClientTemplate().update("CpDmvePayTransferVou.updateCpPayTransferVouAstatus", params);  }  public void updateCpPayTransferVouPrintTimes(String ids) {    this.getSqlMapClientTemplate().update("CpDmvePayTransferVou.updateCpPayTransferVouPrintTimes", ids);  }}