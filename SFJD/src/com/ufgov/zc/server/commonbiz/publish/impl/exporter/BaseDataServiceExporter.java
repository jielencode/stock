package com.ufgov.zc.server.commonbiz.publish.impl.exporter;import java.util.Date;import java.util.List;import java.util.Map;import com.kingdrive.workflow.model.runtime.TraceInfoModel;import com.ufgov.zc.common.commonbiz.model.AutheInfo;import com.ufgov.zc.common.commonbiz.model.BankAccount;import com.ufgov.zc.common.commonbiz.model.BaseBill;import com.ufgov.zc.common.commonbiz.model.BillElement;import com.ufgov.zc.common.commonbiz.model.Company;import com.ufgov.zc.common.commonbiz.model.MaCompany;import com.ufgov.zc.common.commonbiz.model.MaCompanyKey;import com.ufgov.zc.common.commonbiz.model.MaElementRelationRule;import com.ufgov.zc.common.commonbiz.model.MaElementRelationRuleEntry;import com.ufgov.zc.common.commonbiz.model.MaExpSerial;import com.ufgov.zc.common.commonbiz.model.MaTzdSumElement;import com.ufgov.zc.common.commonbiz.model.NumLimCompo;import com.ufgov.zc.common.commonbiz.model.Project;import com.ufgov.zc.common.commonbiz.model.SendDoc;import com.ufgov.zc.common.commonbiz.model.WfTaskGranter;import com.ufgov.zc.common.commonbiz.publish.IBaseDataServiceDelegate;import com.ufgov.zc.common.console.model.AsEmp;import com.ufgov.zc.common.console.model.GkGetdataRule;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.system.dto.PrintObject;import com.ufgov.zc.common.system.dto.UserFuncDto;import com.ufgov.zc.common.system.model.AsCompo;import com.ufgov.zc.common.system.model.AsFile;import com.ufgov.zc.common.system.model.AsOption;import com.ufgov.zc.common.system.model.PrintSetting;import com.ufgov.zc.common.system.model.ResultInfo;import com.ufgov.zc.common.system.model.User;import com.ufgov.zc.common.system.model.UserPreferences;import com.ufgov.zc.common.system.model.UserSearchStore;import com.ufgov.zc.server.system.SpringContext;public class BaseDataServiceExporter implements IBaseDataServiceDelegate {  private IBaseDataServiceDelegate delegate = (IBaseDataServiceDelegate) SpringContext.getBean("baseDataServiceDelegate");  public void deleteUserSearchCondition(String conditionId, String userId, RequestMeta requestMeta) {    this.delegate.deleteUserSearchCondition(conditionId, userId, requestMeta);  }  public AsOption getAsOption(String optId, RequestMeta requestMeta) {    return this.delegate.getAsOption(optId, requestMeta);  }  public void updateOptionVal(AsOption asOption, RequestMeta requestMeta) {    this.delegate.updateOptionVal(asOption, requestMeta);  }  public List getAsVal(String valSetId, RequestMeta requestMeta) {    return this.delegate.getAsVal(valSetId, requestMeta);  }  public Map getAsValMap(String valSetId, RequestMeta requestMeta) {    return this.delegate.getAsValMap(valSetId, requestMeta);  }  public List getBAcc(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getBAcc(dto, requestMeta);  }  public List getBAccTree(int nd, RequestMeta requestMeta) {    return this.delegate.getBAccTree(nd, requestMeta);  }  public Map getBillElement(int nd, String billTypeCode, RequestMeta requestMeta) {    return this.delegate.getBillElement(nd, billTypeCode, requestMeta);  }  public void updateIncludeForBillElement(BillElement billElement, RequestMeta requestMeta) {    this.delegate.updateIncludeForBillElement(billElement, requestMeta);  }  public void updateBillElementGroupInfo(BillElement billElement, RequestMeta requestMeta) {    this.delegate.updateBillElementGroupInfo(billElement, requestMeta);  }  public void updateBillElementForBbFN(List list, RequestMeta requestMeta) {    this.delegate.updateBillElementForBbFN(list, requestMeta);  }  public List getCompany(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getCompany(dto, requestMeta);  }  public List getCompanyByUserId(String userId, int nd, RequestMeta requestMeta) {    return this.delegate.getCompanyByUserId(userId, nd, requestMeta);  }  public Company getCompanyByCoCode(int nd, String coCode, RequestMeta requestMeta) {    return this.delegate.getCompanyByCoCode(nd, coCode, requestMeta);  }  public List getCompanyChildren(int nd, String coCode, RequestMeta requestMeta) {    return this.delegate.getCompanyChildren(nd, coCode, requestMeta);  }  public List getCompanyTree(int nd, RequestMeta requestMeta) {    return this.delegate.getCompanyTree(nd, requestMeta);  }  public List getContract(int nd, RequestMeta requestMeta) {    return this.delegate.getContract(nd, requestMeta);  }  public List getDAttr(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getDAttr(dto, requestMeta);  }  public List getFund(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getFund(dto, requestMeta);  }  public List getBiXJFund(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getBiXJFund(dto, requestMeta);  }  public List getInceptDoc(int nd, RequestMeta requestMeta) {    return this.delegate.getInceptDoc(nd, requestMeta);  }  public Map getLangTrans(String resId, RequestMeta requestMeta) {    return this.delegate.getLangTrans(resId, requestMeta);  }  public List getAsLangTrans(String resId, RequestMeta requestMeta) {    return this.delegate.getAsLangTrans(resId, requestMeta);  }  public void updateAslangTrans(List langTransList, RequestMeta requestMeta) {    this.delegate.updateAslangTrans(langTransList, requestMeta);  }  public List getManage(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getManage(dto, requestMeta);  }  public List getManageForBiXJ(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getManageForBiXJ(dto, requestMeta);  }  public List getNumLimCompo(RequestMeta requestMeta) {    return this.delegate.getNumLimCompo(requestMeta);  }  public NumLimCompo getNumLimCompoByCompoId(String compoId, RequestMeta requestMeta) {    return this.delegate.getNumLimCompoByCompoId(compoId, requestMeta);  }  public List getNumLimCompoByParentCompoId(String parentCompoId, RequestMeta requestMeta) {    return this.delegate.getNumLimCompoByParentCompoId(parentCompoId, requestMeta);  }  public List getOperationType(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getOperationType(dto, requestMeta);  }  public List getCzOrg(int nd, RequestMeta requestMeta) {    return this.delegate.getCzOrg(nd, requestMeta);  }  public List getZcOrg(int nd, RequestMeta requestMeta) {    return this.delegate.getZcOrg(nd, requestMeta);  }  public List getOrg(int nd, RequestMeta requestMeta) {    return this.delegate.getOrg(nd, requestMeta);  }  public List getOrg(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getOrg(dto, requestMeta);  }  public List getOrigin(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getOrigin(dto, requestMeta);  }  public List getPosition(int nd, RequestMeta requestMeta) {    return this.delegate.getPosition(nd, requestMeta);  }  public List getEmp(int nd, RequestMeta requestMeta) {    return this.delegate.getEmp(nd, requestMeta);  }  public List getOutlay(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getOutlay(dto, requestMeta);  }  public List getOutlayTree(int nd, RequestMeta requestMeta) {    return this.delegate.getOutlayTree(nd, requestMeta);  }  public BankAccount getReceBankAccount(String accName, String bankAccCode, String bankNodeName, String coCode, String userId, RequestMeta requestMeta) {    return this.delegate.getReceBankAccount(accName, bankAccCode, bankNodeName, coCode, userId, requestMeta);  }  public BankAccount getReceBankAccount(BankAccount bankAccount, RequestMeta requestMeta) {    return this.delegate.getReceBankAccount(bankAccount, requestMeta);  }  public BankAccount getDwZeroAccount(int nd, String coCode, String fundCode, String optFundFilterVal, RequestMeta requestMeta) {    return this.delegate.getDwZeroAccount(nd, coCode, fundCode, optFundFilterVal, requestMeta);  }  public List getReceBankAccountList(int nd, String userId, RequestMeta requestMeta) {    return this.delegate.getReceBankAccountList(nd, userId, requestMeta);  }  public List getBankAccountByAccNo(int nd, String bankAccNo, RequestMeta requestMeta) {    return this.delegate.getBankAccountByAccNo(nd, bankAccNo, requestMeta);  }  public void deleteReceBankAccout(List bankAccountList, RequestMeta requestMeta) {    this.delegate.deleteReceBankAccout(bankAccountList, requestMeta);  }  public List getDwBaseBankAccountList(int nd, List accoType, String coCode, RequestMeta requestMeta) {    return this.delegate.getDwBaseBankAccountList(nd, accoType, coCode, requestMeta);  }  public List getDwZeroAccountList(int nd, List accoType, String coCode, RequestMeta requestMeta) {    return this.delegate.getDwZeroAccountList(nd, accoType, coCode, requestMeta);  }  public List getSpecialAccountList(int nd, List accoType, RequestMeta requestMeta) {    return this.delegate.getSpecialAccountList(nd, accoType, requestMeta);  }  public List getPayBankAccount(int nd, String accoType, String userId, RequestMeta requestMeta) {    return this.delegate.getPayBankAccount(nd, accoType, userId, requestMeta);  }  public List getPayBank(int nd, String accoType, String userId, RequestMeta requestMeta) {    return this.delegate.getPayBank(nd, accoType, userId, requestMeta);  }  public List getPayBankAccountByAccoType(int nd, List accoTypeList, RequestMeta requestMeta) {    return this.delegate.getPayBankAccountByAccoType(nd, accoTypeList, requestMeta);  }  public List getBankAccountByAccoType(int nd, String coCode, List accoTypeList, RequestMeta requestMeta) {    return this.delegate.getBankAccountByAccoType(nd, coCode, accoTypeList, requestMeta);  }  public List getDefaultPayBankAccount(int nd, String isDefault, String coCode, String fundCode, List accoTypeList, RequestMeta requestMeta) {    return this.delegate.getDefaultPayBankAccount(nd, isDefault, coCode, fundCode, accoTypeList, requestMeta);  }  public List getPayout(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getPayout(dto, requestMeta);  }  public List getPaytype(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getPaytype(dto, requestMeta);  }  public List getProject(int nd, RequestMeta requestMeta) {    return this.delegate.getProject(nd, requestMeta);  }  public List getProject(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getProject(dto, requestMeta);  }  public boolean projectCodeExist(Project project, RequestMeta requestMeta) {    return this.delegate.projectCodeExist(project, requestMeta);  }  public boolean projectNameExist(Project project, RequestMeta requestMeta) {    return this.delegate.projectNameExist(project, requestMeta);  }  public boolean projectUsed(Project project, RequestMeta requestMeta) {    return this.delegate.projectUsed(project, requestMeta);  }  public void deleteProjectWithChildren(Project project, RequestMeta requestMeta) {    this.delegate.deleteProjectWithChildren(project, requestMeta);  }  /**   * 除当前code对应name外的 是否重复   * @param nd   * @param currentCode   * @return   */  public boolean projectNameExistSelfExcluded(Project project, RequestMeta requestMeta) {    return this.delegate.projectNameExistSelfExcluded(project, requestMeta);  }  public List getProjectBiXJ(int nd, RequestMeta requestMeta) {    return this.delegate.getProjectBiXJ(nd, requestMeta);  }  public List getProjectDetail(RequestMeta requestMeta) {    return this.delegate.getProjectDetail(requestMeta);  }  public List getProjectBalance(RequestMeta requestMeta) {    return this.delegate.getProjectBalance(requestMeta);  }  public List getPdProject(int nd, RequestMeta requestMeta) {    return this.delegate.getPdProject(nd, requestMeta);  }  public List getProjectByCode(String pCode, RequestMeta requestMeta) {    return this.delegate.getProjectByCode(pCode, requestMeta);  }  public Project savePdProject(Project pdProject, RequestMeta requestMeta) {    return this.delegate.savePdProject(pdProject, requestMeta);  }  public void deletePdProjectFN(List dList, RequestMeta requestMeta) {    this.delegate.deletePdProjectFN(dList, requestMeta);  }  public List getProjectTree(int nd, RequestMeta requestMeta) {    return this.delegate.getProjectTree(nd, requestMeta);  }  public List getProjectType(int nd, RequestMeta requestMeta) {    return this.delegate.getProjectType(nd, requestMeta);  }  public List getProjectTypeTree(int nd, RequestMeta requestMeta) {    return this.delegate.getProjectTypeTree(nd, requestMeta);  }  public List getSearchCondition(String conditionId, RequestMeta requestMeta) {    return this.delegate.getSearchCondition(conditionId, requestMeta);  }  public List getSearchTypeCondition(String conditionId, String conditionType, RequestMeta requestMeta) {    return this.delegate.getSearchTypeCondition(conditionId, conditionType, requestMeta);  }  public List getSendDoc(int nd, RequestMeta requestMeta) {    return this.delegate.getSendDoc(nd, requestMeta);  }  public void insertSendDoc(SendDoc sendDoc, RequestMeta requestMeta) {    this.delegate.insertSendDoc(sendDoc, requestMeta);  }  public void updateSendDoc(SendDoc sendDoc, RequestMeta requestMeta) {    this.delegate.updateSendDoc(sendDoc, requestMeta);  }  public void deleteSendDoc(SendDoc sendDoc, RequestMeta requestMeta) {    this.delegate.deleteSendDoc(sendDoc, requestMeta);  }  public boolean sendDocCodeExist(SendDoc sendDoc, RequestMeta requestMeta) {    return this.delegate.sendDocNameExistSelfExcluded(sendDoc, requestMeta);  }  public boolean sendDocNameExist(SendDoc sendDoc, RequestMeta requestMeta) {    return this.delegate.sendDocNameExistSelfExcluded(sendDoc, requestMeta);  }  /**   * 除当前code对应name外的 是否重复   * @param nd   * @param currentCode   * @return   */  public boolean sendDocNameExistSelfExcluded(SendDoc sendDoc, RequestMeta requestMeta) {    return this.delegate.sendDocNameExistSelfExcluded(sendDoc, requestMeta);  }  public boolean sendDocUsed(SendDoc sendDoc, RequestMeta requestMeta) {    return this.delegate.sendDocUsed(sendDoc, requestMeta);  }  public List getSendDocType(int nd, RequestMeta requestMeta) {    return this.delegate.getSendDocType(nd, requestMeta);  }  public List getUserSearchCondition(String conditionId, String userId, RequestMeta requestMeta) {    return this.delegate.getUserSearchCondition(conditionId, userId, requestMeta);  }  public List getRoleSearchCondition(String conditionId, String userId, RequestMeta requestMeta) {    return this.delegate.getRoleSearchCondition(conditionId, userId, requestMeta);  }  public List getUserSearchConditionJoinRole(String conditionId, String userId, RequestMeta requestMeta) {    return this.delegate.getUserSearchConditionJoinRole(conditionId, userId, requestMeta);  }  public UserPreferences getUserPreferences(String userId, String preferId, RequestMeta requestMeta) {    return this.delegate.getUserPreferences(userId, preferId, requestMeta);  }  public void deleteUserPreferences(String userId, String preferId, RequestMeta requestMeta) {    this.delegate.deleteUserPreferences(userId, preferId, requestMeta);  }  public void putUserPreferences(UserPreferences userPreferences, RequestMeta requestMeta) {    this.delegate.putUserPreferences(userPreferences, requestMeta);  }  public void removeUserPreferences(UserPreferences userPreferences, RequestMeta requestMeta) {    this.delegate.removeUserPreferences(userPreferences, requestMeta);  }  public BankAccount insertReceBankAccount(BankAccount bankAccount, RequestMeta requestMeta) {    return this.delegate.insertReceBankAccount(bankAccount, requestMeta);  }  public void insertUserSearchCondition(List userSearchConditionList, RequestMeta requestMeta) {    this.delegate.insertUserSearchCondition(userSearchConditionList, requestMeta);  }  public void updateUserSearchCondition(String userId, String conditionId, List searchConditionList, RequestMeta requestMeta) {    this.delegate.updateUserSearchCondition(userId, conditionId, searchConditionList, requestMeta);  }  public List getCompoSearchCondition(String conditionType, RequestMeta requestMeta) {    return this.delegate.getCompoSearchCondition(conditionType, requestMeta);  }  public void updateSearchCondition(List searchConditionList, RequestMeta requestMeta) {    this.delegate.updateSearchCondition(searchConditionList, requestMeta);  }  public List getBalMode(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getBalMode(dto, requestMeta);  }  public List getAllBank(int nd, RequestMeta requestMeta) {    return this.delegate.getAllBank(nd, requestMeta);  }  public List getZeroBalanceBank(int nd, RequestMeta requestMeta) {    return this.delegate.getZeroBalanceBank(nd, requestMeta);  }  public List getMaBanknode(int nd, String bankCode, RequestMeta requestMeta) {    return this.delegate.getMaBanknode(nd, bankCode, requestMeta);  }  public List getMaCpBankBal(int nd, String bankCode, String fundCode, RequestMeta requestMeta) {    return this.delegate.getMaCpBankBal(nd, bankCode, fundCode, requestMeta);  }  public List getMaCpBankBalByView(int nd, String bankCode, String fundCode, String maCpBankBalView, RequestMeta requestMeta) {    return this.delegate.getMaCpBankBalByView(nd, bankCode, fundCode, maCpBankBalView, requestMeta);  }  public List getMaTzdSumElement(int nd, String billTypeCode, RequestMeta requestMeta) {    return this.delegate.getMaTzdSumElement(nd, billTypeCode, requestMeta);  }  public List getMaUserTzdSumElement(int nd, String billTypeCode, String userId, RequestMeta requestMeta) {    return this.delegate.getMaUserTzdSumElement(nd, billTypeCode, userId, requestMeta);  }  public void updateMaUserTzdSumElements(List maTzdSumElementList, RequestMeta requestMeta) {    this.delegate.updateMaUserTzdSumElements(maTzdSumElementList, requestMeta);  }  public Map getMaTzdSumElementMap(int nd, String billTypeCode, RequestMeta requestMeta, String userId) {    return this.delegate.getMaTzdSumElementMap(nd, billTypeCode, requestMeta, userId);  }  public MaTzdSumElement getMaTzdSumElement(int nd, String billTypeCode, String elementCode, RequestMeta requestMeta) {    return this.delegate.getMaTzdSumElement(nd, billTypeCode, elementCode, requestMeta);  }  public void updateMaTzdSumElement(MaTzdSumElement maTzdSumElement, RequestMeta requestMeta) {    this.delegate.updateMaTzdSumElement(maTzdSumElement, requestMeta);  }  public void updateMaTzdSumElements(List maTzdSumElementList, RequestMeta requestMeta) {    this.delegate.updateMaTzdSumElements(maTzdSumElementList, requestMeta);  }  public void updateMaTzdSum(MaTzdSumElement maTzdSumElement, RequestMeta requestMeta) {    this.delegate.updateMaTzdSum(maTzdSumElement, requestMeta);  }  public List getDecBillElementList(int nd, String billTypeCode, RequestMeta requestMeta) {    return this.delegate.getDecBillElementList(nd, billTypeCode, requestMeta);  }  public List getDownDisplayBillElementList(int nd, String billTypeCode, String displayType, RequestMeta requestMeta) {    return this.delegate.getDownDisplayBillElementList(nd, billTypeCode, displayType, requestMeta);  }  public User getUserById(String userId, RequestMeta requestMeta) {    return this.delegate.getUserById(userId, requestMeta);  }  public List getCompanyNumLimTree(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getCompanyNumLimTree(dto, requestMeta);  }  public List getUserGrantFunc(UserFuncDto dto, RequestMeta requestMeta) {    return this.delegate.getUserGrantFunc(dto, requestMeta);  }  public List getUsedCompoFunc(String compoId, RequestMeta requestMeta) {    return this.delegate.getUsedCompoFunc(compoId, requestMeta);  }  public TraceInfoModel getTraceInfo(Long instanceId, RequestMeta requestMeta) {    return this.delegate.getTraceInfo(instanceId, requestMeta);  }  public List getMaGkFuncCompo(RequestMeta requestMeta) {    return this.delegate.getMaGkFuncCompo(requestMeta);  }  public List getAsCompoFunc(String compoId, RequestMeta requestMeta) {    return this.delegate.getAsCompoFunc(compoId, requestMeta);  }  public void updateAsCompoFunc(List asCompoFuncList, RequestMeta requestMeta) {    this.delegate.updateAsCompoFunc(asCompoFuncList, requestMeta);  }  public PrintSetting getCurrentPrintSetting(RequestMeta requestMeta) {    return this.delegate.getCurrentPrintSetting(requestMeta);  }  public List getCurrentPrintTemplate(RequestMeta requestMeta) {    return this.delegate.getCurrentPrintTemplate(requestMeta);  }  public void savePrintSettingFN(PrintSetting printSetting, RequestMeta requestMeta) {    this.delegate.savePrintSettingFN(printSetting, requestMeta);  }  public PrintObject genMainBillPrintObjectFN(BaseBill bill, RequestMeta requestMeta) {    return this.delegate.genMainBillPrintObjectFN(bill, requestMeta);  }  //  public PrintObject genMainSubPrintObject(List billList, RequestMeta requestMeta) {  //    return this.delegate.genMainSubPrintObject(billList, requestMeta);  //  }  public PrintObject genMainBillPrintObjectFN(List billList, RequestMeta requestMeta) {    return this.delegate.genMainBillPrintObjectFN(billList, requestMeta);  }  public PrintObject genMainBillPrintObjectFN(BaseBill bill, String templateCode, RequestMeta requestMeta) {    return this.delegate.genMainBillPrintObjectFN(bill, templateCode, requestMeta);  }  public PrintObject genMainBillPrintObjectFN(List billList, String templateCode, RequestMeta requestMeta) {    return this.delegate.genMainBillPrintObjectFN(billList, templateCode, requestMeta);  }  public boolean isFinalAudit(Long processInstId, RequestMeta requestMeta) {    return this.delegate.isFinalAudit(processInstId, requestMeta);  }  public String getOrgPosiId(String coCode, String orgCode, String posiCode, int nd, RequestMeta requestMeta) {    return this.delegate.getOrgPosiId(coCode, orgCode, posiCode, nd, requestMeta);  }  public void updateAsFileById(AsFile asFile, RequestMeta requestMeta) {    this.delegate.updateAsFileById(asFile, requestMeta);  }  public String uploadFile(AsFile asFile, RequestMeta requestMeta) {    return this.delegate.uploadFile(asFile, requestMeta);  }  public AsFile downloadFile(String fileId, RequestMeta requestMeta) {    return this.delegate.downloadFile(fileId, requestMeta);  }  public AsFile getAsFileById(String fileId, RequestMeta requestMeta) {    return this.delegate.getAsFileById(fileId, requestMeta);  }  public AsFile getLargeAsFileById(String fileId, RequestMeta requestMeta) {    return this.delegate.getLargeAsFileById(fileId, requestMeta);  }  public void deleteFile(String fileId, RequestMeta requestMeta) {    this.delegate.deleteFile(fileId, requestMeta);  }  public List getAsUserNumLim(String userId, String compoId, String funcId, String ctrlField, RequestMeta requestMeta) {    return this.delegate.getAsUserNumLim(userId, compoId, funcId, ctrlField, requestMeta);  }  public List getAsRoleNumLimByUserId(String userId, String compoId, String funcId, String ctrlField, RequestMeta requestMeta) {    return this.delegate.getAsRoleNumLimByUserId(userId, compoId, funcId, ctrlField, requestMeta);  }  public List getReceAccountInfoList(int nd, String coCode, String product, RequestMeta requestMeta) {    return this.delegate.getReceAccountInfoList(nd, coCode, product, requestMeta);  }  public List getAllAsCompo(RequestMeta requestMeta) {    return this.delegate.getAllAsCompo(requestMeta);  }  public AsCompo getAsCompoById(String compoId, RequestMeta requestMeta) {    return this.delegate.getAsCompoById(compoId, requestMeta);  }  public void updateAsCompo(AsCompo asCompo, RequestMeta requestMeta) {    this.delegate.updateAsCompo(asCompo, requestMeta);  }  public List getAsTabColForOrder(String tabName, RequestMeta requestMeta) {    return delegate.getAsTabColForOrder(tabName, requestMeta);  }  public GkGetdataRule getGkGetDataRuleById(String ruleId, RequestMeta requestMeta) {    return delegate.getGkGetDataRuleById(ruleId, requestMeta);  }  public GkGetdataRule getGkGetDataRule(String ruleId, RequestMeta requestMeta) {    return delegate.getGkGetDataRule(ruleId, requestMeta);  }  public Map getDzDateMap(ElementConditionDto elementConditionDto, RequestMeta requestMeta) {    return delegate.getDzDateMap(elementConditionDto, requestMeta);  }  public Map getDzResultMap(ElementConditionDto elementConditionDto, RequestMeta requestMeta) {    return delegate.getDzResultMap(elementConditionDto, requestMeta);  }  public List getDzMonth(ElementConditionDto elementConditionDto, RequestMeta requestMeta) {    return delegate.getDzMonth(elementConditionDto, requestMeta);  }  public List getWfTaskGranter(String userId, RequestMeta requestMeta) {    return delegate.getWfTaskGranter(userId, requestMeta);  }  public void insertWfTaskGranterFN(WfTaskGranter wfTaskGranter, RequestMeta requestMeta) {    this.delegate.insertWfTaskGranterFN(wfTaskGranter, requestMeta);  }  public void deleteWfTaskGranterFN(String userId, RequestMeta requestMeta) {    this.delegate.deleteWfTaskGranterFN(userId, requestMeta);  }  public void updateWfTaskGranterFN(List list, RequestMeta requestMeta) {    this.delegate.updateWfTaskGranterFN(list, requestMeta);  }  public void updateToRelieveWarrant(List list, RequestMeta requestMeta) {    this.delegate.updateToRelieveWarrant(list, requestMeta);  }  public List getMaCpElementMapping(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getMaCpElementMapping(dto, requestMeta);  }  public void saveMaCpElementMapping(List maCpElementMappingList, String type, String useType, RequestMeta requestMeta) {    this.delegate.saveMaCpElementMapping(maCpElementMappingList, type, useType, requestMeta);  }  public void cancelGrantedTaskFN(String userId, RequestMeta requestMeta) {    this.delegate.cancelGrantedTaskFN(userId, requestMeta);  }  public Map getFieldLevelOptions(RequestMeta requestMeta) {    return this.delegate.getFieldLevelOptions(requestMeta);  }  public String getNo(String compoId, String noField, Object bill, RequestMeta requestMeta) {    return this.delegate.getNo(compoId, noField, bill, requestMeta);  }  public String getElementRelationId(RequestMeta requestMeta) {    return delegate.getElementRelationId(requestMeta);  }  public List getElementRelationRules(String compoId, String handleType, String ruleType, RequestMeta requestMeta) {    return delegate.getElementRelationRules(compoId, handleType, ruleType, requestMeta);  }  public String getNumLimCondByCoType(String numLimCompoId, String funcId, RequestMeta requestMeta) {    return delegate.getNumLimCondByCoType(numLimCompoId, funcId, requestMeta);  }  public String getNumLimCondByCoType(String numLimCompoId, String funcId, String ctrlField, RequestMeta requestMeta) {    return delegate.getNumLimCondByCoType(numLimCompoId, funcId, ctrlField, requestMeta);  }  public String getNumLimCondByCoType(String numLimCompoId, String funcId, String ctrlField, boolean isTableContainCoCode, RequestMeta requestMeta) {    return this.delegate.getNumLimCondByCoType(numLimCompoId, funcId, ctrlField, isTableContainCoCode, requestMeta);  }  public String getNumLimCondByCoType(String numLimCompoId, String funcId, boolean isTableContainCoCode, RequestMeta requestMeta) {    return this.delegate.getNumLimCondByCoType(numLimCompoId, funcId, isTableContainCoCode, requestMeta);  }  public void deleteElementRelationRuleById(String ruleId, RequestMeta requestMeta) {    delegate.deleteElementRelationRuleById(ruleId, requestMeta);  }  public void deleteRelationEntryByEntryId(String entityId, RequestMeta requestMeta) {    delegate.deleteRelationEntryByEntryId(entityId, requestMeta);  }  public void insertElementRelationRule(MaElementRelationRule relationRule, RequestMeta requestMeta) {    delegate.insertElementRelationRule(relationRule, requestMeta);  }  public void updateElementRelationRule(MaElementRelationRule relationRule, RequestMeta requestMeta) {    delegate.updateElementRelationRule(relationRule, requestMeta);  }  public String getElementEntryId(RequestMeta requestMeta) {    return delegate.getElementEntryId(requestMeta);  }  public void insertElementRelationEntry(MaElementRelationRuleEntry ruleEntry, RequestMeta requestMeta) {    // TODO Auto-generated method stub    delegate.insertElementRelationEntry(ruleEntry, requestMeta);  }  public void updateElementRelationEntry(MaElementRelationRuleEntry ruleEntry, RequestMeta requestMeta) {    // TODO Auto-generated method stub    delegate.updateElementRelationEntry(ruleEntry, requestMeta);  }  public void saveBiFundXJFN(List insertList, List updateList, RequestMeta requestMeta) {    delegate.saveBiFundXJFN(insertList, updateList, requestMeta);  }  public void saveBiManageXJFN(List insertList, List updateList, RequestMeta requestMeta) {    delegate.saveBiManageXJFN(insertList, updateList, requestMeta);  }  public void saveBiProjectXJFN(List insertList, List updateList, RequestMeta requestMeta) {    delegate.saveBiProjectXJFN(insertList, updateList, requestMeta);  }  public void deleteManageFN(List idList, RequestMeta requestMeta) {    delegate.deleteManageFN(idList, requestMeta);  }  public void deleteFundFN(List idList, RequestMeta requestMeta) {    delegate.deleteFundFN(idList, requestMeta);  }  public void deleteProjectFN(List idList, RequestMeta requestMeta) {    delegate.deleteProjectFN(idList, requestMeta);  }  public Map getWfCanEditField(Long proInstId, RequestMeta requestMeta) {    return delegate.getWfCanEditField(proInstId, requestMeta);  }  public Date getSysDate(RequestMeta requestMeta) {    return delegate.getSysDate(requestMeta);  }  public MaExpSerial getMaExpSerial(Map params, RequestMeta requestMeta) {    // TODO Auto-generated method stub    return delegate.getMaExpSerial(params, requestMeta);  }  public void insertMaExpSerial(MaExpSerial serial, RequestMeta requestMeta) {    // TODO Auto-generated method stub    delegate.insertMaExpSerial(serial, requestMeta);  }  public void updateMaExpSerial(MaExpSerial serial, RequestMeta requestMeta) {    // TODO Auto-generated method stub    delegate.updateMaExpSerial(serial, requestMeta);  }  public Company getDirectorCompany(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getDirectorCompany(dto, requestMeta);  }  public ResultInfo icbcGetDataTrade(AutheInfo autheInfo, RequestMeta requestMeta) {    // TODO Auto-generated method stub    return this.delegate.icbcGetDataTrade(autheInfo, requestMeta);  }  public ResultInfo payTrade(AutheInfo autheInfo, Object businessObject, String bankType, RequestMeta requestMeta) {    // TODO Auto-generated method stub    return this.delegate.payTrade(autheInfo, businessObject, bankType, requestMeta);  }  public ResultInfo queryTrade(AutheInfo autheInfo, Object businessObject, String bankType, RequestMeta requestMeta) {    // TODO Auto-generated method stub    return this.delegate.queryTrade(autheInfo, businessObject, bankType, requestMeta);  }  public ResultInfo testTrade(AutheInfo autheInfo, Object businessObject, String bankType, RequestMeta requestMeta) {    // TODO Auto-generated method stub    return this.delegate.testTrade(autheInfo, businessObject, bankType, requestMeta);  }  public void saveLog(ResultInfo result, RequestMeta requestMeta) {    // TODO Auto-generated method stub    this.delegate.saveLog(result, requestMeta);  }  public Map getMacpRuleDetail(Map params, RequestMeta requestMeta) {    return this.delegate.getMacpRuleDetail(params, requestMeta);  }  public List getMaCpBankBalList(int nd, RequestMeta requestMeta) {    return this.delegate.getMaCpBankBalList(nd, requestMeta);  }  public List getAllDecBillElementList(int nd, String billTypeCode, RequestMeta requestMeta) {    return this.delegate.getAllDecBillElementList(nd, billTypeCode, requestMeta);  }  public List getBankAccountByUserId(int nd, String userId, List accoTypeList, RequestMeta requestMeta) {    return this.delegate.getBankAccountByUserId(nd, userId, accoTypeList, requestMeta);  }  public List getAgentBank(int nd, String accoType, String userId, RequestMeta requestMeta) {    return this.delegate.getAgentBank(nd, accoType, userId, requestMeta);  }  public void deleteSearchStore(UserSearchStore store, RequestMeta requestMeta) {    // TODO Auto-generated method stub    this.delegate.deleteSearchStore(store, requestMeta);  }  public List getUserSearchStore(String userId, String conditionId, int nd, RequestMeta requestMeta) {    // TODO Auto-generated method stub    return this.delegate.getUserSearchStore(userId, conditionId, nd, requestMeta);  }  public void insertuserSearchStore(UserSearchStore store, RequestMeta requestMeta) {    // TODO Auto-generated method stub    this.delegate.insertuserSearchStore(store, requestMeta);  }  public void updateUserSearchStore(UserSearchStore store, RequestMeta requestMeta) {    // TODO Auto-generated method stub    this.delegate.updateUserSearchStore(store, requestMeta);  }  public List getGkBusinessLog(BaseBill bill, RequestMeta requestMeta) {    return this.delegate.getGkBusinessLog(bill, requestMeta);  }  public List getGkBusinessLog(String billId, String tableName, RequestMeta requestMeta) {    return this.delegate.getGkBusinessLog(billId, tableName, requestMeta);  }  public boolean uploadFile(AsFile asFile, String savePath, String fileName, RequestMeta requestMeta) {    return false;  }  public void addUser(User user, String coCode, String orgCode, String posiCode, String groupId, String nd) {  }  public void uploadLargeFile(AsFile asFile, RequestMeta meta) {  }  public byte[] getTbylbFromFileMenuById(String fileId, String packNode, RequestMeta requestMeta) {    return null;  }  public void uploadFileSavePath(AsFile asFile, RequestMeta meta) {  }  public List getAsEmpByUserID(AsEmp emp, RequestMeta meta) {    return null;  }  public List getAllAsOptionById(String optId, RequestMeta requestMeta) {    // TODO Auto-generated method stub    return null;  }//  public List getOrgCodeByDto(ElementConditionDto dto, RequestMeta requestMeta) {//    // TODO Auto-generated method stub//    return null;//  }  public AsFile getAsFileNoContentById(String fileId, RequestMeta requestMeta) {    // TODO Auto-generated method stub    return null;  }  public List getRoleLstSearchCondition(String conditionId, List roles, RequestMeta requestMeta) {    // TODO Auto-generated method stub    return this.delegate.getRoleLstSearchCondition(conditionId, roles, requestMeta);  }  public MaCompany getCompanyByExampleKey(MaCompanyKey key, RequestMeta requestMeta) {    return this.delegate.getCompanyByExampleKey(key, requestMeta);  }}