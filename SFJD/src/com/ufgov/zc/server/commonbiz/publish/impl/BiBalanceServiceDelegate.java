package com.ufgov.zc.server.commonbiz.publish.impl;import java.math.BigDecimal;import java.util.List;import java.util.Map;import com.ufgov.zc.common.bi.model.BiCarryReviewResult;import com.ufgov.zc.common.commonbiz.model.BiBalance;import com.ufgov.zc.common.commonbiz.publish.IBiBalanceServiceDelegate;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.system.dto.PrintObject;import com.ufgov.zc.server.commonbiz.service.IBiBalanceService;public class BiBalanceServiceDelegate implements IBiBalanceServiceDelegate {  private IBiBalanceService biBalanceService;  public IBiBalanceService getBiBalanceService() {    return biBalanceService;  }  public void setBiBalanceService(IBiBalanceService biBalanceService) {    this.biBalanceService = biBalanceService;  }  public List getBiBalance(ElementConditionDto dto, RequestMeta requestMeta) {    return this.biBalanceService.getBiBalance(dto);  }  public List getBiBalanceInfo(ElementConditionDto dto, RequestMeta requestMeta) {    return this.biBalanceService.getBiBalanceInfo(dto);  }  public List getBiBalanceForCd(ElementConditionDto dto, RequestMeta requestMeta) {    return this.biBalanceService.getBiBalanceForCd(dto);  }  public BiBalance getBiBalanceById(String id, RequestMeta requestMeta) {    return this.biBalanceService.getBiBalanceById(id);  }  public int updateBiBalanceForDpAdjust(BigDecimal adjustMoney, String biBalanceId, RequestMeta requestMeta) {    return this.biBalanceService.updateBiBalanceForDpAdjust(adjustMoney, biBalanceId);  }  public List getBiBalanceForAm(ElementConditionDto dto, RequestMeta requestMeta) {    return this.biBalanceService.getBiBalanceForAm(dto);  }  public List getBiBalanceForAmPvmDpEdit(ElementConditionDto dto, RequestMeta requestMeta) {    return this.biBalanceService.getBiBalanceForAmPvmDpEdit(dto);  }  public List getBiBalanceForDbiTbi(ElementConditionDto dto, RequestMeta requestMeta) {    return this.biBalanceService.getBiBalanceForDbiTbi(dto);  }  public void updateBiBalanceForAm(BigDecimal adjustMoney, String biBalanceId, RequestMeta requestMeta) {    this.biBalanceService.updateBiBalanceForAm(adjustMoney, biBalanceId);  }  public String updateBiBalanceForPreAmToPay(String biBalanceIds, int nd, RequestMeta requestMeta) {    return this.biBalanceService.updateBiBalanceForPreAmToPay(biBalanceIds, nd);  }  public List getCarryDownInfo(Map params, RequestMeta requestMeta) {    return this.biBalanceService.getCarryDownInfo(params);  }  public byte[] generateCarryDownDoc(List carryDownInfo, int nd, RequestMeta requestMeta) {    return this.biBalanceService.generateCarryDownDoc(carryDownInfo, nd);  }  public byte[] generateCarryDownDoc(List carryDownInfo, byte[] template, int nd, RequestMeta requestMeta) {    return this.biBalanceService.generateCarryDownDoc(carryDownInfo, template, nd);  }  public List getGeneratedDocList(int nd, RequestMeta requestMeta) {    return this.biBalanceService.getGeneratedDocList(nd);  }  public void insertBiCarryReviewResult(BiCarryReviewResult biCarryReviewResult, RequestMeta requestMeta) {    this.biBalanceService.insertBiCarryReviewResult(biCarryReviewResult);  }  public List getBiCarryReviewResult(String coCode, int nd, RequestMeta requestMeta) {    return this.biBalanceService.getBiCarryReviewResult(coCode, nd);  }  public PrintObject genBiCdMoneyCheckPrintObjectFN(String coCode, int nd, RequestMeta requestMeta) {    return this.biBalanceService.genBiCdMoneyCheckPrintObject(coCode, nd);  }  public List getBiBalanceByDto(ElementConditionDto dto, RequestMeta requestMeta) {    return biBalanceService.getBiBalanceByDto(dto);  }  public List getBiBalanceForDz(ElementConditionDto dto, RequestMeta requestMeta) {    return biBalanceService.getBiBalanceForDz(dto);  }  public void updateBiBalanceOperateType(List biBalanceIdList, String operateType, RequestMeta requestMeta) {    biBalanceService.updateBiBalanceOperateType(biBalanceIdList, operateType);  }  public List getAllBiBalance(ElementConditionDto dto, RequestMeta requestMeta) {    return biBalanceService.getAllBiBalanceByDto(dto);  }}