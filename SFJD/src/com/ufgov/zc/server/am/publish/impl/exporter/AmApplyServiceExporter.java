package com.ufgov.zc.server.am.publish.impl.exporter;import java.util.Date;import java.util.List;import java.util.Map;import com.ufgov.zc.common.am.model.AmApply;import com.ufgov.zc.common.am.publish.IAmApplyServiceDelegate;import com.ufgov.zc.common.commonbiz.model.BankAccount;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.system.dto.PrintObject;import com.ufgov.zc.common.system.model.User;import com.ufgov.zc.server.system.SpringContext;public class AmApplyServiceExporter implements IAmApplyServiceDelegate {  private IAmApplyServiceDelegate delegate = (IAmApplyServiceDelegate) SpringContext  .getBean("amApplyServiceDelegate");  public List getAmApplyForIssum(ElementConditionDto dto, RequestMeta meta) {    return delegate.getAmApplyForIssum(dto, meta);  }  public void sendForAmBpaeEditFN(List selAmApplyList, RequestMeta meta) {    delegate.sendForAmBpaeEditFN(selAmApplyList, meta);  }  public List getAmApplyForAmBpaeAuditList(ElementConditionDto dto, RequestMeta meta) {    return delegate.getAmApplyForAmBpaeAuditList(dto, meta);  }  public List getAmApplyForApplySum(ElementConditionDto dto, RequestMeta meta) {    return delegate.getAmApplyForApplySum(dto, meta);  }  public AmApply auditForAmBpAeEditFN(AmApply amApply, RequestMeta meta) {    return delegate.auditForAmBpAeEditFN(amApply, meta);  }  public void auditForAmBpAeEditFN(List amApplyList, RequestMeta meta) {    delegate.auditForAmBpAeEditFN(amApplyList, meta);  }  public void auditForAmBpAeEditFN(List amApplyList, String opinion, RequestMeta meta) {    delegate.auditForAmBpAeEditFN(amApplyList, opinion, meta);  }  public void blankoutForAmBpAeEditFN(AmApply amApply, RequestMeta requestMeta) {    delegate.blankoutForAmBpAeEditFN(amApply, requestMeta);  }  public void blankoutForAmBpAeEditFN(List amApplyList, RequestMeta requestMeta) {    delegate.blankoutForAmBpAeEditFN(amApplyList, requestMeta);  }  public void callbackForAmBpAeEditFN(AmApply amApply, RequestMeta requestMeta) {    delegate.callbackForAmBpAeEditFN(amApply, requestMeta);  }  public void callbackForAmBpAeEditFN(List amApplyList, RequestMeta requestMeta) {    delegate.callbackForAmBpAeEditFN(amApplyList, requestMeta);  }  public int deleteForAmBpAeEditFN(AmApply amApply, RequestMeta meta) {    return delegate.deleteForAmBpAeEditFN(amApply, meta);  }  public void deleteForAmBpAeEditFN(List amApplyList, RequestMeta meta) {    delegate.deleteForAmBpAeEditFN(amApplyList, meta);  }  public AmApply saveAndSendForAmBpAeEditFN(AmApply amApply, RequestMeta meta) {    return delegate.saveAndSendForAmBpAeEditFN(amApply, meta);  }  public AmApply saveForAmBpAeEditFN(AmApply amApply, RequestMeta meta) {    return delegate.saveForAmBpAeEditFN(amApply, meta);  }  public AmApply sendForAmBpAeEditFN(AmApply amApply, RequestMeta meta) {    return delegate.sendForAmBpAeEditFN(amApply, meta);  }  public void sendForAmBpAeEditFN(List amApplyList, RequestMeta meta) {    delegate.sendForAmBpAeEditFN(amApplyList, meta);  }  public AmApply unAuditForAmBpAeEditFN(AmApply amApply, RequestMeta requestMeta) {    return delegate.unAuditForAmBpAeEditFN(amApply, requestMeta);  }  public void unAuditForAmBpAeEditFN(List amApplyList, RequestMeta requestMeta) {    delegate.unAuditForAmBpAeEditFN(amApplyList, requestMeta);  }  public AmApply untreadForAmBpAeEditFN(AmApply amApply, RequestMeta meta) {    return delegate.untreadForAmBpAeEditFN(amApply, meta);  }  public void untreadForAmBpAeEditFN(List amApplyList, RequestMeta meta) {    delegate.untreadForAmBpAeEditFN(amApplyList, meta);  }  public List getAmApplyForAmPafpv(ElementConditionDto dto, RequestMeta requestMeta) {    return delegate.getAmApplyForAmPafpv(dto, requestMeta);  }  public String AmApplyCreateAmVoucher(String coCode, List amApplyList, int nd, User user,  BankAccount payBankAccount, Date createDate, String isSum, RequestMeta requestMeta) {    return delegate.AmApplyCreateAmVoucher(coCode, amApplyList, nd, user, payBankAccount, createDate, isSum,    requestMeta);  }  public String AmApplyCreateAmVoucher(List amApplyList, Date createDate, String isSum,  RequestMeta requestMeta) {    return delegate.AmApplyCreateAmVoucher(amApplyList, createDate, isSum, requestMeta);  }  public void increasePrintTimes(List amApplyIdList, RequestMeta requestMeta) {    delegate.increasePrintTimes(amApplyIdList, requestMeta);  }  public List getAmApplyForAmApplyQueryList(ElementConditionDto dto, RequestMeta requestMeta) {    return delegate.getAmApplyForAmApplyQueryList(dto, requestMeta);  }  public List getAmApplyForProvider(ElementConditionDto dto, RequestMeta meta) {    return delegate.getAmApplyForProvider(dto, meta);  }  public String blankOutApply(Map map, RequestMeta requestMeta) {    return delegate.blankOutApply(map, requestMeta);  }  public void cancelSumAmApplyFN(List amApplyList, RequestMeta requestMeta) {    this.delegate.cancelSumAmApplyFN(amApplyList, requestMeta);  }  public void sumAmApplyFN(List amApplyList, RequestMeta requestMeta) {    this.delegate.sumAmApplyFN(amApplyList, requestMeta);  }  public List getAmApplyBySumAmApplyId(String sumAmApplyId, RequestMeta meta) {    return this.delegate.getAmApplyBySumAmApplyId(sumAmApplyId, meta);  }  public PrintObject genSumMainSubPrintObjectFN(List printList, RequestMeta requestMeta) {    return this.delegate.genSumMainSubPrintObjectFN(printList, requestMeta);  }  public List getSpecialAccount(ElementConditionDto dto, RequestMeta requestMeta) {    return this.delegate.getSpecialAccount(dto, requestMeta);  }  public void updateAmApplyReceInfo(List amApplyList, RequestMeta requestMeta) {    this.delegate.updateAmApplyReceInfo(amApplyList, requestMeta);  }  public void updateProcDateForAmBpAeEditFN(List amApplyList, RequestMeta requestMeta) {    this.delegate.updateProcDateForAmBpAeEditFN(amApplyList, requestMeta);  }}