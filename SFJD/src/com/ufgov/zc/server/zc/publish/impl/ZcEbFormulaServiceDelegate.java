package com.ufgov.zc.server.zc.publish.impl;import java.util.Date;import java.util.List;import java.util.Map;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.zc.model.ZcEbFormula;import com.ufgov.zc.common.zc.model.ZcEbFormulaItem;import com.ufgov.zc.common.zc.publish.IZcEbFormulaServiceDelegate;import com.ufgov.zc.server.system.util.NumUtil;import com.ufgov.zc.server.zc.service.IZcEbFormulaService;public class ZcEbFormulaServiceDelegate implements IZcEbFormulaServiceDelegate {	private IZcEbFormulaService zcEbFormulaService;	public IZcEbFormulaService getZcEbFormulaService() {		return zcEbFormulaService;	}	public void setZcEbFormulaService(IZcEbFormulaService zcEbFormulaService) {		this.zcEbFormulaService = zcEbFormulaService;	}	public List getZcEbFormulaList(ElementConditionDto dto, RequestMeta meta) {		dto.setNd(meta.getSvNd());		return zcEbFormulaService.getZcEbFormulaList(dto, meta);	}	public List getZcEbFormulaItemList(String formulaCode,			ElementConditionDto dto, RequestMeta meta) {		return zcEbFormulaService.getZcEbFormulaItemList(formulaCode, dto);	}	public List getZcEbFormulaItemList(Map map, RequestMeta meta) {		return zcEbFormulaService.getZcEbFormulaItemList(map);	}	public List getZcEbFormulaItemByPcode(String formulaCode, String pcode,			RequestMeta meta) {		return zcEbFormulaService.getZcEbFormulaItemByPcode(formulaCode, pcode);	}	public void deleteListForZcEbFormula(List zcFormulaList, RequestMeta meta) {		// StringBuffer errorInfo = new StringBuffer("id为");		// StringBuffer stackTraceMessage = new StringBuffer();		// boolean fail = false;		for (int i = 0; i < zcFormulaList.size(); i++) {			ZcEbFormula zcEbFormula = (ZcEbFormula) zcFormulaList.get(i);			// try {			int num = zcEbFormulaService					.deleteForZcEbFormulaByPackCode(zcEbFormula.getPackCode());		}	}	public void deleteListForZcEbFormulaItem(List zcForumlaItemList,			RequestMeta meta) {		// StringBuffer errorInfo = new StringBuffer("id为");		// StringBuffer stackTraceMessage = new StringBuffer();		// boolean fail = false;		for (int i = 0; i < zcForumlaItemList.size(); i++) {			ZcEbFormulaItem zcEbFormulaItem = (ZcEbFormulaItem) zcForumlaItemList					.get(i);			// try {			int num = zcEbFormulaService					.deleteForZcEbFormulaItem(zcEbFormulaItem);			// if (num == 0) {			// errorInfo.append(": ");			// errorInfo.append(zcEbFormulaItem.getFormulaCode());			// errorInfo.append("已被删除");			// fail = true;			// }			// } catch (Exception ex) {			// errorInfo.append(": ");			// errorInfo.append(zcEbFormulaItem.getFormulaCode());			// stackTraceMessage.append(ExceptionUtil.getStackTrace(ex));			// fail = true;			// }		}		// errorInfo.append("的指标删除失败！");		// if (fail) {		// BusinessException be = new BusinessException(errorInfo.toString());		// be.setStackTraceMessage(stackTraceMessage.toString());		// throw be;		// }	}	public void deleteZcEbFormula(ZcEbFormula zcEbFormula, RequestMeta meta) {		int num = zcEbFormulaService.deleteForZcEbFormulaByPackCode(zcEbFormula				.getPackCode());	}	public void deleteZcEbFormulaItem(ZcEbFormulaItem zcEbFormulaItem,			RequestMeta meta) {		int num = zcEbFormulaService.deleteForZcEbFormulaItem(zcEbFormulaItem);	}	public ZcEbFormula getZcEbFormula(String packCode, RequestMeta meta) {		return zcEbFormulaService.getZcEbFormula(packCode);	}	public ZcEbFormulaItem getZcEbFormulaItem(String formulaCode,			String itemCode, RequestMeta meta) {		return zcEbFormulaService.getZcEbFormulaItem(formulaCode, itemCode);	}	public ZcEbFormula updateZcEbFormula(ZcEbFormula zcEbFormula,			RequestMeta meta) {		return zcEbFormulaService.updateZcEbFormula(zcEbFormula);	}	public ZcEbFormulaItem updateZcEbFormulaItem(			ZcEbFormulaItem zcEbFormulaItem, RequestMeta meta) {		return zcEbFormulaService.updateZcEbFormulaItem(zcEbFormulaItem);	}	public ZcEbFormula insertZcEbFormula(ZcEbFormula zcEbFormula,			RequestMeta meta) {		Date createDate = new Date();		zcEbFormula.setExecuteDate(createDate);		String compoId = meta.getCompoId();		String formulaCode = NumUtil.getInstance().getNo(compoId,				"FORMULA_CODE", zcEbFormula);		zcEbFormula.setFormulaCode(formulaCode);		zcEbFormula.setExecutor(meta.getSvUserName());		zcEbFormula.setNd(new Integer(meta.getSvNd()));		return zcEbFormulaService.insertZcEbFormula(zcEbFormula);	}	public ZcEbFormulaItem insertZcEbFormulaItem(			ZcEbFormulaItem zcEbFormulaItem, RequestMeta meta) {		String compoId = meta.getCompoId();		String itemCode = NumUtil.getInstance().getNo(compoId, "ITEM_CODE",				zcEbFormulaItem);		zcEbFormulaItem.setItemCode(itemCode);		return zcEbFormulaService.insertZcEbFormulaItem(zcEbFormulaItem);	}	public void insertZcEbFormulaItemByTemplateItem(List zcEbFormulaItemList,			RequestMeta meta) {		zcEbFormulaService				.insertZcEbFormulaItemByTemplateItem(zcEbFormulaItemList);	}	public ZcEbFormula saveZcEbFormula(ZcEbFormula zcEbFormula, RequestMeta meta) {		zcEbFormula.setExecutor(meta.getSvUserName());		zcEbFormula.setNd(new Integer(meta.getSvNd()));		zcEbFormula.setAgency(meta.getSvCoCode());		String compoId = meta.getCompoId();		return zcEbFormulaService.saveZcEbFormula(zcEbFormula, compoId);	}	public ZcEbFormulaItem saveZcEbFormulaItem(ZcEbFormulaItem zcEbFormulaItem,			RequestMeta meta) {		String itemCode = zcEbFormulaItem.getItemCode();		if (null == itemCode || "".equals(itemCode)) {			return insertZcEbFormulaItem(zcEbFormulaItem, meta);		} else {			return updateZcEbFormulaItem(zcEbFormulaItem, meta);		}	}	public void saveZcEbFormulaItemList(List zcEbFormulaItemList,			RequestMeta meta) {		zcEbFormulaService.saveZcEbFormulaItemList(zcEbFormulaItemList, meta);	}	public int isExistsByItemName(String formulaCode, String itemName,			String itemCode, RequestMeta meta) {		return zcEbFormulaService.isExistsByItemName(formulaCode, itemName,				itemCode);	}	public List getZcEbFormulaParamList(String formulaCode, RequestMeta meta) {		return zcEbFormulaService.getZcEbFormulaParamList(formulaCode);	}	public void saveZcEbFormulaParam(List params, String formulaCode,			RequestMeta meta) {		zcEbFormulaService.saveZcEbFormulaParam(params, formulaCode);	}	public ZcEbFormula getZcEbFormulaByPackCode(ElementConditionDto dto,			RequestMeta meta) {		return zcEbFormulaService.getZcEbFormulaByPackCode(dto);	}	public ZcEbFormula getZcEbFormulaById(ElementConditionDto dto,			RequestMeta meta) {		return zcEbFormulaService.getZcEbFormulaById(dto);	}	public List getZcEbFormulaListByProjCode(ElementConditionDto dto,			RequestMeta requestMeta) {		return zcEbFormulaService.getZcEbFormulaListByProjCode(dto);	}	public int deleteForZcEbFormulaItemByFormulaCode(String formulaCode,			RequestMeta requestMeta) {		return zcEbFormulaService				.deleteForZcEbFormulaItemByFormulaCode(formulaCode);	}	public void saveZcEbFormula(ZcEbFormula zcEbFormula,List packLst,String projCode, RequestMeta meta) {		// TODO Auto-generated method stub		zcEbFormulaService.saveZcEbFormula(zcEbFormula,packLst,projCode, meta);	}     public List getFormulaExportDatas(List projIdLst, RequestMeta meta) {    // TODO Auto-generated method stub    return zcEbFormulaService.getFormulaExportDatas(projIdLst, meta);  }     public String importTransDatasFN(ZcEbFormula bill, RequestMeta meta) {    // TODO Auto-generated method stub    return zcEbFormulaService.importTransDatasFN(bill, meta);  }}