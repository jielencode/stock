/** * ZcEbPlanServiceDelegate.java * com.ufgov.gk.server.zc.publish.impl * Administrator * 2010-5-26 */package com.ufgov.zc.server.zc.publish.impl;import java.util.List;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.zc.model.ZcEbPlan;import com.ufgov.zc.common.zc.model.ZcWorkPlan;import com.ufgov.zc.common.zc.model.ZcWorkPlanDynamic;import com.ufgov.zc.common.zc.publish.IZcEbPlanServiceDelegate;import com.ufgov.zc.server.zc.service.IZcEbPlanService;/** * @author Administrator * */public class ZcEbPlanServiceDelegate implements IZcEbPlanServiceDelegate {  private IZcEbPlanService zcEbPlanService;  public List getZcEbPlan(ElementConditionDto elementConditionDto, RequestMeta requestMeta) {    return this.zcEbPlanService.getZcEbPlan(elementConditionDto, requestMeta);  }  public ZcEbPlan getZcEbPlanByID(String planCode, RequestMeta requestMeta) {    return this.zcEbPlanService.getZcEbPlanByID(planCode);  }  public ZcEbPlan getZcEbPlanByProjCode(String projCode, RequestMeta requestMeta) {    return this.zcEbPlanService.getZcEbPlanByProjCode(projCode);  }  /**   * @return the zcEbPlanService   */  public IZcEbPlanService getZcEbPlanService() {    return zcEbPlanService;  }  /**   * @param zcEbPlanService the zcEbPlanService to set   */  public void setZcEbPlanService(IZcEbPlanService zcEbPlanService) {    this.zcEbPlanService = zcEbPlanService;  }  public boolean deletePlan(ZcEbPlan plan, RequestMeta requestMeta) {    return this.zcEbPlanService.deletePlan(plan, requestMeta);  }  public ZcEbPlan save(ZcEbPlan plan, RequestMeta requestMeta) {    return this.zcEbPlanService.save(plan, requestMeta);  }  //以下为工作计划和工作动态部分  public void deleteWorkPlans(ElementConditionDto dto, RequestMeta meta) {    this.zcEbPlanService.deleteWorkPlans(dto, meta);  }  public ZcWorkPlan saveWorkPlan(ZcWorkPlan workPlan, RequestMeta meta) {    return this.zcEbPlanService.saveWorkPlan(workPlan, meta);  }  public void updateWorkPlan(ZcWorkPlan workPlan, RequestMeta meta) {    this.zcEbPlanService.updateWorkPlan(workPlan, meta);  }  public List getZcWorkPlans(ElementConditionDto dto, RequestMeta meta) {    return this.zcEbPlanService.getZcWorkPlans(dto, meta);  }  public List getZcWorkPlansWithDetails(ElementConditionDto dto, RequestMeta meta) {    return this.zcEbPlanService.getZcWorkPlansWithDetails(dto, meta);  }  public List getZcWorkPlanDetailsWithWorkPlanID(ElementConditionDto dto, RequestMeta meta) {    return this.zcEbPlanService.getZcWorkPlanDetailsWithWorkPlanID(dto, meta);  }  public ZcWorkPlan newCommitFN(ZcWorkPlan currPlan, boolean isFromList, RequestMeta requestMeta) throws Exception {    return this.zcEbPlanService.newCommitFN(currPlan, isFromList, requestMeta);  }  public ZcWorkPlan auditFN(ZcWorkPlan plan, RequestMeta requestMeta) {    return this.zcEbPlanService.auditFN(plan, requestMeta);  }  public ZcWorkPlan callbackFN(ZcWorkPlan plan, RequestMeta requestMeta) {    return this.zcEbPlanService.callbackFN(plan, requestMeta);  }  public ZcWorkPlan unAuditFN(ZcWorkPlan plan, RequestMeta requestMeta) {    return this.zcEbPlanService.unAuditFN(plan, requestMeta);  }  public ZcWorkPlan untreadFN(ZcWorkPlan plan, RequestMeta requestMeta) {    return this.zcEbPlanService.untreadFN(plan, requestMeta);  }  //以下为工作动态部分  public void deleteWorkPlanDynamics(ElementConditionDto dto, RequestMeta meta) {    this.zcEbPlanService.deleteWorkPlanDynamics(dto, meta);  }  public ZcWorkPlanDynamic saveWorkPlanDynamic(ZcWorkPlanDynamic workPlan, RequestMeta meta) {    return this.zcEbPlanService.saveWorkPlanDynamic(workPlan, meta);  }  public void updateWorkPlanDynamic(ZcWorkPlanDynamic workPlan, RequestMeta meta) {    this.zcEbPlanService.updateWorkPlanDynamic(workPlan, meta);  }  public List getZcWorkPlanDynamics(ElementConditionDto dto, RequestMeta meta) {    return this.zcEbPlanService.getZcWorkPlanDynamics(dto, meta);  }  public List getZcWorkPlanDynamicsWithDetails(ElementConditionDto dto, RequestMeta meta) {    return this.zcEbPlanService.getZcWorkPlanDynamicsWithDetails(dto, meta);  }  public ZcWorkPlanDynamic newCommitFN(ZcWorkPlanDynamic currPlan, boolean isFromList, RequestMeta requestMeta) throws Exception {    return this.zcEbPlanService.newCommitFN(currPlan, isFromList, requestMeta);  }  public ZcWorkPlanDynamic auditFN(ZcWorkPlanDynamic plan, RequestMeta requestMeta) {    return this.zcEbPlanService.auditFN(plan, requestMeta);  }  public ZcWorkPlanDynamic callbackFN(ZcWorkPlanDynamic plan, RequestMeta requestMeta) {    return this.zcEbPlanService.callbackFN(plan, requestMeta);  }  public ZcWorkPlanDynamic unAuditFN(ZcWorkPlanDynamic plan, RequestMeta requestMeta) {    return this.zcEbPlanService.unAuditFN(plan, requestMeta);  }  public ZcWorkPlanDynamic untreadFN(ZcWorkPlanDynamic plan, RequestMeta requestMeta) {    return this.zcEbPlanService.untreadFN(plan, requestMeta);  }  public ZcEbPlan getHistoryZcEbPlan(ElementConditionDto dto, RequestMeta requestMeta) {    return this.zcEbPlanService.getHistoryZcEbPlan(dto);  }  public List getZcEbPlanPackListByProjCode(String projCode, RequestMeta requestMeta) {    return this.zcEbPlanService.getZcEbPlanPackListByProjCode(projCode);  }}