package com.ufgov.zc.server.zc.publish.impl;import java.util.List;import java.util.Map;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.system.exception.BusinessException;import com.ufgov.zc.common.system.util.ExceptionUtil;import com.ufgov.zc.common.zc.model.ZcEbBulletinWordMold;import com.ufgov.zc.common.zc.publish.IZcEbBulletinWordMoldServiceDelegate;import com.ufgov.zc.server.system.service.IAsFileService;import com.ufgov.zc.server.zc.service.IZcEbBulletinWordMoldService;public class ZcEbBulletinWordMoldServiceDelegate implements IZcEbBulletinWordMoldServiceDelegate {  private IZcEbBulletinWordMoldService zcEbBulletinWordMoldService;  private IAsFileService asFileService;  public IZcEbBulletinWordMoldService getZcEbBulletinWordMoldService() {    return zcEbBulletinWordMoldService;  }  public void setZcEbBulletinWordMoldService(IZcEbBulletinWordMoldService zcEbBulletinWordMoldService) {    this.zcEbBulletinWordMoldService = zcEbBulletinWordMoldService;  }  public void setAsFileService(IAsFileService asFileService) {    this.asFileService = asFileService;  }  public List getZcEbBulletinWordMold(ElementConditionDto dto, RequestMeta meta) {    return zcEbBulletinWordMoldService.getZcEbBulletinWordMold(dto);  }  public IAsFileService getAsFileService() {    return asFileService;  }  public void unableListFN(List beanList, RequestMeta meta) {    StringBuffer errorInfo = new StringBuffer("id为");    StringBuffer stackTraceMessage = new StringBuffer();    boolean fail = false;    for (int i = 0; i < beanList.size(); i++) {      ZcEbBulletinWordMold bean = (ZcEbBulletinWordMold) beanList.get(i);      try {        bean.setStatus("0");        zcEbBulletinWordMoldService.updateWordMold(bean);      } catch (Exception ex) {        errorInfo.append(": ");        errorInfo.append(bean.getBulletinMoldCode());        stackTraceMessage.append(ExceptionUtil.getStackTrace(ex));        fail = true;      }    }    errorInfo.append("的单据处理失败！");    if (fail) {      BusinessException be = new BusinessException(errorInfo.toString());      be.setStackTraceMessage(stackTraceMessage.toString());      throw be;    }  }  public void insertFN(ZcEbBulletinWordMold bean, RequestMeta meta) {    StringBuffer errorInfo = new StringBuffer("id为");    StringBuffer stackTraceMessage = new StringBuffer();    boolean fail = false;    try {      zcEbBulletinWordMoldService.insert(bean);    } catch (Exception ex) {      errorInfo.append(": ");      errorInfo.append(bean.getBulletinMoldCode());      stackTraceMessage.append(ExceptionUtil.getStackTrace(ex));      fail = true;    }    errorInfo.append("的单据插入失败！");    if (fail) {      BusinessException be = new BusinessException(errorInfo.toString());      be.setStackTraceMessage(stackTraceMessage.toString());      throw be;    }  }  public void enableListFN(List beanList, RequestMeta meta) {    StringBuffer errorInfo = new StringBuffer("id为");    StringBuffer stackTraceMessage = new StringBuffer();    boolean fail = false;    for (int i = 0; i < beanList.size(); i++) {      ZcEbBulletinWordMold bean = (ZcEbBulletinWordMold) beanList.get(i);      try {        bean.setStatus("2");        zcEbBulletinWordMoldService.updateWordMold(bean);      } catch (Exception ex) {        errorInfo.append(": ");        errorInfo.append(bean.getBulletinMoldCode());        stackTraceMessage.append(ExceptionUtil.getStackTrace(ex));        fail = true;      }    }    errorInfo.append("的单据处理失败！");    if (fail) {      BusinessException be = new BusinessException(errorInfo.toString());      be.setStackTraceMessage(stackTraceMessage.toString());      throw be;    }  }  public void updateWordMoldFN(ZcEbBulletinWordMold bean, RequestMeta meta) {    StringBuffer errorInfo = new StringBuffer("id为");    StringBuffer stackTraceMessage = new StringBuffer();    boolean fail = false;    try {      zcEbBulletinWordMoldService.updateWordMold(bean);    } catch (Exception ex) {      errorInfo.append(": ");      errorInfo.append(bean.getBulletinMoldCode());      stackTraceMessage.append(ExceptionUtil.getStackTrace(ex));      fail = true;    }    errorInfo.append("的单据更新失败！");    if (fail) {      BusinessException be = new BusinessException(errorInfo.toString());      be.setStackTraceMessage(stackTraceMessage.toString());      throw be;    }  }  public void updateFN(ZcEbBulletinWordMold bean, RequestMeta meta) {    StringBuffer errorInfo = new StringBuffer("id为");    StringBuffer stackTraceMessage = new StringBuffer();    boolean fail = false;    try {      zcEbBulletinWordMoldService.update(bean);    } catch (Exception ex) {      errorInfo.append(": ");      errorInfo.append(bean.getBulletinMoldCode());      stackTraceMessage.append(ExceptionUtil.getStackTrace(ex));      fail = true;    }    errorInfo.append("的单据更新失败！");    if (fail) {      BusinessException be = new BusinessException(errorInfo.toString());      be.setStackTraceMessage(stackTraceMessage.toString());      throw be;    }  }  /**   * 删除   * @param bulletin   * @param meta   */  public void deleteFN(ZcEbBulletinWordMold bean, RequestMeta meta) {    StringBuffer errorInfo = new StringBuffer("id为");    StringBuffer stackTraceMessage = new StringBuffer();    boolean fail = false;    try {      asFileService.deleteFile(bean.getFileID());      zcEbBulletinWordMoldService.delete(bean);    } catch (Exception ex) {      errorInfo.append(": ");      errorInfo.append(bean.getBulletinMoldCode());      stackTraceMessage.append(ExceptionUtil.getStackTrace(ex));      fail = true;    }    errorInfo.append("的单据更新失败！");    if (fail) {      BusinessException be = new BusinessException(errorInfo.toString());      be.setStackTraceMessage(stackTraceMessage.toString());      throw be;    }  }  /**   * 批量删除   * @param bulletinList   * @param meta   */  public void deleteListFN(List wordMoldList, RequestMeta meta) {    StringBuffer errorInfo = new StringBuffer("id为");    StringBuffer stackTraceMessage = new StringBuffer();    boolean fail = false;    for (int i = 0; i < wordMoldList.size(); i++) {      ZcEbBulletinWordMold bean = (ZcEbBulletinWordMold) wordMoldList.get(i);      try {        asFileService.deleteFile(bean.getFileID());        zcEbBulletinWordMoldService.delete(bean);      } catch (Exception ex) {        errorInfo.append(": ");        errorInfo.append(bean.getBulletinMoldCode());        stackTraceMessage.append(ExceptionUtil.getStackTrace(ex));        fail = true;      }    }    errorInfo.append("的单据处理失败！");    if (fail) {      BusinessException be = new BusinessException(errorInfo.toString());      be.setStackTraceMessage(stackTraceMessage.toString());      throw be;    }  }  public ZcEbBulletinWordMold selectMoldByPrimaryKey(String wordMoldID, RequestMeta requestMeta) {    return zcEbBulletinWordMoldService.selectMoldByPrimaryKey(wordMoldID);  }  public List getZcEbBulletinWordMoldParam(RequestMeta meta, String moldID) {    return zcEbBulletinWordMoldService.getZcEbBulletinWordMoldParam(moldID);  }  public List getZcEbDataViewCol(RequestMeta meta, String dataViewName) {    return zcEbBulletinWordMoldService.getZcEbDataViewCol(dataViewName);  }  /**   * 获得公告模板参数值   * @param dto   * @param meta   */  public Map getZcEbBulletinWordMoldParamValue(RequestMeta meta, Map paramMap) {    return zcEbBulletinWordMoldService.getZcEbBulletinWordMoldParamValue(paramMap);  }  /**   * 获得公告模版参数子表值   * @param meta   * @param paramMap   * @return   */  public List getZcEbBulletinMoldTableParamValue(RequestMeta meta, Map paramMap) {    return zcEbBulletinWordMoldService.getZcEbBulletinMoldTableParamValue(paramMap);  }}