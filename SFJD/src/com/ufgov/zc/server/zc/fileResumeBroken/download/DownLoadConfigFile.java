package com.ufgov.zc.server.zc.fileResumeBroken.download;import java.io.BufferedReader;import java.io.File;import java.io.FileInputStream;import java.io.IOException;import java.io.InputStreamReader;import java.util.HashMap;import java.util.Map;public class DownLoadConfigFile {  private Map parameterMap = new HashMap();  private Map returnMap = new HashMap();  public Map getParameterMap() {    return parameterMap;  }  public void setParameterMap(Map parameterMap) {    this.parameterMap = parameterMap;  }  public Map getReturnMap() {    return returnMap;  }  public void setReturnMap(Map returnMap) {    this.returnMap = returnMap;  }  public DownLoadConfigFile(Map parameterMap, String functionDo) {    setParameterMap(parameterMap);  }  public void start() {    String fileName = (String) parameterMap.get("FILENAME");    if (fileName == null || "".equals(fileName)) {      fileName = "FTS.ini";    }    String userDir = System.getProperty("user.dir");    String basePath = (String) parameterMap.get("SERVERDIRECTORY");    if (basePath == null || "".equals(basePath)) {      basePath = userDir + "/config/";    }    File file = new File(basePath + fileName);    if (!file.exists()) {      returnMap.put("FILEEXIST", "false");      returnMap.put("FAILREASON", "服务器端路径" + basePath + "下不存在文件名为" + fileName + "的文件，您可以通过指定SERVERDIRECTORY参数的值到其它位置读取文件.");    } else {      returnMap.put("FILEEXIST", "true");    }    int len = -1;    byte[] buff = new byte[(int) file.length()];    FileInputStream in = null;    try {      in = new FileInputStream(file);      if ((len = in.read(buff)) != -1) {        if (len < buff.length) {          byte[] buf = new byte[len];          for (int k = 0; k < buf.length; k++) {            buf[k] = buff[k];          }          returnMap.put("FILECONTENT", buf);        } else {          returnMap.put("FILECONTENT", buff);        }      }      in.close();    } catch (Exception e) {      e.printStackTrace();      returnMap.put("FILEEXIST", "false");      returnMap.put("FAILREASON", "参数值对：{FILENAME:" + (String) parameterMap.get("FILENAME") + ",SERVERDIRECTORY:"      + (String) parameterMap.get("SERVERDIRECTORY") + "}，服务器端文件" + file.getAbsolutePath() + "读取失败，详细：" + e.getMessage());    } finally {      if (in != null) {        try {          in.close();        } catch (IOException e) {          e.printStackTrace();        }      }    }    try {      BufferedReader bufRead = new BufferedReader(new InputStreamReader(new FileInputStream(file)));      StringBuffer content = new StringBuffer();      String str = null;      while ((str = bufRead.readLine()) != null) {        content.append(str);        content.append("\n");      }      returnMap.put("FILESTRING", content.toString());    } catch (IOException ioe) {      ioe.printStackTrace();      returnMap.put("FILEEXIST", "false");      returnMap.put("FAILREASON", "参数值对：{FILENAME:" + (String) parameterMap.get("FILENAME") + ",SERVERDIRECTORY:"      + (String) parameterMap.get("SERVERDIRECTORY") + "}，服务器端文件" + file.getAbsolutePath() + "读取失败，详细：" + ioe.getMessage());    }    System.out.println("读取配置文件完毕...");  }}