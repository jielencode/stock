package com.ufgov.zc.server.zc.fileResumeBroken.upload;import java.io.File;import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.io.IOException;import java.util.HashMap;import java.util.Map;public class UploadFile {  private Map parameterMap = new HashMap();  private Map returnMap = new HashMap();  public Map getParameterMap() {    return parameterMap;  }  public void setParameterMap(Map parameterMap) {    this.parameterMap = parameterMap;  }  public Map getReturnMap() {    return returnMap;  }  public void setReturnMap(Map returnMap) {    this.returnMap = returnMap;  }  public UploadFile(Map parameterMap, String functionDo) {    setParameterMap(parameterMap);  }  public void start() {    String filePath = "";    if (parameterMap.get("TOPATH") == null || "".equals(parameterMap.get("TOPATH"))) {      filePath = "uploadFiles";    } else {      filePath = parameterMap.get("TOPATH") + "/";    }    File file = new File(filePath + (String) parameterMap.get("FILENAME"));    int serverFileLen = 0;    if (file.exists()) {      try {        FileInputStream in = new FileInputStream(file);        serverFileLen = in.available();        in.close();      } catch (FileNotFoundException e) {        e.printStackTrace();      } catch (IOException e) {        e.printStackTrace();      }    }    int clientFileLen = Integer.parseInt((String) parameterMap.get("CLIENTFILELEN"));    FileOutputStream out;    try {      out = new FileOutputStream(file, true);      if (serverFileLen < clientFileLen) {        out.write((byte[]) parameterMap.get("BUFFCONTENT"));        out.close();      }      File file1 = new File(filePath + (String) parameterMap.get("FILENAME"));      FileInputStream in1 = new FileInputStream(file1);      if (in1.available() == clientFileLen) {        returnMap.put("success", "文件上传成功！");      }      in1.close();    } catch (FileNotFoundException e) {      e.printStackTrace();    } catch (IOException e) {      e.printStackTrace();    }  }}