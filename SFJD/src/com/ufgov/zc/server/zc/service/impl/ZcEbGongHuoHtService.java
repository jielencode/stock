/**   * @(#) project: ZC* @(#) file: ZcEbGongHuoHtService.java* * Copyright 2010 UFGOV, Inc. All rights reserved.* UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.* */package com.ufgov.zc.server.zc.service.impl;import java.math.BigDecimal;import java.util.HashMap;import java.util.List;import java.util.Map;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.system.model.AsFile;import com.ufgov.zc.common.system.model.AsWfDraft;import com.ufgov.zc.common.zc.model.ZcEbGongHuoHt;import com.ufgov.zc.server.system.dao.IWorkflowDao;import com.ufgov.zc.server.system.util.NumUtil;import com.ufgov.zc.server.system.workflow.WFEngineAdapter;import com.ufgov.zc.server.zc.ZcSUtil;import com.ufgov.zc.server.zc.dao.IZcEbGongHuoHtDao;import com.ufgov.zc.server.zc.dao.ibatis.BaseDao;import com.ufgov.zc.server.zc.service.IZcEbGongHuoHtService;/*** @ClassName: ZcEbGongHuoHtService* @Description: TODO(这里用一句话描述这个类的作用)* @date: 2010-11-7 下午03:35:18* @version: V1.0 * @since: 1.0* @author: fanpl* @modify: */public class ZcEbGongHuoHtService implements IZcEbGongHuoHtService {  private BaseDao baseDao;  private WFEngineAdapter wfEngineAdapter;  private IWorkflowDao workflowDao;  private IZcEbGongHuoHtDao zcEbGongHuoHtDao;  public BaseDao getBaseDao() {    return baseDao;  }  public void setBaseDao(BaseDao baseDao) {    this.baseDao = baseDao;  }  public WFEngineAdapter getWfEngineAdapter() {    return wfEngineAdapter;  }  public void setWfEngineAdapter(WFEngineAdapter wfEngineAdapter) {    this.wfEngineAdapter = wfEngineAdapter;  }  public IWorkflowDao getWorkflowDao() {    return workflowDao;  }  public void setWorkflowDao(IWorkflowDao workflowDao) {    this.workflowDao = workflowDao;  }  public IZcEbGongHuoHtDao getZcEbGongHuoHtDao() {    return zcEbGongHuoHtDao;  }  public void setZcEbGongHuoHtDao(IZcEbGongHuoHtDao zcEbGongHuoHtDao) {    this.zcEbGongHuoHtDao = zcEbGongHuoHtDao;  }  public ZcEbGongHuoHt auditFN(ZcEbGongHuoHt zcEbGongHuoHt, RequestMeta requestMeta) {    wfEngineAdapter.commit(zcEbGongHuoHt.getComment(), zcEbGongHuoHt, requestMeta);    return zcEbGongHuoHt;  }  public ZcEbGongHuoHt callbackFN(ZcEbGongHuoHt zcEbGongHuoHt, RequestMeta requestMeta) {    wfEngineAdapter.callback(zcEbGongHuoHt.getComment(), zcEbGongHuoHt, requestMeta);    return zcEbGongHuoHt;  }  public void deleteZcEbGongHuoHt(ZcEbGongHuoHt zcEbGongHuoHt, RequestMeta meta) {    baseDao.delete("ZcEbGongHuoHt.deleteZcEbGongHuoHtById", zcEbGongHuoHt.getHtCode());  }  public ZcEbGongHuoHt getZcEbGongHuoHtById(String htCode, RequestMeta meta) {    return (ZcEbGongHuoHt) baseDao.read("ZcEbGongHuoHt.getZcEbGongHuoHtById", htCode);  }  public List getZcEbGongHuoHtList(ElementConditionDto dto, RequestMeta meta) {    List list = baseDao.query("ZcEbGongHuoHt.getZcEbGongHuoHtList", dto);    ZcSUtil.setBillDBDigest(list);    return list;  }  public ZcEbGongHuoHt newCommitFN(ZcEbGongHuoHt zcEbGongHuoHt, RequestMeta requestMeta) {    wfEngineAdapter.newCommit(zcEbGongHuoHt.getComment(), zcEbGongHuoHt, requestMeta);    return zcEbGongHuoHt;  }  public ZcEbGongHuoHt saveZcEbGongHuoHt(ZcEbGongHuoHt zcEbGongHuoHt, RequestMeta meta) {    String userId = meta.getSvUserID();    String compoId = meta.getCompoId();    boolean isDraft = false;    if (zcEbGongHuoHt.getProcessInstId() == null || zcEbGongHuoHt.getProcessInstId().longValue() == -1) {      Long draftid = workflowDao.createDraftId();      zcEbGongHuoHt.setProcessInstId(draftid);      isDraft = true;    }    if ("".equals(ZcSUtil.safeString(zcEbGongHuoHt.getHtCode())) || zcEbGongHuoHt.getHtCode().equals("自动编号")) {      String htCode = NumUtil.getInstance().getNo(compoId, "HT_CODE", zcEbGongHuoHt);      zcEbGongHuoHt.setHtCode(htCode);      baseDao.insert("ZcEbGongHuoHt.insertZcEbGongHuoHt", zcEbGongHuoHt);    } else {      String htCode = zcEbGongHuoHt.getHtCode();      ZcEbGongHuoHt originalBean = (ZcEbGongHuoHt) baseDao.read("ZcEbGongHuoHt.getZcEbGongHuoHtById", htCode);      originalBean.setDbDigest(originalBean.digest());      ZcSUtil.checkDigest(zcEbGongHuoHt, originalBean, "htCode");//一致性校验      baseDao.update("ZcEbGongHuoHt.updateZcEbGongHuoHt", zcEbGongHuoHt);    }    if (isDraft) {      AsWfDraft asWfDraft = new AsWfDraft();      asWfDraft.setCompoId(compoId);      asWfDraft.setWfDraftName(zcEbGongHuoHt.getHtCode());      asWfDraft.setUserId(userId);      asWfDraft.setMasterTabId(compoId);      asWfDraft.setWfDraftId(BigDecimal.valueOf(zcEbGongHuoHt.getProcessInstId().longValue()));      workflowDao.insertAsWfdraft(asWfDraft);    }    return zcEbGongHuoHt;  }  public ZcEbGongHuoHt unAuditFN(ZcEbGongHuoHt zcEbGongHuoHt, RequestMeta requestMeta) {    wfEngineAdapter.rework(zcEbGongHuoHt.getComment(), zcEbGongHuoHt, requestMeta);    return zcEbGongHuoHt;  }  public ZcEbGongHuoHt untreadFN(ZcEbGongHuoHt zcEbGongHuoHt, RequestMeta requestMeta) {    wfEngineAdapter.untread(zcEbGongHuoHt.getComment(), zcEbGongHuoHt, requestMeta);    return zcEbGongHuoHt;  }  public AsFile getGongHuoHtContent(ZcEbGongHuoHt zcEbGongHuoHt) {    AsFile gongHuoHtContent = new AsFile();    AsFile template = zcEbGongHuoHtDao.getGonghuoHtDefaultTemplateContent(zcEbGongHuoHt);    byte[] gonghuohtByte = null;    try {      gonghuohtByte = evaluateFileContext(zcEbGongHuoHt, template.getFileContent());    } catch (Exception e) {      e.printStackTrace();    }    gongHuoHtContent.setFileContent(gonghuohtByte);    return gongHuoHtContent;  }  /*   * 得到合同   */  public byte[] evaluateFileContext(ZcEbGongHuoHt zcEbGongHuoHt, byte[] templateContent) throws Exception {    Map contextMap = new HashMap();    contextMap.put("gonghuoht", zcEbGongHuoHt);    return ZcSUtil.evaluate(contextMap, templateContent, "gonghuoht", ZcSUtil.ENCODING_DEFAULT);  }  public ZcEbGongHuoHt getZcEbGongHuoHtByHtCode(ZcEbGongHuoHt zcEbGongHuoHt) {    return zcEbGongHuoHtDao.getZcEbGongHuoHtByHtCode(zcEbGongHuoHt);  }}