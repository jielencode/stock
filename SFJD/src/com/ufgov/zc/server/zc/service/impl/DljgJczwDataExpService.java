package com.ufgov.zc.server.zc.service.impl;import java.util.ArrayList;import java.util.HashMap;import java.util.Iterator;import java.util.List;import java.util.Map;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.zc.model.WorkflowImpModel;import com.ufgov.zc.common.zc.model.ZcEbEntrust;import com.ufgov.zc.common.zc.model.ZcEbEntrustCancel;import com.ufgov.zc.common.zc.model.ZcPProMitem;import com.ufgov.zc.common.zc.model.ZcPProMitemBiExample;import com.ufgov.zc.common.zc.model.ZcPProMitemExample;import com.ufgov.zc.common.zc.model.ZcXmcgHt;import com.ufgov.zc.server.system.dao.IAsFileDao;import com.ufgov.zc.server.zc.dao.IBaseDao;import com.ufgov.zc.server.zc.dao.IZcEbBaseServiceDao;import com.ufgov.zc.server.zc.dao.IZcEbBulletinDao;import com.ufgov.zc.server.zc.dao.IZcEbEntrustDao;import com.ufgov.zc.server.zc.dao.IZcEbEvalDao;import com.ufgov.zc.server.zc.dao.IZcEbFormulaDao;import com.ufgov.zc.server.zc.dao.IZcEbPlanDao;import com.ufgov.zc.server.zc.dao.IZcEbProjDao;import com.ufgov.zc.server.zc.dao.IZcEbProtocolDao;import com.ufgov.zc.server.zc.dao.IZcEbRequirementDao;import com.ufgov.zc.server.zc.dao.IZcEbSignupDao;import com.ufgov.zc.server.zc.dao.IZcPProMakeDao;import com.ufgov.zc.server.zc.dao.IZcPProMitemBiDao;import com.ufgov.zc.server.zc.dao.IZcPProMitemDao;import com.ufgov.zc.server.zc.dao.IZcPProMitemMerDao;import com.ufgov.zc.server.zc.service.IDljgJczwDataExpService;import com.ufgov.zc.server.zc.service.IWorkFlowImpExpService;/** *  * 代理机构与内网数据导出类 *  * @author Administrator *  *  */public class DljgJczwDataExpService implements IDljgJczwDataExpService {	private IWorkFlowImpExpService workFlowImpExpService;	private IZcEbRequirementDao zcEbRequirementDao;	private IAsFileDao asFileDao;	private IZcEbProjDao zcEbProjDao;	private IZcEbBulletinDao zcEbBulletinDao;	private IZcEbEvalDao zcEbEvalDao;	private IZcEbFormulaDao zcEbFormulaDao;	private IZcEbPlanDao zcEbPlanDao;	private IBaseDao baseDao;	private IZcEbProtocolDao zcEbProtocolDao;	private IZcEbEntrustDao zcEbEntrustDao;	private IZcEbBaseServiceDao baseServiceDao;	private IZcPProMakeDao zcPProMakeDao;	private IZcPProMitemDao zcPProMitemDao;	private IZcPProMitemBiDao zcPProMitemBiDao;	private IZcPProMitemMerDao zcPProMitemMerDao;	private IZcEbSignupDao zcEbSignupDao;	public DljgJczwDataExpService() {		super();	}	/*	 * (non-Javadoc)	 * 	 * @see com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#	 * getZcEbRequirementData(java.util.List)	 */	public List getZcEbRequirementData(List reqCodes) {		List list = zcEbRequirementDao				.getOriginZcEbRequirementByIdList(reqCodes);		return list;	}	/*	 * (non-Javadoc)	 * 	 * @see com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#	 * getZcEbRequirementDetailData(java.util.List)	 */	public List getZcEbRequirementDetailData(List reqCode) {		ArrayList list = new ArrayList();		for (Iterator iterator = reqCode.iterator(); iterator.hasNext();) {			String rc = (String) iterator.next();			list.addAll(zcEbRequirementDao					.getOriginZcEbRequirementDetailById(rc));		}		return list;	}	/*	 * (non-Javadoc)	 * 	 * @see com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#	 * getWorkFlowInforData(java.util.List)	 */	public List getWorkFlowInforData(List instanceIds) {		List list = new ArrayList();		for (Iterator iterator = instanceIds.iterator(); iterator.hasNext();) {			Long insId = (Long) iterator.next();			WorkflowImpModel po = workFlowImpExpService					.getWorkFlowInforByInsId(insId);			list.add(po);		}		return list;	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#getAsFile	 * (java.util.List)	 */	public List getAsFile(List fileIds) {		ArrayList list = new ArrayList();		for (Iterator iterator = fileIds.iterator(); iterator.hasNext();) {			String fi = (String) iterator.next();			list.add(asFileDao.getAsFileById(fi));		}		return list;	}	/*	 * (non-Javadoc)	 * 	 * @see com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#	 * getZcEbBidCondition(java.util.List)	 */	public List getZcEbBidCondition(List projCodes) {		ArrayList list = new ArrayList();		ElementConditionDto dto = new ElementConditionDto();		for (Iterator iterator = projCodes.iterator(); iterator.hasNext();) {			String projCode = (String) iterator.next();			dto.setZcText0(projCode);			list.addAll(zcEbProjDao.getBidConditions(dto));		}		return list;	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#getZcEbBulletin	 * (java.util.List)	 */	public List getZcEbBulletin(List bulletinIdIds) {		ArrayList list = new ArrayList();		Map para = new HashMap();		for (Iterator iterator = bulletinIdIds.iterator(); iterator.hasNext();) {			String bulletinId = (String) iterator.next();			para.put("BULLETIN_ID", bulletinId);			list.add(zcEbBulletinDao.readBulletinById(para));		}		return list;	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#getZcEbEvalReport	 * (java.util.List)	 */	public List getZcEbEvalReport(List zcEbEvalReportIds) {		ArrayList list = new ArrayList();		for (Iterator iterator = zcEbEvalReportIds.iterator(); iterator				.hasNext();) {			String reportCode = (String) iterator.next();			list.add(zcEbEvalDao.getZcEbEvalReport(reportCode));		}		return list;	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#getZcEbFormula	 * (java.util.List)	 */	public List getZcEbFormula(List projCodes) {		ArrayList list = new ArrayList();		ElementConditionDto dto = new ElementConditionDto();		for (Iterator iterator = projCodes.iterator(); iterator.hasNext();) {			String projCode = (String) iterator.next();			dto.setProjCode(projCode);			list.addAll(zcEbFormulaDao.getZcEbFormulaList(dto));		}		return list;	}	/*	 * (non-Javadoc)	 * 	 * @see com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#	 * getZcEbFormulaItem(java.util.List)	 */	public List getZcEbFormulaItem(List formulaCodes) {		ArrayList list = new ArrayList();		Map map = new HashMap();		for (Iterator iterator = formulaCodes.iterator(); iterator.hasNext();) {			String formulaCode = (String) iterator.next();			map.put("formulaCode", formulaCode);			list.addAll(zcEbFormulaDao.getZcEbFormulaItemList(map));		}		return list;	}	/*	 * (non-Javadoc)	 * 	 * @see com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#	 * getZcEbFormulaParam(java.util.List)	 */	public List getZcEbFormulaParam(List formulaCodes) {		ArrayList list = new ArrayList();		for (Iterator iterator = formulaCodes.iterator(); iterator.hasNext();) {			String formulaCode = (String) iterator.next();			list.addAll(zcEbFormulaDao.getZcEbFormulaParamList(formulaCode));		}		return list;	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#getZcEbPack	 * (java.util.List)	 */	public List getZcEbPack(List projCodes) {		ArrayList list = new ArrayList();		for (Iterator iterator = projCodes.iterator(); iterator.hasNext();) {			String projCode = (String) iterator.next();			list.addAll(zcEbProjDao.getZcEbPackListByProjCode(projCode));		}		return list;	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#getZcEbPackReq	 * (java.util.List)	 */	public List getZcEbPackReq(List projCodes) {		ArrayList list = new ArrayList();		for (Iterator iterator = projCodes.iterator(); iterator.hasNext();) {			String projCode = (String) iterator.next();			list.addAll(zcEbProjDao.getZcEbPackReqListByProjCode(projCode));		}		return list;	}	public List getZcEbPackReqDetail(List detailCodes) {		ArrayList list = new ArrayList();		for (Iterator iterator = detailCodes.iterator(); iterator.hasNext();) {			String detailCode = (String) iterator.next();			list.add(zcEbProjDao.getZcEbPackReqDetailByKey(detailCode));		}		return list;	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#getZcEbPlan	 * (java.util.List)	 */	public List getZcEbPlan(List projCodes) {		ArrayList list = new ArrayList();		for (Iterator iterator = projCodes.iterator(); iterator.hasNext();) {			String projCode = (String) iterator.next();			list.addAll(zcEbPlanDao.getZcEbPlanByProjCode(projCode));		}		return list;	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#getZcEbProj	 * (java.util.List)	 */	public List getZcEbProj(List projCodes) {		ArrayList list = new ArrayList();		Map map = new HashMap();		for (Iterator iterator = projCodes.iterator(); iterator.hasNext();) {			String projCode = (String) iterator.next();			map.put("PROJ_CODE", projCode);			list.add(zcEbProjDao.getZcEbProjByProjCode(map));		}		return list;	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#getZcEbProjZbfile	 * (java.util.List)	 */	public List getZcEbProjZbfile(List projCodes) {		ArrayList list = new ArrayList();		for (Iterator iterator = projCodes.iterator(); iterator.hasNext();) {			String projCode = (String) iterator.next();			list.add(baseDao.read("ZcEbProjZbFile.getZcEbProjZbFileByProjCode",					projCode));		}		return list;	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#getZcEbProtocol	 * (java.util.List)	 */	public List getZcEbProtocol(List protCodes) {		ArrayList list = new ArrayList();		for (Iterator iterator = protCodes.iterator(); iterator.hasNext();) {			String protCode = (String) iterator.next();			list.add(zcEbProtocolDao.getZcEbProtocolByProtCode(protCode));		}		return list;	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#getZcEbXunJia	 * (java.util.List)	 */	public List getZcEbXunJia(List projCodes) {		ArrayList list = new ArrayList();		ElementConditionDto dto = new ElementConditionDto();		for (Iterator iterator = list.iterator(); iterator.hasNext();) {			String projCode = (String) iterator.next();			dto.setZcText0(projCode);			list.addAll(zcEbProjDao.getXunJia(dto));		}		return list;	}	public IAsFileDao getAsFileDao() {		return asFileDao;	}	public void setAsFileDao(IAsFileDao asFileDao) {		this.asFileDao = asFileDao;	}	public IZcEbProjDao getZcEbProjDao() {		return zcEbProjDao;	}	public void setZcEbProjDao(IZcEbProjDao zcEbProjDao) {		this.zcEbProjDao = zcEbProjDao;	}	public IZcEbBulletinDao getZcEbBulletinDao() {		return zcEbBulletinDao;	}	public void setZcEbBulletinDao(IZcEbBulletinDao zcEbBulletinDao) {		this.zcEbBulletinDao = zcEbBulletinDao;	}	public IZcEbEvalDao getZcEbEvalDao() {		return zcEbEvalDao;	}	public void setZcEbEvalDao(IZcEbEvalDao zcEbEvalDao) {		this.zcEbEvalDao = zcEbEvalDao;	}	public IZcEbFormulaDao getZcEbFormulaDao() {		return zcEbFormulaDao;	}	public void setZcEbFormulaDao(IZcEbFormulaDao zcEbFormulaDao) {		this.zcEbFormulaDao = zcEbFormulaDao;	}	public IWorkFlowImpExpService getWorkFlowImpExpService() {		return workFlowImpExpService;	}	public void setWorkFlowImpExpService(			IWorkFlowImpExpService workFlowImpExpService) {		this.workFlowImpExpService = workFlowImpExpService;	}	public IZcEbRequirementDao getZcEbRequirementDao() {		return zcEbRequirementDao;	}	public void setZcEbRequirementDao(IZcEbRequirementDao zcEbRequirementDao) {		this.zcEbRequirementDao = zcEbRequirementDao;	}	public IZcEbPlanDao getZcEbPlanDao() {		return zcEbPlanDao;	}	public void setZcEbPlanDao(IZcEbPlanDao zcEbPlanDao) {		this.zcEbPlanDao = zcEbPlanDao;	}	public IBaseDao getBaseDao() {		return baseDao;	}	public void setBaseDao(IBaseDao baseDao) {		this.baseDao = baseDao;	}	public IZcEbProtocolDao getZcEbProtocolDao() {		return zcEbProtocolDao;	}	public void setZcEbProtocolDao(IZcEbProtocolDao zcEbProtocolDao) {		this.zcEbProtocolDao = zcEbProtocolDao;	}	public IZcEbEntrustDao getZcEbEntrustDao() {		return zcEbEntrustDao;	}	public void setZcEbEntrustDao(IZcEbEntrustDao zcEbEntrustDao) {		this.zcEbEntrustDao = zcEbEntrustDao;	}	/*	 * (non-Javadoc)	 * 	 * @see com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#	 * getZcEbEntrustData(java.util.List)	 */	public List getZcEbEntrustData(List snList) {		ArrayList entrustList = new ArrayList();		for (Iterator iterator = snList.iterator(); iterator.hasNext();) {			String sn = (String) iterator.next();			ZcEbEntrust temp = zcEbEntrustDao.getZcEbEntrustBySn(sn);			entrustList.add(temp);		}		return entrustList;	}	/*	 * (non-Javadoc)	 * 	 * @see com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#	 * getZcEbEntrustDetailData(java.util.List)	 */	public List getZcEbEntrustDetailData(List entrustSnList) {		ArrayList entrustDetailList = new ArrayList();		for (Iterator iterator = entrustSnList.iterator(); iterator.hasNext();) {			String sn = (String) iterator.next();			List detail = zcEbEntrustDao.getZcEbEntrustDetailBySn(sn);			entrustDetailList.addAll(detail);		}		return entrustDetailList;	}	/*	 * (non-Javadoc)	 * 	 * @see com.ufgov.gk.server.zc.service.impl.IDljgJczwDataExpService#	 * getZcEbAuditSheetData(java.util.List)	 */	public List getZcEbAuditSheetData(List sheetIds) {		ArrayList list = new ArrayList();		for (Iterator iterator = sheetIds.iterator(); iterator.hasNext();) {			String sheetid = (String) iterator.next();			Map map = new HashMap();			map.put("sheetId", sheetid);			list.addAll(baseServiceDao.queryDataForList(					"ZcEbAuditSheet.queryByID", map));		}		return list;	}	public IZcEbBaseServiceDao getBaseServiceDao() {		return baseServiceDao;	}	public void setBaseServiceDao(IZcEbBaseServiceDao baseServiceDao) {		this.baseServiceDao = baseServiceDao;	}	public List getZcPProMakeData(List zcMakeCodes) {		ArrayList list = new ArrayList();		for (Iterator iterator = zcMakeCodes.iterator(); iterator.hasNext();) {			String makeCode = (String) iterator.next();			list.add(zcPProMakeDao.selectByPrimaryKey(makeCode));		}		return list;	}	public List getZcPProMitem(List zcMakeCodes) {		ArrayList list = new ArrayList();		for (Iterator iterator = zcMakeCodes.iterator(); iterator.hasNext();) {			String makeCode = (String) iterator.next();			ZcPProMitemExample example = new ZcPProMitemExample();			example.createCriteria().andZcMakeCodeEqualTo(makeCode);			list.addAll(zcPProMitemDao.selectByExample(example));		}		return list;	}	public List getZcPProMitemBi(List zcMakeCodes) {		ArrayList list = new ArrayList();		for (Iterator iterator = zcMakeCodes.iterator(); iterator.hasNext();) {			String makeCode = (String) iterator.next();			ZcPProMitemBiExample example = new ZcPProMitemBiExample();			example.createCriteria().andZcMakeCodeEqualTo(makeCode);			list.addAll(zcPProMitemBiDao.selectByExample(example));		}		return list;	}	public List getZcPProMitemMer(List zcMakeCodes) {		ArrayList list = new ArrayList();		for (Iterator iterator = zcMakeCodes.iterator(); iterator.hasNext();) {			String makeCode = (String) iterator.next();			ZcPProMitem item = new ZcPProMitem();			item.setZcMakeCode(makeCode);			list.addAll(zcPProMitemMerDao.selectByBrand(item));		}		return list;	}	public List getZcEbSignupData(List projCodes, RequestMeta meta) {		ArrayList list = new ArrayList();		ElementConditionDto dto = new ElementConditionDto();		for (Iterator iterator = projCodes.iterator(); iterator.hasNext();) {			String projCode = (String) iterator.next();			dto.setProjCode(projCode);			list.addAll(zcEbSignupDao.getZcEbSignup(dto, meta));		}		return list;	}	public List getZcEbSignupPackDetailData(List signupId) {		ArrayList list = new ArrayList();		for (Iterator iterator = signupId.iterator(); iterator.hasNext();) {			String pc = (String) iterator.next();		      ElementConditionDto dto=new ElementConditionDto();		      dto.setZcText1(pc);			list.addAll(zcEbSignupDao.getZcEbSignupPackDetail(dto));		}		return list;	}	public List getZcEbPackEvalResult(List packCodes) {		ArrayList list = new ArrayList();		Map para = new HashMap();		for (Iterator iterator = packCodes.iterator(); iterator.hasNext();) {			String packCode = (String) iterator.next();			para.put("PACK_CODE", packCode);			list.addAll(zcEbEvalDao.getZcEbEvalPackSumResult(para));		}		return list;	}	public IZcPProMakeDao getZcPProMakeDao() {		return zcPProMakeDao;	}	public void setZcPProMakeDao(IZcPProMakeDao zcPProMakeDao) {		this.zcPProMakeDao = zcPProMakeDao;	}	public IZcPProMitemDao getZcPProMitemDao() {		return zcPProMitemDao;	}	public void setZcPProMitemDao(IZcPProMitemDao zcPProMitemDao) {		this.zcPProMitemDao = zcPProMitemDao;	}	public IZcPProMitemBiDao getZcPProMitemBiDao() {		return zcPProMitemBiDao;	}	public void setZcPProMitemBiDao(IZcPProMitemBiDao zcPProMitemBiDao) {		this.zcPProMitemBiDao = zcPProMitemBiDao;	}	public IZcPProMitemMerDao getZcPProMitemMerDao() {		return zcPProMitemMerDao;	}	public void setZcPProMitemMerDao(IZcPProMitemMerDao zcPProMitemMerDao) {		this.zcPProMitemMerDao = zcPProMitemMerDao;	}	public IZcEbSignupDao getZcEbSignupDao() {		return zcEbSignupDao;	}	public void setZcEbSignupDao(IZcEbSignupDao zcEbSignupDao) {		this.zcEbSignupDao = zcEbSignupDao;	}	public Map getZcXmcgHtData(List projCodes) {		// TODO Auto-generated method stub		if (projCodes == null || projCodes.size() == 0) {			return null;		}		Map map = new HashMap();		StringBuffer sb = new StringBuffer("' '");		for (int i = 0; i < projCodes.size(); i++) {			sb.append(",'").append(projCodes.get(i)).append("'");			if (i % 5 == 4 || i == projCodes.size() - 1) {				List list = baseDao.query("ZC_XMCG_HT.selectHtForExp",						sb.toString());				if (list != null && list.size() > 0) {					if (map.get("HT") == null) {						map.put("HT", list);					} else {						((List) map.get("HT")).addAll(list);					}					List itemLst = baseDao.query(							"ZC_T_BCHT_ITEM.selectHtItemForExp", sb.toString());					if (itemLst != null && itemLst.size() > 0) {						if (map.get("ITEM") == null) {							map.put("ITEM", itemLst);						} else {							((List) map.get("ITEM")).addAll(itemLst);						}					}				}				sb = new StringBuffer("' '");			}		}		if (map.get("HT") != null) {			List fileId = new ArrayList();			List htLst = (List) map.get("HT");			for (int i = 0; i < htLst.size(); i++) {				ZcXmcgHt cght = (ZcXmcgHt) htLst.get(i);				if (cght.getZcImpFileBlobid() != null						&& !"".equals(cght.getZcImpFileBlobid())) {					fileId.add(cght.getZcImpFileBlobid());				}				if (cght.getZcConTextBlobid() != null						&& !"".equals(cght.getZcConTextBlobid())) {					fileId.add(cght.getZcConTextBlobid());				}				cght.setZcMakeCode(cght.getZcPProMake().getZcMakeCode());			}			map.put("FILE", this.getAsFile(fileId));		}		return map;	}	public List getZcEntrustCancelData(List projCodes, RequestMeta requestMeta) {		// TODO Auto-generated method stub		if (projCodes == null || projCodes.size() == 0) {			return null;		}		List list = new ArrayList();		StringBuffer sb = new StringBuffer("' '");		for (int i = 0; i < projCodes.size(); i++) {			sb.append(",'").append(projCodes.get(i)).append("'");			if (i % 5 == 4 || i == projCodes.size() - 1) {				List beans = baseDao.query("ZcEbEntrustCancel.getExpmainData",						sb.toString());				if (beans != null && beans.size() > 0) {					list.addAll(beans);				}				sb = new StringBuffer("' '");			}		}		for (int i = 0; i < list.size(); i++) {			ZcEbEntrustCancel ec = (ZcEbEntrustCancel) list.get(i);			ec.setPackList(baseDao.query("ZcEbEntrustCancel.getExpItemData",					ec.getEntrustCancelId()));		}		return list;	}}