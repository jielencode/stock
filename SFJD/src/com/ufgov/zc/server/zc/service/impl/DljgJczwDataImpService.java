package com.ufgov.zc.server.zc.service.impl;import java.lang.reflect.InvocationTargetException;import java.math.BigDecimal;import java.util.Date;import java.util.HashMap;import java.util.Iterator;import java.util.List;import java.util.Map;import org.apache.commons.beanutils.BeanUtils;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.model.AsFile;import com.ufgov.zc.common.system.model.AsWfDraft;import com.ufgov.zc.common.zc.model.WorkflowImpModel;import com.ufgov.zc.common.zc.model.ZcDelegJczwDataExchange;import com.ufgov.zc.common.zc.model.ZcEbAuditSheet;import com.ufgov.zc.common.zc.model.ZcEbBidCondition;import com.ufgov.zc.common.zc.model.ZcEbBulletin;import com.ufgov.zc.common.zc.model.ZcEbEntrust;import com.ufgov.zc.common.zc.model.ZcEbEntrustCancel;import com.ufgov.zc.common.zc.model.ZcEbEntrustDetail;import com.ufgov.zc.common.zc.model.ZcEbEvalReport;import com.ufgov.zc.common.zc.model.ZcEbFormula;import com.ufgov.zc.common.zc.model.ZcEbFormulaItem;import com.ufgov.zc.common.zc.model.ZcEbFormulaParam;import com.ufgov.zc.common.zc.model.ZcEbPack;import com.ufgov.zc.common.zc.model.ZcEbPackEvalResult;import com.ufgov.zc.common.zc.model.ZcEbPackReq;import com.ufgov.zc.common.zc.model.ZcEbPackReqDetail;import com.ufgov.zc.common.zc.model.ZcEbPlan;import com.ufgov.zc.common.zc.model.ZcEbProj;import com.ufgov.zc.common.zc.model.ZcEbProjChange;import com.ufgov.zc.common.zc.model.ZcEbProjZbFile;import com.ufgov.zc.common.zc.model.ZcEbProtocol;import com.ufgov.zc.common.zc.model.ZcEbRequirement;import com.ufgov.zc.common.zc.model.ZcEbRequirementDetail;import com.ufgov.zc.common.zc.model.ZcEbSignup;import com.ufgov.zc.common.zc.model.ZcEbSignupPackDetail;import com.ufgov.zc.common.zc.model.ZcEbXunJia;import com.ufgov.zc.common.zc.model.ZcPProMake;import com.ufgov.zc.common.zc.model.ZcPProMitem;import com.ufgov.zc.common.zc.model.ZcPProMitemBi;import com.ufgov.zc.common.zc.model.ZcPProMitemExample;import com.ufgov.zc.common.zc.model.ZcPProMitemMer;import com.ufgov.zc.common.zc.model.ZcTBchtItem;import com.ufgov.zc.common.zc.model.ZcXmcgHt;import com.ufgov.zc.server.system.dao.IAsFileDao;import com.ufgov.zc.server.system.dao.IWorkflowDao;import com.ufgov.zc.server.zc.dao.IBaseDao;import com.ufgov.zc.server.zc.dao.IZcEbBulletinDao;import com.ufgov.zc.server.zc.dao.IZcEbEntrustDao;import com.ufgov.zc.server.zc.dao.IZcEbFormulaDao;import com.ufgov.zc.server.zc.dao.IZcEbProjDao;import com.ufgov.zc.server.zc.dao.IZcEbProtocolDao;import com.ufgov.zc.server.zc.dao.IZcEbRequirementDao;import com.ufgov.zc.server.zc.dao.IZcPProMakeDao;import com.ufgov.zc.server.zc.dao.IZcPProMitemBiDao;import com.ufgov.zc.server.zc.dao.IZcPProMitemDao;import com.ufgov.zc.server.zc.dao.IZcPProMitemMerDao;import com.ufgov.zc.server.zc.service.IDljgJczwDataImpService;import com.ufgov.zc.server.zc.service.IWorkFlowImpExpService;/** *  * 代理机构与内网数据导入类 *  * @author Administrator *  *  */public class DljgJczwDataImpService implements IDljgJczwDataImpService {	private IBaseDao baseDao;	private IZcEbEntrustDao zcEbEntrustDao;	private IWorkFlowImpExpService workFlowImpExpService;	// private IZcDelegJczwDataExchangeDAO zcDelegJczwDataExchangeDAO;	private IZcEbRequirementDao zcEbRequirementDao;	private IZcEbProtocolDao zcEbProtocolDao;	private IZcEbProjDao zcEbProjDao;	private IZcEbFormulaDao zcEbFormulaDao;	private IZcEbBulletinDao zcEbBulletinDao;	private IAsFileDao asFileDao;	private IZcPProMakeDao zcPProMakeDao;	private IZcPProMitemDao zcPProMitemDao;	private IZcPProMitemBiDao zcPProMitemBiDao;	private IZcPProMitemMerDao zcPProMitemMerDao;	private IWorkflowDao workflowDao;	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#insert(com	 * .ufgov.gk.common.zc.model.ZcEbEntrust)	 */	public IWorkflowDao getWorkflowDao() {		return workflowDao;	}	public void setWorkflowDao(IWorkflowDao workflowDao) {		this.workflowDao = workflowDao;	}	public void insert(ZcEbEntrust po) {		zcEbEntrustDao.deleteByPrimaryKey(po.getSn());		zcEbEntrustDao.insertZcEbEntrust(po);		// ZcDelegJczwDataExchange record = new ZcDelegJczwDataExchange();		// record.setBusinessCode(po.getSn());		// record.setOpType(ZcDelegJczwDataExchange.OP_TYPE_DLJG_IN_LOG);		// record.setEditDate(new Date());		// record.setEditUserId(RequestMetaUtil.getSvUserID());		// record.setEditUserName(RequestMetaUtil.getSvUserName());		// record.setMemo(po.getZcMakeCode());		// record.setDataType("ZC_EB_ENTRUST");		// zcDelegJczwDataExchangeDAO.insert(record);	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#insert(com	 * .ufgov.gk.common.zc.model.ZcEbEntrustDetail)	 */	public void insert(ZcEbEntrustDetail po) {		baseDao.delete("ZcEbEntrust.deleteZcEbEntrustDetailById", po.getSnd());		baseDao.insert("ZcEbEntrust.insertZcEbEntrustDetail", po);	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#insert(com	 * .ufgov.gk.common.zc.model.ZcEbAuditSheet)	 */	public void insert(ZcEbAuditSheet po) {		if (po.getExecuteDate() != null) {			po.setExecuteDate(po.getExecuteDate());		}		Map map = new HashMap();		map.put("sheetId", po.getSheetId());		baseDao.delete("ZcEbAuditSheet.delete", map);		baseDao.insert("ZcEbAuditSheet.insertZcEbAuditSheet", po);	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#insert(com	 * .ufgov.gk.common.zc.model.ZcEbRequirement)	 */	public void insert(ZcEbRequirement po) {		baseDao.delete("ZcEbRequirement.deleteZcEbRequirementByReqCode",				po.getReqCode());		zcEbRequirementDao.insertZcEbRequirement(po);	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#insert(com	 * .ufgov.gk.common.zc.model.ZcEbRequirementDetail)	 */	public void insert(ZcEbRequirementDetail po) {//		baseDao.delete("ZcEbRequirement.deleteZcEbRequirementDetailByKey",				String.valueOf(po.getDetailCode()));		baseDao.insert("ZcEbRequirement.insertZcEbRequirementDetailHasKey", po);	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#insert(com	 * .ufgov.gk.common.zc.model.ZcEbProtocol)	 */	public void insert(ZcEbProtocol prot) {		zcEbProtocolDao.deleteZcEbProtocolByProtCode(prot.getProtCode());		zcEbProtocolDao.insertZcEbProtocol(prot);	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#insert(com	 * .ufgov.gk.common.zc.model.ZcEbProj)	 */	public void insert(ZcEbProj po) {		baseDao.delete("ZcEbProj.deleteZcEbProjByProjCode", po.getProjCode());		zcEbProjDao.insertZcEbProj(po);	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#insert(com	 * .ufgov.gk.common.zc.model.ZcEbPack)	 */	public void insert(ZcEbPack po) {		baseDao.delete("ZcEbProj.deleteZcEbPackByPackCode", po.getPackCode());		baseDao.insert("ZcEbProj.insertZcEbPack", po);	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#insert(com	 * .ufgov.gk.common.zc.model.ZcEbPackReq)	 */	public void insert(ZcEbPackReq po) {		baseDao.delete("ZcEbProj.deleteZcEbPackReqByPackReqCode",				String.valueOf(po.getPackReqCode()));		baseDao.insert("ZcEbProj.insertZcEbPackReq", po);	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#insert(com	 * .ufgov.gk.common.zc.model.ZcEbBidCondition)	 */	public void insert(ZcEbBidCondition condi) {		HashMap para = new HashMap();		para.put("projCode", condi.getProjCode());		para.put("packCode", condi.getPackCode());		baseDao.delete("ZcEbProj.deleteBidCondition", para);		baseDao.insert("ZcEbProj.insertZcEbPack", condi);	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#insert(com	 * .ufgov.gk.common.zc.model.ZcEbXunJia)	 */	public void insert(ZcEbXunJia xujia) {		baseDao.delete("ZcEbXunJia.deleteXunJiaById", xujia.getXjCode());		baseDao.insert("ZcEbXunJia.insertXunJia", xujia);	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#insert(com	 * .ufgov.gk.common.zc.model.ZcEbProjZbFile)	 */	public void insert(ZcEbProjZbFile po) {		Map para = new HashMap();		para.put("FILE_ID", po.getFileId());		para.put("PROJ_CODE", po.getProjCode());		baseDao.delete("ZcEbProjZbFile.deleteZcebZbFileByIdProjCodeAndFileId",				para);		baseDao.insert("ZcEbProjZbFile.insertZcEbProjFile", po);	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#insert(com	 * .ufgov.gk.common.zc.model.ZcEbPlan)	 */	public void insert(ZcEbPlan po) {		Map para = new HashMap();		para.put("PLAN_CODE", po.getPlanCode());		para.put("PROJ_CODE", po.getProjCode());		baseDao.delete("ZcEbPlan.deleteZcEbPlanByPlanCodeAndProjCode", para);		baseDao.insert("ZcEbPlan.insertZcEbPlan", po);	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#insert(com	 * .ufgov.gk.common.zc.model.ZcEbFormula)	 */	public void insert(ZcEbFormula po) {		zcEbFormulaDao.deleteZcEbFormulaById(po.getFormulaCode());		zcEbFormulaDao.insertZcEbFormula(po);	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#insert(com	 * .ufgov.gk.common.zc.model.ZcEbFormulaItem)	 */	public void insert(ZcEbFormulaItem po) {		zcEbFormulaDao.deleteZcEbFormulaItemById(po.getItemCode());		zcEbFormulaDao.insertZcEbFormulaItem(po);	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#insert(com	 * .ufgov.gk.common.zc.model.ZcEbFormulaParam)	 */	public void insert(ZcEbFormulaParam po) {		Map para = new HashMap();		para.put("formulaCode", po.getFormulaCode());		para.put("paramCode", po.getParamCode());		baseDao.delete("ZcEbFormula.deleteZcEbFormulaParamByCode", para);		baseDao.insert("ZcEbFormula.insertZcEbFormulaParamHasKey", po);	}	/*	 * (non-Javadoc)	 * 	 * @see com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#	 * insertZcEbBulletin(com.ufgov.gk.common.zc.model.ZcEbBulletin)	 */	public void insert(ZcEbBulletin bu) {		zcEbBulletinDao.delete(bu);		zcEbBulletinDao.insert(bu);	};	public void insert(AsFile po) {		asFileDao.deleteAsFileById(po.getFileId());		asFileDao.insertAsFile(po);	}	public IZcEbEntrustDao getZcEbEntrustDao() {		return zcEbEntrustDao;	}	public void setZcEbEntrustDao(IZcEbEntrustDao zcEbEntrustDao) {		this.zcEbEntrustDao = zcEbEntrustDao;	}	public IBaseDao getBaseDao() {		return baseDao;	}	public void setBaseDao(IBaseDao baseDao) {		this.baseDao = baseDao;	}	public IWorkFlowImpExpService getWorkFlowImpExpService() {		return workFlowImpExpService;	}	public void setWorkFlowImpExpService(			IWorkFlowImpExpService workFlowImpExpService) {		this.workFlowImpExpService = workFlowImpExpService;	}	/*	 * (non-Javadoc)	 * 	 * @see	 * com.ufgov.gk.server.zc.service.impl.IDljgJczwDataImpService#saveWorkFlowData	 * (java.util.List)	 */	public void saveWorkFlowData(List list) {		for (Iterator iterator = list.iterator(); iterator.hasNext();) {			WorkflowImpModel wim = (WorkflowImpModel) iterator.next();			workFlowImpExpService.impWorkFlowInfor(wim);		}	}	// public IZcDelegJczwDataExchangeDAO getZcDelegJczwDataExchangeDAO() {	// return zcDelegJczwDataExchangeDAO;	// }	//	// public void setZcDelegJczwDataExchangeDAO(IZcDelegJczwDataExchangeDAO	// zcDelegJczwDataExchangeDAO) {	// this.zcDelegJczwDataExchangeDAO = zcDelegJczwDataExchangeDAO;	// }	public IZcEbRequirementDao getZcEbRequirementDao() {		return zcEbRequirementDao;	}	public void setZcEbRequirementDao(IZcEbRequirementDao zcEbRequirementDao) {		this.zcEbRequirementDao = zcEbRequirementDao;	}	public IZcEbProtocolDao getZcEbProtocolDao() {		return zcEbProtocolDao;	}	public void setZcEbProtocolDao(IZcEbProtocolDao zcEbProtocolDao) {		this.zcEbProtocolDao = zcEbProtocolDao;	}	public IZcEbProjDao getZcEbProjDao() {		return zcEbProjDao;	}	public void setZcEbProjDao(IZcEbProjDao zcEbProjDao) {		this.zcEbProjDao = zcEbProjDao;	}	public IZcEbFormulaDao getZcEbFormulaDao() {		return zcEbFormulaDao;	}	public void setZcEbFormulaDao(IZcEbFormulaDao zcEbFormulaDao) {		this.zcEbFormulaDao = zcEbFormulaDao;	}	public IZcEbBulletinDao getZcEbBulletinDao() {		return zcEbBulletinDao;	}	public void setZcEbBulletinDao(IZcEbBulletinDao zcEbBulletinDao) {		this.zcEbBulletinDao = zcEbBulletinDao;	}	public IAsFileDao getAsFileDao() {		return asFileDao;	}	public void setAsFileDao(IAsFileDao asFileDao) {		this.asFileDao = asFileDao;	}	public void insert(ZcPProMake po) {		zcPProMakeDao.deleteByPrimaryKey(po.getZcMakeCode());		zcPProMakeDao.insert(po);	}	public void insert(ZcPProMitem po) {		zcPProMitemDao.deleteByPrimaryKey(po.getZcMakeCode(),				po.getZcPitemCode());		zcPProMitemDao.insert(po);	}	public void insert(ZcPProMitemBi po) {		zcPProMitemBiDao.deleteByPrimaryKey(po.getZcProBiSeq());		zcPProMitemBiDao.insert(po);	}	public void insert(ZcPProMitemMer po) {		ZcPProMitemExample example = new ZcPProMitemExample();		example.createCriteria().andZcPitemCodeEqualTo(po.getZcPitemCode());		zcPProMitemMerDao.deleteJingJiaMerByKey(example);		zcPProMitemMerDao.insert(po);	}	public IZcPProMakeDao getZcPProMakeDao() {		return zcPProMakeDao;	}	public void setZcPProMakeDao(IZcPProMakeDao zcPProMakeDao) {		this.zcPProMakeDao = zcPProMakeDao;	}	public IZcPProMitemDao getZcPProMitemDao() {		return zcPProMitemDao;	}	public void setZcPProMitemDao(IZcPProMitemDao zcPProMitemDao) {		this.zcPProMitemDao = zcPProMitemDao;	}	public IZcPProMitemBiDao getZcPProMitemBiDao() {		return zcPProMitemBiDao;	}	public void setZcPProMitemBiDao(IZcPProMitemBiDao zcPProMitemBiDao) {		this.zcPProMitemBiDao = zcPProMitemBiDao;	}	public IZcPProMitemMerDao getZcPProMitemMerDao() {		return zcPProMitemMerDao;	}	public void setZcPProMitemMerDao(IZcPProMitemMerDao zcPProMitemMerDao) {		this.zcPProMitemMerDao = zcPProMitemMerDao;	}	public void insert(ZcEbEvalReport po) {		baseDao.delete("ZcEbEval.deleteZcEbEvalReport", po.getReportCode());		baseDao.insert("ZcEbEval.insertZcEbEvalReport", po);	}	public void insert(ZcEbPackReqDetail po) {		try {			baseDao.delete("ZcEbProj.deleteZcEbReqDetailByKey", po					.getDetailCode().toString());			ZcEbRequirementDetail repdetail = new ZcEbRequirementDetail();			BeanUtils.copyProperties(repdetail, po);			baseDao.insert("ZcEbProj.insertZcEbReqDetail", repdetail);		} catch (IllegalAccessException e) {			// TODO Auto-generated catch block			e.printStackTrace();		} catch (InvocationTargetException e) {			// TODO Auto-generated catch block			e.printStackTrace();		}	}	public void insert(ZcEbSignup po) {		// TODO Auto-generated method stub		baseDao.delete("ZcEbSignup.deleteZcEbSignup", po.getSignupId());		baseDao.insert("ZcEbSignup.insertZcEbSignup", po);	}	public void insert(ZcEbSignupPackDetail po) {		// TODO Auto-generated method stub		baseDao.delete("ZcEbSignup.deleteZcEbSignupPackDetailBySignupPackId",				po.getSignupPackId());		baseDao.insert("ZcEbSignup.insertZcEbSignupPackDetail", po);	}	public void insert(ZcEbPackEvalResult po) {		Map obj = new HashMap();		obj.put("packCode", po.getPackCode());		obj.put("providerCode", po.getProviderCode());		obj.put("IS_COMPLIANCE_RESULT", po.getIsComplianceResult());		obj.put("projCode", po.getProjCode());		baseDao.delete("ZcEbEval.deleteZcEbPackEvalFinalSumResult", obj);		baseDao.insert("ZcEbEval.insertZcEbPackEvalFinalSumResult", po);	}	/**	 * <p>	 * 校验任务单编号是否存在，返回存在单号	 * </p>	 * 	 * @param list	 * @return String	 * @see com.ufgov.zc.server.zc.service.IDljgJczwDataImpService#checkZcEbEntrust(java.util.List)	 * @author yuzz	 * @since Aug 25, 2012 10:15:17 AM	 */	public String checkZcEbEntrust(List list) {		StringBuffer sb = new StringBuffer();		for (int i = 0; i < list.size(); i++) {			ZcDelegJczwDataExchange o = (ZcDelegJczwDataExchange) list.get(i);			ZcEbEntrust model = zcEbEntrustDao.getZcEbEntrustBySn(o					.getBusinessCode());			if (model != null)				sb.append("[").append(model.getSn()).append("] ");		}		return sb.toString();	}	public String insert(ZcEbProjChange po) {		// TODO Auto-generated method stub		List list = baseDao.query("ZcEbProjChange.getZcEbProjChangeById",				po.getChgId());		if (list != null && list.size() > 0) {			return po.getChgId() + "不能重复导入";		}		Long draftid = workflowDao.createDraftId();		po.setProcessInstId(draftid);		String userId = (String) baseDao.read("User.selectYsdwcgByCocode",				po.getCoCode());		po.setExecutor(userId);		po.setExecuteDate(new Date());		po.setStatus("0");		baseDao.insert("ZcEbProjChange.insertZcEbProjChange", po);		for (int i = 0; po.getPackList() != null && i < po.getPackList().size(); i++) {			baseDao.insert("ZcEbProjChange.insertZcEbProjChangePack", po					.getPackList().get(i));		}		AsWfDraft asWfDraft = new AsWfDraft();		asWfDraft.setCompoId("ZC_EB_PROJ_CHG");		asWfDraft.setUserId(userId);		asWfDraft.setMasterTabId("ZC_EB_PROJ_CHG");		asWfDraft.setWfDraftId(BigDecimal.valueOf(draftid.longValue()));		workflowDao.insertAsWfdraft(asWfDraft);		return "";	}	public void insert(ZcXmcgHt po, RequestMeta requestMeta) {		// TODO Auto-generated method stub		Long draftid = workflowDao.createDraftId();		String userId = (String) baseDao.read("User.selectYsdwcgByCocode",				po.getCoCode());		po.setZcInputCode(userId);		po.setZcInputDate(requestMeta.getSysDate());		po.setZcHtType("1");// 项目采购		po.setProcessInstId(draftid);		ZcXmcgHt zcXmcgHtOrg = (ZcXmcgHt) baseDao.read("ZC_XMCG_HT.getAngOrg",				po);		po.setAgency(zcXmcgHtOrg.getAgency());		po.setOrgCode(zcXmcgHtOrg.getOrgCode());		AsWfDraft asWfDraft = new AsWfDraft();		asWfDraft.setCompoId("ZC_XMCG_HT");		asWfDraft.setWfDraftName(po.getZcHtCode());		asWfDraft.setUserId(userId);		asWfDraft.setMasterTabId("ZC_XMCG_HT");		asWfDraft.setWfDraftId(BigDecimal.valueOf(draftid.longValue()));		baseDao.insert("WfCommonDraft.insertAsWfDraft", asWfDraft);		baseDao.insert("ZC_XMCG_HT.ibatorgenerated_insert", po);	}	public void insert(ZcTBchtItem po) {		// TODO Auto-generated method stub		baseDao.insert("ZC_T_BCHT_ITEM.ibatorgenerated_insert", po);	}	public String insert(ZcEbEntrustCancel po) {		// TODO Auto-generated method stub		List list = baseDao.query("ZcEbEntrustCancel.selectCancelDataByKey",				po.getEntrustCancelId());		if (list != null && list.size() > 0) {			return po.getEntrustCancelId() + "不能重复导入";		}		List entrust = baseDao.query("ZcEbEntrust.getZcEbEntrustByMakeCode",				po.getSn());		if (entrust == null || entrust.size() == 0) {			return po.getEntrustCancelId() + "取消的任务未找到，不能导入";		}		Long draftid = workflowDao.createDraftId();		po.setProcessInstId(draftid);		String userId = (String) baseDao.read("User.selectYsdwcgByCocode",				po.getCoCode());		po.setExecutor(userId);		po.setExecuteDate(new Date());		po.setStatus("0");		po.setSnCode(((ZcEbEntrust) entrust.get(0)).getSnCode());		baseDao.insert("ZcEbEntrustCancel.insertZcEbEntrustCancel", po);		for (int i = 0; po.getPackList() != null && i < po.getPackList().size(); i++) {			baseDao.insert("ZcEbEntrustCancel.insertZcEbEntrustCancelDetail",					po.getPackList().get(i));		}		AsWfDraft asWfDraft = new AsWfDraft();		asWfDraft.setCompoId("ZC_EB_ENTRUST_CANCEL");		asWfDraft.setUserId(userId);		asWfDraft.setMasterTabId("ZC_EB_ENTRUST_CANCEL");		asWfDraft.setWfDraftId(BigDecimal.valueOf(draftid.longValue()));		workflowDao.insertAsWfdraft(asWfDraft);		return "";	}}