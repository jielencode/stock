package com.ufgov.zc.server.zc.web.action.make;import java.text.SimpleDateFormat;import java.util.Date;import java.util.Iterator;import java.util.List;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.commons.logging.Log;import org.apache.commons.logging.LogFactory;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import org.springframework.web.struts.ActionSupport;import com.ufgov.zc.common.zc.model.ZcPProMake;import com.ufgov.zc.server.zc.service.IZcMakeIndexListService;public class MakeAction extends ActionSupport {  private final static Log log = LogFactory.getLog(MakeAction.class);  public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {    IZcMakeIndexListService zcMakeIndexListService = (IZcMakeIndexListService) this.getWebApplicationContext().getBean("zcMakeIndexListService");    List Makelist = zcMakeIndexListService.getZcMakeIndexList();    StringBuffer bs = new StringBuffer();    for (Iterator i = Makelist.iterator(); i.hasNext();) {      ZcPProMake o = (ZcPProMake) i.next();      String name = o.getZcMakeName();      //项目名称      if (name.toCharArray().length > 20) {        name = name.substring(10);      }      //项目代码      String zcMakeCode = o.getZcMakeCode();      //项目截止时间      String dateTime = "00-00";      SimpleDateFormat dateFm = new SimpleDateFormat("MM-dd");      if (o.getZcXieYiEndDate() != null) {        dateTime = dateFm.format(o.getZcXieYiEndDate());      } else {        dateTime = dateFm.format(new Date());      }      //项目地址      String path = request.getContextPath();      bs.append("<li><span id='maketime'>[" + dateTime + "]</span>[" + o.getZcFukuanType() + "] <a href='" + path      + "/app/page/make/indexMakeShow.do?zcMakeCode=" + zcMakeCode + "' target='_blank' title='" + name + "'>" + name + "</a> </li>");    }    if (Makelist.size() == 0) {      SimpleDateFormat dateFm = new SimpleDateFormat("MM-dd");      String dateTime = dateFm.format(new Date());      for (int i = 0; i < 8; i++) {        bs.append("<li><span id='maketime'>[" + dateTime + "]</span>空闲</li>");      }    }    if (Makelist.size() < 8 && Makelist.size() != 0) {      SimpleDateFormat dateFm = new SimpleDateFormat("MM-dd");      String dateTime = dateFm.format(new Date());      for (int i = 0; i < 8 - Makelist.size(); i++) {        bs.append("<li><span id='maketime'>[" + dateTime + "]</span>空闲</li>");      }    }    response.setContentType("text/text;charset=UTF-8");    response.setHeader("Cache-Control", "no-cache");    response.getWriter().print(bs.toString());    return null;  }}