package com.ufgov.zc.server.zc.web.action.auction;import java.util.Date;import java.util.List;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.commons.logging.Log;import org.apache.commons.logging.LogFactory;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import com.ufgov.zc.common.zc.model.ZcAuctionInfo;import com.ufgov.zc.server.zc.service.IZcAuctionInfoService;import com.ufgov.zc.server.zc.web.action.StrutsAction;import com.ufgov.zc.server.zc.web.form.AuctionInfoForm;public class AuctionListAction extends StrutsAction {  private final static Log log = LogFactory.getLog(AuctionListAction.class);  public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {    AuctionInfoForm auctionForm = (AuctionInfoForm) form;    String forward = "success";    IZcAuctionInfoService zcAuctionInfoService = (IZcAuctionInfoService) this.getWebApplicationContext().getBean("zcAuctionInfoService");    try {      List zcAuctionInfoList = zcAuctionInfoService.getAuctionInfoAll();      for (int i = 0; i < zcAuctionInfoList.size(); i++) {        ZcAuctionInfo zcAuctionInfo = (ZcAuctionInfo) zcAuctionInfoList.get(i);        Date sysDate = new Date();        if (sysDate.after(zcAuctionInfo.getZcAuctionStarttime()) && sysDate.before(zcAuctionInfo.getZcAuctionEndtime())) {          zcAuctionInfo.setZcAuctionStatus("1");          auctionForm.setAuctionStatus("拍卖中");        } else if (sysDate.before(zcAuctionInfo.getZcAuctionStarttime())) {          zcAuctionInfo.setZcAuctionStatus("0");          auctionForm.setAuctionStatus("等待拍卖");        } else if (sysDate.after(zcAuctionInfo.getZcAuctionEndtime())) {          zcAuctionInfo.setZcAuctionStatus("2");          auctionForm.setAuctionStatus("拍卖结束");        }      }      auctionForm.setZcAuctionInfoList(zcAuctionInfoList);      request.setAttribute("auctionForm", auctionForm);      //parameterObject.put("SuppliersCode", userId);       //parameterObject.put("SuppliersCode", "70990114-8");//暂时测试用	      //PaginationHandler handler = new PaginationHandlerJSImpl();      //WebPagination pagination = webPagination(request, mapping);      //handler.setPerCount(pagination.getPageSize());      //      long count = new Long(menuGoodsService.getGoodsNumBySup(parameterObject).intValue()).longValue();      //      pagination.setTotalSize((int) count);      //      handler.setTotalCount(count);      //handler.moveCursor((long) pagination.getCurrentPage());      //spForm.setPagination(pagination);      //      parameterObject.put("start", new Long(handler.getStartCursor()).toString());      //      parameterObject.put("end", new Long(handler.getEndCursor()).toString());      //      spForm.setMerchandiseList(menuGoodsService.getMerchandiseBySupplier(parameterObject));//某供应商名下的所有商品      //      spForm.setCountNum(new Integer(new Long(count).intValue()));      //      spForm.setCatalogueId(catalogueId);    } catch (Exception e) {      log.error(e);      throw e;    }    return mapping.findForward(forward);  }}