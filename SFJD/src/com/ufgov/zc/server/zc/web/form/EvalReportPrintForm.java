package com.ufgov.zc.server.zc.web.form;import java.math.BigDecimal;import java.util.Date;import java.util.HashMap;import java.util.Iterator;import java.util.List;import java.util.Map;import javax.servlet.http.HttpSession;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.constants.ZcSettingConstants;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.system.model.AsVal;import com.ufgov.zc.common.zc.model.ZcEbEvalReport;import com.ufgov.zc.common.zc.model.ZcEbPackEvalResult;import com.ufgov.zc.server.system.SpringContext;import com.ufgov.zc.server.system.service.IAsValService;import com.ufgov.zc.server.zc.service.IZcEbEcbjService;import com.ufgov.zc.server.zc.service.IZcEbEvalService;public class EvalReportPrintForm extends AbstractActionForm {	private ZcEbEvalReport zcEbEvalReport;	private List packEvalResultList;	private IZcEbEvalService zcEbEvalService;	private IZcEbEcbjService zcEbEcbjService;	private Map providerBjMap = new HashMap();	private int bjNo = 1;	public IZcEbEvalService getZcEbEvalService() {		return zcEbEvalService;	}	public void setZcEbEvalService(IZcEbEvalService zcEbEvalService) {		this.zcEbEvalService = zcEbEvalService;	}	public ZcEbEvalReport getZcEbEvalReport() {		return zcEbEvalReport;	}	public void setZcEbEvalReport(ZcEbEvalReport zcEbEvalReport) {		this.zcEbEvalReport = zcEbEvalReport;	}	public List getPackEvalResultList() {		return packEvalResultList;	}	public void setPackEvalResultList(List packEvalResultList) {		this.packEvalResultList = packEvalResultList;	}	public String toEvalReportPrint() {		String reportCode = getRequest().getParameter("reportCode");		zcEbEvalService = (IZcEbEvalService) SpringContext				.getBean("zcEbEvalService");		System.out				.println("zcEbEvalService获取成功！************" + zcEbEvalService);		zcEbEvalReport = zcEbEvalService.getZcEbEvalReport(reportCode);		System.out.println("zcEbEvalReport获取成功！************" + zcEbEvalReport);		ElementConditionDto elementConditionDto = new ElementConditionDto();		elementConditionDto.setPackCode(zcEbEvalReport.getPackCode());		elementConditionDto.setProjCode(zcEbEvalReport.getProjCode());		zcEbEvalReport.setPackEvalResultList(zcEbEvalService				.getZcEbPackEvalList(elementConditionDto));		System.out.println("packEvalResultList获取成功！************"				+ zcEbEvalReport.getPackEvalResultList());		zcEbEvalReport = putVal(zcEbEvalReport);		zcEbEcbjService = (IZcEbEcbjService) SpringContext				.getBean("zcEbEcbjService");		RequestMeta mt = new RequestMeta();		if (mt.getTransDate() == null) {			mt.setTransDate(new Date());		}		HttpSession sessions = getRequest().getSession();		String nd = (String) sessions.getAttribute("svNd");		try {			mt.getTransDate().setYear(Integer.parseInt(nd));		} catch (Exception e) {		}		mt.setSvCoCode((String) sessions.getAttribute("svCoCode"));		mt.setSvOrgCode((String) sessions.getAttribute("svOrgCode"));		mt.setSvPoCode((String) sessions.getAttribute("svPoCode"));		mt.setAccountId((String) sessions.getAttribute("svAccountId"));		mt.setSvUserID((String) sessions.getAttribute("svUserID"));//		mt.setSvRoleId((String) sessions.getAttribute("svRoleId"));		for (Iterator iterator = zcEbEvalReport.getPackEvalResultList()				.iterator(); iterator.hasNext();) {			ZcEbPackEvalResult per = (ZcEbPackEvalResult) iterator.next();			ElementConditionDto eleDto = new ElementConditionDto();			eleDto.setProjCode(per.getProjCode());			eleDto.setPackCode(per.getPackCode());			eleDto.setZcText1(per.getProviderCode());			List ecbjList = zcEbEcbjService.getZcEbEcbjItemList(eleDto, mt);			if (ecbjList != null && ecbjList.size() > bjNo) {				bjNo = ecbjList.size();			}			providerBjMap.put(per.getProviderName(), ecbjList);		}		setPackEvalResultList(zcEbEvalReport.getPackEvalResultList());		getRequest().setAttribute("bjNo", "" + getBjNo());		getRequest().setAttribute("providerBjMap", getProviderBjMap());		getRequest().setAttribute("zcEbEvalReport", getZcEbEvalReport());		getRequest()				.setAttribute("packEvalResultList", getPackEvalResultList());		return SUCCESS;	}	public ZcEbEvalReport putVal(ZcEbEvalReport zcEbEvalReport) {		IAsValService asValService = (IAsValService) SpringContext				.getBean("asValService");		List purTypeList = asValService.getAsVal("ZC_EB_PUR_TYPE");		for (int i = 0; i < purTypeList.size(); i++) {			AsVal val = (AsVal) purTypeList.get(i);			if (val.getValId().equals(zcEbEvalReport.getPurType())) {				zcEbEvalReport.setPurTypeVal(val.getVal());				if (ZcSettingConstants.PITEM_OPIWAY_GKZB.equals(zcEbEvalReport						.getPurType())) {					zcEbEvalReport.setReportTitle("评标结论");				} else {					zcEbEvalReport.setReportTitle("评审结论");				}			}		}		for (int i = 0; i < zcEbEvalReport.getPackEvalResultList().size(); i++) {			ZcEbPackEvalResult zcEbPackEvalResult = (ZcEbPackEvalResult) zcEbEvalReport					.getPackEvalResultList().get(i);			List resultList = asValService.getAsVal("VS_ZC_EB_EVAL_RESULT");			for (int j = 0; j < resultList.size(); j++) {				AsVal val = (AsVal) resultList.get(j);				if (val.getValId().equals(zcEbPackEvalResult.getEvalResult()))					zcEbPackEvalResult.setEvalResult(val.getVal());			}			if (new BigDecimal("0").equals(zcEbPackEvalResult.getEvalScore()))				zcEbPackEvalResult.setEvalScore(null);			List ynList = asValService.getAsVal("VS_Y/N");			for (int j = 0; j < ynList.size(); j++) {				AsVal val = (AsVal) ynList.get(j);				if (val.getValId().equals(						zcEbPackEvalResult.getComplianceEvalResult()))					zcEbPackEvalResult.setComplianceEvalResult(val.getVal());			}		}		String content = zcEbEvalReport.getBidEvalOpinion();		if (content == null || "".equals(content)) {			content = zcEbEvalReport.getExpertOpinion();		}		content = content.replaceAll("\n", "<BR>");		content = content.replaceAll("\t", "　　");		zcEbEvalReport.setExpertOpinion(content);		return zcEbEvalReport;	}	/**	 * 	 * @return the providerBjMap	 */	public Map getProviderBjMap() {		return providerBjMap;	}	/**	 * 	 * @param providerBjMap	 *            the providerBjMap to set	 */	public void setProviderBjMap(Map providerBjMap) {		providerBjMap = providerBjMap;	}	/**	 * 	 * @return the bjNo	 */	public int getBjNo() {		return bjNo;	}	/**	 * 	 * @param bjNo	 *            the bjNo to set	 */	public void setBjNo(int bjNo) {		bjNo = bjNo;	}}