/** *  */package com.ufgov.zc.server.zc.web.form;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import org.apache.commons.logging.Log;import org.apache.commons.logging.LogFactory;import org.apache.struts.action.ActionErrors;import org.apache.struts.action.ActionMapping;import org.apache.struts.action.ActionMessage;import org.apache.struts.action.ActionMessages;import org.apache.struts.validator.ValidatorActionForm;import org.springframework.context.ApplicationContext;public abstract class AbstractActionForm extends ValidatorActionForm {  public static final String SUCCESS = "success";  public static final String FAILURE = "failure";  private ActionMessages messages;  private ActionErrors errors;  private HttpSession session;  protected ApplicationContext applicationContext;  private HttpServletRequest request;  private HttpServletResponse response;  protected Log log = LogFactory.getFactory().getInstance(this.getClass().getName());  public void initService() {  }  /**   * 分页配置     protected PageBean pageBean = new PageBean();  */  public HttpServletRequest getRequest() {    return request;  }  public ApplicationContext getApplicationContext() {    return applicationContext;  }  public void setApplicationContext(ApplicationContext applicationContext) {    this.applicationContext = applicationContext;  }  public ActionMessages getMessages() {    return messages;  }  public void setMessages(ActionMessages messages) {    this.messages = messages;  }  public HttpSession getSession() {    return session;  }  public void addMessage(String str, ActionMessage mess) {    if (messages == null) {      messages = new ActionMessages();    }    getMessages().add(str, mess);  }  public void reset(ActionMapping mapping, HttpServletRequest request) {    this.session = request.getSession();    this.request = request;  }  /*  public PageBean getPageBean() {    return pageBean;  }
  public void setPageBean(PageBean pageBean) {    this.pageBean = pageBean;  }
  public int getCurrent() {    return pageBean.getCurrent();  }  */  /**   * 页号,用于接收翻的当前页   *    * @param current   */  /*  public void setCurrent(int current) {    pageBean.setCurrent(current);  }
  public int getPageCount() {    return pageBean.getPageCount();  }
  public int getCount() {    return pageBean.getCount();  }
  public int getPrevious() {    return pageBean.getPrevious();  }
  public int getNext() {    return pageBean.getNext();  }  */  public HttpServletResponse getResponse() {    return response;  }  public void setResponse(HttpServletResponse response) {    this.response = response;  }  public Log getLog() {    if (log == null) {      log = LogFactory.getFactory().getInstance(this.getClass().getName());    }    return log;  }  public void setLog(Log log) {    this.log = log;  }  public ActionErrors getErrors() {    return errors;  }  public void setErrors(ActionErrors errors) {    this.errors = errors;  }  public void addErrors(String property, ActionMessage msg) {    if (errors == null) {      errors = new ActionErrors();    }    getErrors().add(property, msg);  }}