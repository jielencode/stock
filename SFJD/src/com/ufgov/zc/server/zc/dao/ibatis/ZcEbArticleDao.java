package com.ufgov.zc.server.zc.dao.ibatis;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.sql.Timestamp;import java.text.SimpleDateFormat;import java.util.Date;public class ZcEbArticleDao {  private static SimpleDateFormat dfDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");  private static SimpleDateFormat dfDate = new SimpleDateFormat("yyyy-MM-dd");  public static int getMaxArticleID() {    Connection conn = null;    PreparedStatement pst = null;    ResultSet rs = null;    int maxID = 0;    try {      conn = DAOFactory.getConnection();      StringBuffer sSQL = new StringBuffer(" select max(ID) MAX_ID from AP_ARTICLE ");      pst = conn.prepareStatement(sSQL.toString());      rs = pst.executeQuery();      if (rs != null && rs.next())        maxID = rs.getInt("MAX_ID");    } catch (SQLException sqlexception) {      sqlexception.printStackTrace();      throw new RuntimeException("insertArticle方法：进行数据库操作时发生错误！");    } finally {      try {        if (rs != null) {          rs.close();        }        if (pst != null) {          pst.close();        }        if (conn != null) {          conn.close();        }      } catch (SQLException sqlexception) {        throw new RuntimeException("insertArticle方法：关闭数据库连接错误！");      }    }    return maxID;  }  public static int insertApArticle(String title, String creator, String href) {    Connection conn = null;    PreparedStatement pst = null;    ResultSet rs = null;    Date date = new Date();    String dateTime = dfDateTime.format(date);    String strDate = dfDate.format(date);    int id = getMaxArticleID() + 1;    try {      conn = DAOFactory.getConnection();      StringBuffer sSQL = new StringBuffer(      " insert into AP_ARTICLE (ID,TITLE,CREATOR,CREATE_TIME,TYPE,ATTATCH_BLOBID,WROTE_TIME,MENDOR,MEND_TIME,HREF,VISIT_CAPACITY) ");      sSQL.append(" values( ");      sSQL.append("?,?,?,?,?,?,?,?,?,?,?)");      pst = conn.prepareStatement(sSQL.toString());      int j = 1;      pst.setInt(j++, id);      pst.setString(j++, title);      pst.setString(j++, creator);      pst.setTimestamp(j++, Timestamp.valueOf(dateTime));      pst.setString(j++, "01");      pst.setString(j++, "0");      pst.setDate(j++, java.sql.Date.valueOf(strDate));      pst.setString(j++, creator);      pst.setTimestamp(j++, Timestamp.valueOf(dateTime));      pst.setString(j++, href);      pst.setString(j++, "1");      rs = pst.executeQuery();    } catch (SQLException sqlexception) {      sqlexception.printStackTrace();      throw new RuntimeException("insertArticle方法：进行数据库操作时发生错误！");    } finally {      try {        if (rs != null) {          rs.close();        }        if (pst != null) {          pst.close();        }        if (conn != null) {          conn.close();        }      } catch (SQLException sqlexception) {        throw new RuntimeException("insertArticle方法：关闭数据库连接错误！");      }    }    return id;  }  public static boolean insertApArticlePortlet(int pletID, String articleID) {    Connection conn = null;    PreparedStatement pst = null;    ResultSet rs = null;    boolean ifSuccess = false;    Date date = new Date();    String dateTime = dfDateTime.format(date);    try {      conn = DAOFactory.getConnection();      StringBuffer sSQL = new StringBuffer(      " insert into AP_ARTICLE_PORTLET (PG_PLET_ID,ARTICLE_ID,PORTLET_TYPE,PUB_TIME) ");      sSQL.append(" values( ");      sSQL.append("?,?,?,?)");      pst = conn.prepareStatement(sSQL.toString());      int j = 1;      pst.setInt(j++, pletID);      pst.setString(j++, articleID);      pst.setString(j++, null);      pst.setTimestamp(j++, Timestamp.valueOf(dateTime));      rs = pst.executeQuery();      ifSuccess = true;    } catch (SQLException sqlexception) {      sqlexception.printStackTrace();      throw new RuntimeException("insertApArticlePortlet方法：进行数据库操作时发生错误！");    } finally {      try {        if (rs != null) {          rs.close();        }        if (pst != null) {          pst.close();        }        if (conn != null) {          conn.close();        }      } catch (SQLException sqlexception) {        throw new RuntimeException("insertApArticlePortlet方法：关闭数据库连接错误！");      }    }    return ifSuccess;  }  public static void main(String args[]) {    ZcEbArticleDao ad = new ZcEbArticleDao();    int a = ad.insertApArticle("数据库插入", "申万超", "www.sohu.com");    ad.insertApArticlePortlet(192, String.valueOf(a));  }}