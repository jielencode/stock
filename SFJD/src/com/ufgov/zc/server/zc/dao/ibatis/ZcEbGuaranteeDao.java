/** * ZcEbGuaranteeDao.java * com.ufgov.gk.server.zc.dao.ibatis * Administrator * 2010-4-21 */package com.ufgov.zc.server.zc.dao.ibatis;import java.sql.SQLException;import java.util.List;import org.springframework.orm.ibatis.SqlMapClientCallback;import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;import com.ibatis.sqlmap.client.SqlMapExecutor;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.constants.NumLimConstants;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.zc.model.ZcEbGuarantee;import com.ufgov.zc.server.system.util.NumLimUtil;import com.ufgov.zc.server.zc.dao.IZcEbGuaranteeDao;/** * @author Administrator * */public class ZcEbGuaranteeDao extends SqlMapClientDaoSupport implements IZcEbGuaranteeDao {  public List getZcEbGuarantee(ElementConditionDto dto, RequestMeta meta) {    dto.setNumLimitStr(NumLimUtil.getInstance().getNumLimCondByCoType(dto.getWfcompoId(), NumLimConstants.FWATCH));    return this.getSqlMapClientTemplate().queryForList("ZcEbGuarantee.getZcEbGuarantee", dto);  }  public List getZcEbGuaranteeDetail(String signupId) {    // TODO Auto-generated method stub    ElementConditionDto dto = new ElementConditionDto();    return this.getSqlMapClientTemplate().queryForList("ZcEbGuarantee.getZcEbGuaranteeDetail", signupId);  }  public void updateZcEbGuarantee(final ZcEbGuarantee guarantee) {    // TODO Auto-generated method stub    this.getSqlMapClientTemplate().update("ZcEbGuarantee.updateZcEbGuarantee", guarantee);    //update the detail data    this.getSqlMapClientTemplate().execute(new SqlMapClientCallback() {      public Object doInSqlMapClient(SqlMapExecutor executor) throws SQLException {        executor.startBatch();        for (int i = 0; i < guarantee.getDetailList().size(); i++) {          executor.update("ZcEbGuarantee.updateZcEbGuaranteeDetail", guarantee.getDetailList().get(i));        }        executor.executeBatch();        return null;      }    });  }}